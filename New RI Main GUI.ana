{ Analytica Model Nexant_Model_Templat, encoding="UTF-8" }
SoftwareVersion 6.1.0


{ System Variables with non-default values: }
Time := Sequence(Simulation_Start_Yr,Simulation_End_Yr,step:Timestep_Months[Timestep_Options=dT_choice],dateUnit: 'M')
ValueState Time: 2,718,0,371,692,0,MIDM
NodeLocation Time: 112,64,1
NodeSize Time: 48,24
NodeInfo Time: 1,1,1,1,1,1,0,0,0,0,,0,1,0
WindState Time: 2,102,82,1116,840
NumberFormat Time: 2,F,4,4,0,0,4,0,$,0,"ABBREV",0,,,0,0,15
Aliases Time: Alias Al1515102194
{!40300|Att_SlicerPopupSize Time: 262,1001}
SampleSize := 100
NodeLocation SampleSize: 240,64,1
NodeSize SampleSize: 48,24
NodeInfo SampleSize: 1,1,1,1,1,1,0,0,0,0,,0,1,0
UseTable := 1
TypeChecking := 1
Checking := 0
SaveOptions := 2
SaveValues := 0
OleAutoRecompute := 0
DisplayOutputs SampleWeighting: Variable Lower_Pctile, Variable Upper_Pctile
NodeLocation SampleWeighting: 368,64,1
NodeSize SampleWeighting: 48,24
NodeInfo SampleWeighting: 1,1,1,1,1,1,0,0,0,0,,0,1,0
ShowDescriptionMarks := 1
Sys_DefaultNumberFmt := 2,F,4,2,0,0,4,0,$,0,"ABBREV",0,,,0,0,15
Graph_AxisTitleFont := Arial,20,1
Graph_AxisLabelFont := ,14,0
Graph_KeyFont := ,20,0
Graph_KeyTitleFont := ,20,1
Graph_AxisTitleColor := 17408,29184,50176
Graph_AxisLabelColor := 17408,29184,50176
Graph_KeyTextColor := 17408,29184,50176
Graph_KeyLabelColor := 17408,29184,50176
Graph_LineThickness := 4
Graph_HLabelRotation := 90
Att_CatLineStyle Graph_Primary_Valdim: 1
Att_ContLineStyle Graph_Primary_Valdim: 5
Att_StackedBar Graph_Primary_Valdim: 1
Att_Stacked_Lines Graph_Primary_Valdim: 0
Att_AreaFill Graph_Primary_Valdim: 0
Graph_ColorSeq := [3855,26214,35209,57568,15420,13107,32639,32639,32639,0,0,0,34952,29298,56540,29298,53713,56540,56540,29298,55769,53456,44975,25186,65535,0,0,0,0,65535,65535,46003,65535,0,65535,65535,0,32896,0,65535,42405,0,0,0,35723,42405,10794,10794,65535,49344,52171,65535,65535,0,0,65535,0,32896,0,0,28784,32896,37008,0,32896,32896,32896,0,32896,37008,61166,37008,0,0,0]
{!40200|NodeLocation EnableComplexNumbers: 496,64,1}
{!40200|NodeSize EnableComplexNumbers: 48,24}
{!40200|NodeInfo EnableComplexNumbers: 1,1,1,1,1,1,0,0,0,0,,0,1,0}
{!40400|Sys_PdfSmoothMethod := 1}
{!40500|NodeLocation TextLocale: 624,64,1}
{!40500|NodeSize TextLocale: 48,24}
{!40500|NodeInfo TextLocale: 1,1,1,1,1,1,0,0,0,0,,0,1,0}
{!40600|Att_PrevIndexValue AllProbabilityBands: [0,0.01,0.025,0.05,0.1,0.25,0.3333333333333333,0.5,0.6666666666666666,0.75,0.9,0.95,0.0975,0.99,1]}
{!40600|NodeLocation MaxEvaluationThreads: 752,64,1}
{!40600|NodeSize MaxEvaluationThreads: 48,24}
{!40600|NodeInfo MaxEvaluationThreads: 1,1,1,1,1,1,0,0,0,0,,0,1,0}
{!40600|NodeLocation MaxModelThreads: 880,64,1}
{!40600|NodeSize MaxModelThreads: 48,24}
{!40600|NodeInfo MaxModelThreads: 1,1,1,1,1,1,0,0,0,0,,0,1,0}
{!50000|OutlinerState Sys_FoundSet: 2,345,94,1094,693}
{!50000|NodeLocation DecimalForCopyPaste: 1024,64,1}
{!50000|NodeSize DecimalForCopyPaste: 72,24}
{!50000|NodeInfo DecimalForCopyPaste: 1,1,1,1,1,1,0,0,0,0,,0,1,0}
NodeLocation Sys_ComparisonTolera: 112,128,1
NodeSize Sys_ComparisonTolera: 48,24
NodeInfo Sys_ComparisonTolera: 1,1,1,1,1,1,0,0,0,0,,0,1,0
{!50016|PlusOnTextReturnsNaN := 0}

DisplayOutputs Object: Variable Output_5, Function Sequential_Opt_PV0, Function Aggregate_Optimizati, Function MultiStage_CalibrPV0, Function Set_Start_Coeff_PV0, Function Sequential_Opt_PV2, Function OG_Multi_Stage_Calib, Function OG_Sequential_Optimi, Decision Dates_Incl_in_PV_Opt, Decision Opt_Settings_PV, Index Lidar_Locale_Type, Variable Zip_to_Locale_Map, Variable Accel_Metric_Diff, Index All_EV_Dec_Handles, Variable Lower_Pctile, Variable Upper_Pctile, Variable Payback_Time_by_ID1, Decision Opt_Settings_BESS, Variable Sim_vs_Act_Vehicle_2, Variable Sim_vs_Act1, Variable Sim_vs_Act_Vehicle_3, Variable Sim_vs_Act_PV_Insta1, Variable ACP_show_hide_node, Function ACP_Summary_of_modul, Variable ACP_Prefix_by_module
DisplayOutputs SysFunction: Variable Lower_Pctile, Variable Upper_Pctile, Variable ACP_show_hide_node
DisplayOutputs Function: Function Sequential_Opt_PV0, Function Aggregate_Optimizati, Function MultiStage_CalibrPV0, Function Set_Start_Coeff_PV0, Function Sequential_Opt_PV2, Function OG_Multi_Stage_Calib, Function OG_Sequential_Optimi, Decision Dates_Incl_in_PV_Opt, Decision Opt_Settings_PV, Decision Opt_Settings_BESS, Function ACP_Summary_of_modul, Variable ACP_Prefix_by_module
DisplayOutputs SysVar: Variable Lower_Pctile, Variable Upper_Pctile
{!-50299|DiagramColor Model: 65535,65535,65535}
{!-50299|DiagramColor Module: 65535,65535,65535}
{!-50299|DiagramColor LinkModule: 65535,65535,65535}
{!-50299|DiagramColor Library: 65535,65535,65535}
{!-50299|DiagramColor LinkLibrary: 65535,65535,65535}
{!-50299|DiagramColor Form: 65535,65535,65535}
{!50500|NodeColor MissingLinkModule: 65535,65535,65535}
{!50500|NodeColor MissingLinkLibrary: 65535,65535,65535}
NodeColor Variable: 65535,65535,65535
DisplayOutputs Variable: Variable Output_5, Function Sequential_Opt_PV0, Function Aggregate_Optimizati, Function MultiStage_CalibrPV0, Function Set_Start_Coeff_PV0, Function Sequential_Opt_PV2, Function OG_Sequential_Optimi, Variable Lower_Pctile, Variable Upper_Pctile, Variable Payback_Time_by_ID1, Variable Sim_vs_Act_Vehicle_2, Variable Sim_vs_Act1, Variable Sim_vs_Act_Vehicle_3, Variable Sim_vs_Act_PV_Insta1
DisplayOutputs Decision: Function Sequential_Opt_PV0, Function Aggregate_Optimizati, Function MultiStage_CalibrPV0, Function Set_Start_Coeff_PV0, Function Sequential_Opt_PV2, Function OG_Multi_Stage_Calib, Function OG_Sequential_Optimi, Index Lidar_Locale_Type, Variable Zip_to_Locale_Map, Variable Lower_Pctile, Variable Upper_Pctile, Variable Sim_vs_Act_Vehicle_2, Variable Sim_vs_Act1, Variable Sim_vs_Act_Vehicle_3, Variable Sim_vs_Act_PV_Insta1, Function ACP_Summary_of_modul
NodeColor Decision: 1,65535,32766
NodeFontColor Decision: 0,0,0
NodeColor Chance: 63993,42148,13107
NodeColor Objective: 3855,26214,35209
NodeFontColor Objective: 65535,65535,65535
NodeColor Constraint: 65535,65531,1
NodeFontColor Index: 0,0,0
DisplayOutputs Index: Function Sequential_Opt_PV0, Function Aggregate_Optimizati, Function MultiStage_CalibrPV0, Function Set_Start_Coeff_PV0, Function Sequential_Opt_PV2, Function OG_Multi_Stage_Calib, Function OG_Sequential_Optimi, Index Lidar_Locale_Type, Variable Zip_to_Locale_Map, Variable Accel_Metric_Diff, Index All_EV_Dec_Handles, Variable Lower_Pctile, Variable Upper_Pctile, Variable Sim_vs_Act_Vehicle_2, Variable Sim_vs_Act1, Variable Sim_vs_Act_Vehicle_3, Variable Sim_vs_Act_PV_Insta1, Function ACP_Summary_of_modul
NodeColor Constant: 63993,42148,13107
DisplayOutputs Constant: Function Sequential_Opt_PV0, Function Aggregate_Optimizati, Function MultiStage_CalibrPV0, Function Set_Start_Coeff_PV0, Function Sequential_Opt_PV2, Function OG_Multi_Stage_Calib, Function OG_Sequential_Optimi
NodeInfo FormNode: 1,0,0,1,0,0,0,,0,1,,0,0,,,,,16
NodeColor FormNode: 63993,42148,13107
NodeFontColor Text: 0,0,0
NodeInfo Text: 1,0,0,,,,,,,,,,0,,,,,0
NodeColor Text: 65535,65535,65535
{!50500|NodeInfo FrameNode: 1,0,0,0,,,,,,,,,0,,,,,16}

{!-60000|Attribute AcpStyles}
Attribute Prev_attribute
Title: Prev_attribute


AskAttribute Check,Function,Yes
AskAttribute Prev_attribute,Function,Yes
AskAttribute Prev_attribute,Module,Yes
AskAttribute Value,Variable,Yes
AskAttribute Check,Variable,Yes
AskAttribute Script,Variable,Yes
AskAttribute Domain,Variable,Yes
AskAttribute TableCellDefault,Variable,Yes
AskAttribute MetaOnly,Variable,Yes
{!40300|AskAttribute OptInitialGuess,Variable,Yes}
AskAttribute AcpStyles,Variable,Yes
AskAttribute OnChange,Variable,Yes
{!40700|AskAttribute CellFormatExpression,Variable,Yes}
{!50103|AskAttribute OnGraphDraw,Variable,Yes}
AskAttribute Prev_attribute,Variable,Yes
AskAttribute Script,Button,Yes
AskAttribute Script,Picture,Yes

Model Nexant_Model_Templat
Author: CWelch
Date: Tue, Apr 20, 2021 10:09 AM
DefaultSize: 64,32
DiagState: 2,57,24,1516,689,17,10
FontStyle: Arial,15
FileInfo: 0,Model Nexant_Model_Templat,2,2,0,0,C:\Users\cwelch\Documents\Repos\Nexant\SPIDER\New RI Main GUI.ana
{!50000|DefaultFontColor: 0,0,0}
AcpStyles: Navigation_style: Top_tabs~
Show_outline: No~
Show_tabs: No~
Use_top_diagram_size: No~
Node_drop_shadow: No~
Bevel_node_border: No~
Show_title: Yes~
Show_uncertainty_view: No~
Show_graph_table_icon: Yes~
Show_description: 20~
Show_index_menus: Fly-in~
show_as_tab: No

Text Te2003336963
NodeLocation: 564,372,-1
NodeSize: 516,332
NodeInfo: 1,,,,1,1
NodeColor: 3855,26214,35209

Text Te954760963
NodeLocation: 564,420,4
NodeSize: 508,276
NodeInfo: 1,,,,1,1
NodeColor: 65535,65535,65535

Text Te2095611651
NodeLocation: 564,92,-1
NodeSize: 508,44
NodeInfo: 1,,,,1,1
NodeColor: 65535,65535,65535

Text Te140803843
Title: NYPA Product Portfolio Model
NodeLocation: 584,100,-1
NodeSize: 200,20
NodeInfo: 1,,,,0,1,1,,,,,,1
NodeFont: Arial,24
NodeFontColor: 3855,26214,35209

Text Te627343107
Title: Key Output
NodeLocation: 816,420,6
NodeSize: 248,268
NodeInfo: 1,,,,,,1
NodeFont: Arial,19
NodeFontColor: 3855,26214,35209

Text Te1566867203
Title: Key Input
NodeLocation: 312,420,5
NodeSize: 248,268
NodeInfo: 1,,,,,,1
NodeFont: Arial,19
NodeFontColor: 3855,26214,35209

FormNode Fo333741827
Title: Input 1
Definition: 0
NodeLocation: 312,232,21
NodeSize: 232,16
NodeInfo: 1,,,,,,,80,,,,,,0
NodeColor: 65535,33410,0
Original: Input_1

FormNode Fo1100250883
Title: Input 3
Definition: 0
NodeLocation: 312,296,22
NodeSize: 232,16
NodeInfo: 1,,,,,,,80,,,,,,0
NodeColor: 65535,33410,0
Original: Input_5

FormNode Fo563379971
Title: Input 5
Definition: 0
NodeLocation: 312,360,23
NodeSize: 232,16
NodeInfo: 1,,,,,,,80,,,,,,0
NodeColor: 65535,33410,0
Original: Input_2

FormNode Fo1637121795
Title: Input 4
Definition: 0
NodeLocation: 312,328,24
NodeSize: 232,16
NodeInfo: 1,,,,,,,80,,,,,,0
NodeColor: 65535,33410,0
Original: Input_4

FormNode Fo294944515
Title: Input 2
Definition: 0
NodeLocation: 312,264,25
NodeSize: 232,16
NodeInfo: 1,,,,,,,80,,,,,,0
NodeColor: 65535,33410,0
Original: Input_6

FormNode Fo1454669571
Title: Output 1
Definition: 1
NodeLocation: 816,232,26
NodeSize: 232,16
NodeInfo: 1,,,,,,,80,,,,,,0
NodeColor: 65535,33410,0
Original: Output_1

FormNode Fo917798659
Title: Output 2
Definition: 1
NodeLocation: 816,264,27
NodeSize: 232,16
NodeInfo: 1,,,,,,,80,,,,,,0
NodeColor: 65535,33410,0
Original: Output_2

FormNode Fo1991540483
Title: Output 5
Definition: 1
NodeLocation: 816,360,28
NodeSize: 232,16
NodeInfo: 1,,,,,,,80,,,,,,0
NodeColor: 65535,33410,0
Original: Output_5

FormNode Fo246710019
Title: Output 4
Definition: 1
NodeLocation: 816,328,29
NodeSize: 232,16
NodeInfo: 1,,,,,,,80,,,,,,0
NodeColor: 65535,33410,0
Original: Output_4

FormNode Fo1320451843
Title: Output 3
Definition: 1
NodeLocation: 816,296,30
NodeSize: 232,16
NodeInfo: 1,,,,,,,80,,,,,,0
NodeColor: 65535,33410,0
Original: Output_6

Text Te141852419
Title: Category Y, etc
NodeLocation: 312,456,19
NodeSize: 240,64
NodeFontColor: 3855,26214,35209

Text Te779386627
Title: Category X
NodeLocation: 312,284,20
NodeSize: 240,100
NodeFontColor: 3855,26214,35209

Text Te1123319555
Title: Category Y, etc
NodeLocation: 816,284,19
NodeSize: 240,100
NodeFontColor: 3855,26214,35209

Module Model_Details
Title: Model Details
Author: CWelch
Date: Wed, Apr 21, 2021 2:25 PM
NodeLocation: 152,608,31
NodeSize: 64,56
DiagState: 2,2623,256,706,236,17,10
NodeColor: 65535,65535,65535
Pict: (00000000FFFE004A004600043505000089504E470D0A1A0A0000000D494844520000004400000046080600000075DB32B9000000017352474200AECE1CE90000000467414D410000B18F0BFC6105000000097048597300000EC300000EC301C76FA864000004BA49444154785EED9C5948545118C77BECADE8A5E5218422822882160A227C886827EAC57A28E9416CA16C2146A1322A2DCB1AB3D4C870A06268B3B2CCA8C422455A684ADA6C7130086DB515736672EA6F7D763A7C77AEB3DC3B77AEE7E187CD77CE3DE7BBBF39F79C7B67E6D427180C2A04D8606F860DEA71D1F36CFEE2A2F2B3FDD27605ADC884CDA54FB2CB6FE4B67EFE3688CB3F146C508B4FDF7FF45F76B8C2CD256145466C38D072FBE5EB49DCB968C10639DA7DFEBE302F77383BDF5D6325A66C2BF388390E5C99DF7EFAF6E314EE9C38D820C772D7A532EA6474668917970D57CF0A34BFFF94248E6448E9E9E5C306656E36362753E31815E890AB6735308F50DE8E13D5FBB83A326C5046B42D8F8CCE8F8D63030F0E655B829715A9626E802EF39E8E123628438DE2AF180F3C2C73741C1B17B412FEAB6935C18E2FFD29C723D73DE95A6F26071B94A106318F50ECE7AB9AF95C4256C07F39B59EF2C42A43F9E756D466535C0B3628C335E8AFCD7453028167A7D37FB6DE4D8E37104139D128C17C678E90DF43131DFBCECDF58A75E309E6111202418829214AC83F9410092544420991B0869033D35BC4BAF124E029CCED16F2AEA1EB29D73421815B39C5D4B9AF62E113088A371DEEC9ED5D39FDFE4B799A26A4F3B37764C7C9E4369262253052284FD384005CA7BECA451E2EA97880CB17CF57628EA60A49049410094385E4B84FB970992412DEA737530C13B27DC712F6DAB5322F4AA776E5AE84FCC5502139870BAEE36E30A6DCDDE3A4E4FD57D262DE7E536DB1D330213D69305C3ABFBD4E22213801AE4E3424DC2AA38448D85A4863CBFB91F80E07E06B4FAE8E8CAD8588DFEE410A57474609915042246C25049DD19C0116EC3F5545758BAAEF648865F8F580782CA12704C789ED8402F9C8C79B2A04AFA9EC0F79C2BFFF874B16E809114F480FEE84959010C71B2E04C3143162CA3657F78F55969755BAC432AD65584F088E13DB0905F2918F3755888C5A6524941009254442098901092D6487D3E1E5BE208A8ACB4BBB7FE4E23B3B27E6ED379D5F516F9810F511E25F941089701A0C1735A94A282112B61512C9560C604B21E87494A3B839E560F979AE1CC745FA70172DA60B4187A3B34ABC281FBC2AFFBB2C85EE5EB16D8393A22724E19E7691F078611FCDD035056D8E13D54E9489B7F20B0B4E56719F9AE909114F480F2E3FD385004ECAC4EC238FE8B5960C604B210052C6649534FDA9FBEF93B35032809E9084FA4C55069D0F59BDEF2BD51F90BE3B9077A16E135797B0DDA42A8272AA4B24ADDDFFA1B4E6DE0AAE3EB0AD1051C6C42DA58FB00CD3EB50526C3987883268794522B41C032D29B61472BCAE2115E5D8AD8904282E4A19BEBEB0B5F2FEF379E271404F08EE80B9EDA81CC8433EDE5021B8AFE0CA01F6C68A3208C486AD2B7CCBC90046CF21866C31A34D8818015CB91ED12CBBD1B2B7AADE414262B60951DCA65A74ED4E065727528C14823702FB8C91774CB7A98AC36E6886B3ADE1D59BB15CBD48305288F8E810D38DCC401C2590C24D60916084109A8829DF986F7507584A3187502700AFE5993E6CF25CF533376E0882595BF3A36E6FDACEA3DD9FB213E1BC796C500B481187A1D5C1FC71F561D30CEE5CB460837AA0138891FF6B0A2B80CB190F9498FC43AD6E5AB0C1DE0C1BECBD04FBFC02C2832C96269DC3300000000049454E44AE426082)
AcpStyles: show_as_tab: No

Module Resource_Innovations
Title: Resource Innovations Colors
Author: CWelch
Date: Wed, Apr 21, 2021 2:25 PM
DefaultSize: 64,32
NodeLocation: 568,56,1
NodeSize: 64,32
DiagState: 2,154,3,1085,771,17
FontStyle: Arial,15

Picture Pi1110187139
NodeLocation: 220,128,-1
NodeSize: 156,72
Pict

Picture Pi556539011
NodeLocation: 220,272,-1
NodeSize: 156,72
Pict: (000000000000008101340004B60A000089504E470D0A1A0A0000000D4948445200000134000000810802000000C193D1BA000000017352474200AECE1CE90000000467414D410000B18F0BFC6105000000097048597300000EC300000EC301C76FA86400000A3B49444154785EED9D4D8EDB3A1280FB4E835E34F0CE91B517031FA5B77D801CC179AB003946EFB208B299B798590CE6273798299245B16451A2E427B5CBD2F741804B454A4D31FC4CD99694A7FF01B8E4C78F1FBF8E0D728253901339C129C8899CE014E4444E700A721E51CECBEF5F59D2A23DE212E43CA89C1AED88DF97839CCE41CE9D20B2FDB104E4F40F72EE04E4DC1FC8B91390737F20E74E40CEFD819C3B0139F7C7B89CDFCE4F9997B79F9ABC462A8D17AECFC49F5BD092FEA034C7F9F474FEA6D9C0CFB7174D0BA964BCF2BD41CEFD312267188473C6DE0225D660E2CF2D68C940CEBCA13D6A1B174CE5A0AE233DAD9C5FBF7ED5C87095444EFF54E59471571DE861C046BA523358474ACFE7979208E464ACA7DB94413EDC899093E773E5CFE9B661B7A1485E5BCA8CCA59369EE8819C972A8EDC2C727EFFFEFDD3A74F9F3F7F4EAB095995A414E93A723E02353947466619980BA21C167232CC3C5185105C1966A3FAFE248CDB746DCDB572C10463728686A470A407520B329ED4ECCF9C577E0ECD1490D33FF3E52C83D8C4C3602CD931B1ADADDF4C16A225B65A83819C994E37D303C1D8C0A031A1C0919F564EA1F3B36AA6809CFEA99ED65607BA4D76F130184B764C6C6BEBCF4F2686995146664E6BDBD5DEAA7FD7979D57720AC9CFAA990272FAA7FE8550187765707E7BBB1A98CB2343971C06D5C8B445921AF61B18C81BC86BCB9811397BBA5DF540AE53AFEC81A19C8268593553404EFFD4E514C2D853BA21284333D10D5B33581BA51D5D7218A4F86A27A629F60BA1D2BED4BCBC1379BD59CEBE93A607BA5CD73CA16CE581AA9C1320A77F46E5DC31CE07E56D20E7FEF02EA7CE527DB4EC569053404EFF3073EE04E4DC1FC8B91390737F20E74E40CEFD819C3B41645B0A723AE7A072B2A4457BC425C8794439E121404EE404A720277282539093CF9C775EB44D3000390F2AA746ABA23DBA04E49C0039917335A437BF7CF992BAB549AA899C132067554E7BEFC5CCDBA27AF77638675339FF3B0FE46C829C6372DA7BA4E6E8899C2AE7BF07C81B9C4606E46C829C2D39433CB89FB3D8DA65F29D96B6BA573695F35F7D52F708BA9E41CE26C8D990D3DE7C9CBD939CA64ABD20E943CA191A1EC94759C924427EF2D0A43745B97F1A744719CD4690B30972B63E730E27C9484C4BC60EE9ABC1EC97A2C4CFB7373DBEDCFE6126911E8B3043CE7FCC03399B20E7F4CC1986641E9043FD6C6658EA979A12E574206333129FBFC921CE90F3EFF340CE26C8D9FACC59F40C517FFC9A8C6C91C2D608F6404589E17B8BC9E831B50E4D7A53949B8FD447CE0990B3F98590513044893C48BBCC437F21D43BDC88C9C8216A889C1F0B7256E5DC395689F0F6D257AE9F1123FB8CFB29BD99949B03723641CE8A9C3A0AFB68D92E284A888857B20D331DF366CEFF18B4EF329A8D2067938F95F372927FA1D345D7C2EAF3EBBBAEDC8B43CF9C619234C8E9EB30936A06E6C9A9171964744783EB1090B3C987CBF92C642191F34E6CA484F4A628A7171918C44C8D0CC8D9E4E3E57CBDBC663DAD9C1247E2BC6A0AFA61997557033957437A5394D38B0C5A2067933BC8F9DE5956C4CB99F724AEBCA887975337D596DAAB829CAB21BD29CAE9EF982D90B3C95DE48CCEC9AB594DD366245899ED0CF574A6556F57073957437A53949B8FD447CE09EE246752EDD5C879255E5231392CF1E9B2959BC8B91EDAA34B40CE09EE25678AF319AB9857B3D3149F4ED1D30D38A89C7E166D130CB89F9C71AD5B0D7A96B3DA4028CD2B365E9B23CA090FC1C7CAE911E404A720277282539093CF9C775EB44D3000390F2AA746ABA23DBA04E49C0039917335A437D3AF9773E077CE26C8392E67EF1AF0C92BBE1F8D4DE5D4475FB640CE26C8392267B88D7157425A369553EF3A31C87B9B4606E46C829C553965D2BC7A344042947D399F7BCF26E94FAB579950FFED4D73339F27F0016C2AA7DE759249C72EE87A06399BAC25E75FFDA12D6B519373CCCDE85E57922D2BB50799505F550C618C72A53BD257A23B7DCF47165B1D58D84EE94D514EEF3A89E87E329A8D20679315E5FCDB6F7FF1B3AC26671EB99D6CB9A00CE140D6AE9033B67E17DF19ABC4A0595D221CFA223DA53745397DF4650BE46C829CD5D3DAAB11DBADDAFC60543732C3D2BB5194306F438A34331B392C9C467A5394D35BC25A206713E4AC7F2114668D32303BAFAC60FD2A8161A626A719FDF7A228111A73D6093FB6AE27E4C2A64A6F8A72F391FAC8390172D6E514826A993C5EAD6CB686996B7A195B3FC70B47FC16F4E4CCAD49ED434E3F20E7A89C3BA63F7366FD526C323D516720BD99949B03723641CE8A9C3AF90DD0E2C7C72891E64B1385C93FD9B9D44D95531F7D19D18ECB6836829C4D90F3D833A7205226EC141A59A66696532F32C8A45D09BA9E41CE26C8797839D7437A5394D38B0C0C62A64606E46C829CC8B91AD29BA29C5E64D002399B202772AE86F4A628A7BF63B640CE26C8899CAB21BD29CACD47EA23E704C8899CABA13DBA04E49C00390F2AA79F45DB040390F38872C243809CC8094E414EE404A720279F39EFBC689B6000721E544E8D56457B7409C839017222E76A486FA65F2FE7C0EF9C4D90B32A67773178205E105EEEDED8019BCAA98FBE6C819C4D90734CCEACA2DE42859C6DA4374539BDEBC4206F701A1990B30972CE90334C9D5DC65A7A15977936AC757760F9635339F5AE934CEA1541D733C8D904399BA7B59D6D53726619F30DCA79DD2756096969C6B4B8DC72BD00E94D514EEF3A89E88E339A8D206713E45C7A5A6B8A7AC982632B15A3447E372984037E7A79B9594E7DF4650BE46C829C2D39D5CEA69C5743DC35937226E4886E94536F096B819C4D9073E9CCA9EB01C999646F8CDF32B63F8EBE9C3AE1F71DBD5DCEF9487DE49C00399B9F39D3A0EDE43485E189AF395906791CD30F23678739C0C02D0720BDA9DACD43EA23E704C8599573E75495E8EB78BB9CA95B9B206713E4ACC8A953A0410BF6C2A633A73EFA32A2DD97D16C04399B20E7B167CE72367EE5E2ED72EA450619DD3B8FC65C0E72725ABB1AD29BA29C5E646010333532206713E444CED590DE14E5F4228316C8D90439917335A4374539FD1DB3057236414EE45C0DE94D516E3E521F3927404EE45C0DEDD12520E704C8795039FD2CDA2618809C4794131E02E4444E700A72222738053991139C829CC8094E414EE404A72027728253901339C129C8899CE014E4444E700A72222738654539BDA12D6B819CE094B5E47C5C90139C829CC8094E414EE404A72027728253901339C129C8899CE014E4444E700A72222738053991139C829CC8094ED950CECB29FD0736C2F3EBBB265746FEC69FDD37728253B692339879BAE8CA762027EC976DE47C7F7D1E3A6345EAE2109C4ECF71CDC6A928A28EC74D5E3517ABE40A7F6E66464E70CA267256DD4C7669B68B8360396BE3B012ADECF6154A55D4107651B7C58D202738C5819CC3648A0B51C4E6E637829CE0946D4E6BABCE34ED1A8B13CDCD6F0439C1291B7D212473A7B1E6F21AC2902B9F1F2B76D9B8BF8340B5A64DDE08728253369253087A29AA64504913A79A5D7DD3CAF6C38F97254EBB349B2DE649BA00C0273A488FCA93BE0280339013C029C809E0925FBFFE0F292E52C22D288E020000000049454E44AE426082)

Picture Pi1563171971
NodeLocation: 220,416,-1
NodeSize: 156,72
Pict: (000000000000008101370004EC0A000089504E470D0A1A0A0000000D49484452000001370000008108020000002AA46AB9000000017352474200AECE1CE90000000467414D410000B18F0BFC6105000000097048597300000EC300000EC301C76FA86400000A7149444154785EED9D3D92DB3C12407DA72D077311C70AB6E62893CE019C6E36FE2257F918CE1CB81C6DB01B6CED8FD38D761B400368FE080055D4A829BD57AA9A6613E4806D3C811A91F487DF919F3F7FFE0FC0313244D3587D40B0148E0196622978074B1FDAD2B73FBEF24A2FAD884BB0F4D12DD5E88EF8633B58EA162CBD5B4BFFBA052CF50C966269004B3D83A5581AC052CF60299606B0D433588AA5012CF5CCB0A5DF9E3F649E5E7F69728E343ABF727F1ABF6E434FA6A3D31CE7870FCFDF341BF8F5FAA46921AD39DFF8D660E93D316669188D238370831B7BD0F8751B7AB2B0346F688FDAC615D33838ECC8536BE9D7AF5F3532CC9258EA99114B6500AE8EF830722365AD19B567D63E3F3FD5442027633BDDA68EF6E54E849C7C7E5EF975BA6DD86D58253F7BEE9CB5B46EDCA840CE4B134792564B7FFCF8F1E9D3A7CF9F3FA7C5842C4A5256E93296FA66C0D23343B48ED00D510E2B3919E6A2E8440866AAD9687D7F12C66D4A5F73ABBCA2C1394B43475278A602A907194F8E4EE7D299A84B45052CF5CCC596D6D16CE265702E59686C6BDB779395A88B6DD6616169A678672A10D40D2C3A13563812D55A2A1451571515B0D4332367BCAB23DE264BBC0CCE250B8D6D6DFBF164629939CB99B9D46A37DBDBEAEFF5A5E9CC522189BAAAA880A59E19FAEB51188075947E7B9D8DD0ED91A12497C16A64FA22490DA71D0CE40DE4674F9D33964EBC9B5520B7596FEC81A5A582F8B9AAA880A59E19B254088350296351C668A28C5F336A3B6B0B25B90C523CDB89E98AFDEB51ED5FEA5EDE89FCBCD8D2A99CA6022557BA27D4AD3CB06A69032CF5CCA8A5778CF3D17919587A4F1CCC529DB7A6E8BA4BC152014B3DC35C8AA5012CF50C966269004B3D83A5581AC052CF60E9DD5ABA152C750B96064B79A59756C42558FAD096C221C0522C05EF6029968277B094CFA55E5EDA275880A58F6EA946BB920ABB092C6D80A558BA3F52D52F5FBEA4F276492DB1B40196B62DB5777E0CDE9D35B9B3C43957B5F43F636069172CED5A6A6FD51AF1144BD5D27F2D90773A8D0C58DA054B872D0DF1E2FED2AA6DC9E43B3F6D73AF5CD5D27F4E49E511743983A55DB074D4527B57741650729AAAED82AD87B434743C928F5209F97C20E576F0599B19525571EF1F86B45541B3112CED82A5C39F4B97D36624A62553C6AD8DBD53DDF8F5FAAAC737ED7FF2321D7B5D53DF9E5691AA8A7B7F1F034BBB60E9E05C1A466BF674E9A1CD2CD7FA65CD0D6BA0C4CFDFE480E291CF56340E52AA2AEEFD6D0C2CED82A5C39F4BABA7219A8E5193912D529807B76756DC3047AC47500EA4AE5A5660825455DC1B47DA6369032C1DFFEB91199B214A64114BE6D07F3D32872B07A4A139100923E191FCB52E0BA4AAEADF18D21E4B1B6069DBD23BC7BA11DE67EADB4AF6B1307DC769BF054955937B236069172C6D59AA03748AAEBB0BAA1BE2E839ED96464AA63193664BFF6DD0DA65341BC1D22EEF6BE9DB49FE854E6FBA14163FBE7CD785F787B9B45A5A4FE1231307ABA565826DCCA301A9AAB8A7572D6474D3C5850D58DAE5DD2DFD286433B1F4D65CC90DA9AAB8A7572D1844518D0C58DAE5FD2D7D797BC99E5A4B258EC499D6AC9886751EDE012CBDAEA57AD5420F2CED72034BBF17DDAA8139F33D192C3F54C8B753997C6BEB9DC0D2EB5AAADF87F6C0D22E37B134CA273FCD629A482341CFAC6968A773AF0ABC23587A5D4BC791F658DAE0469626E75E8CA5330393934966894F6FFB4B8AA5D7B4742B58DAE05696A6389FCC8A826B9A9AD5A753147657B03458EAE7A57D8205B7B3342E95C5E0693DE10D84B579C1C6FB81A5700CDED7525F60291C032CC552F00E96F2B9D4CB4BFB040BB0F4D12DD5685752613781A50DB0144BF747AA9ABE051D81EF4BBB60E980A5934BD13B179A1F8BAB5AAA4FF2EC81A55DB0B46769B80FE4AECCB45CD552BDE7C5206F721A19B0B40B96B62DAD4F2C9812EEB07C7E9E3C46653AD1CE32A1FDEBABE6EA46B7D6FFAA96EA3D2F9974EC822E67B0B4CB5E96FED91FDAB3F30C587A4ED22861599375ABAD1799D05E9D0C618C72A31B3277239CDBDB3E85E5C8A40AE508CE215515F7F49E9748DA4B41B3112CEDB2A3A5FFFDCB9FFCBCF6B7340FD8625D19B8D1C04CF6AF9233B6FD64D0DF10E3463CBEA7A7D95355563A9A0A3160A93EC9B3079676C1D2F619EF6CA096C5B675EDCC72EDCD58B8217DCBFE9977288364EBB33FCF215515F7F4CEB41E58DA054B3B7F3D0A33471DAC45306BDAB4496099B1ED73DC1BEBEF40CBD2103EEB4941EEBBAEEEF55CAA2AEE8D23EDB1B40196762C15827319335C8D86B5451EBCF38C6D9FE3DE587F073A96E638F5588E498FA1D773A9AAFA3786B4C7D20658DAB7F48EE9CDA559C510E779B5705E54A96A726F042CED82A52D4B75382ED0D5C7A7656988EBDC59CE0402B6D51A5255714F9FE419D1C265341BC1D22E58CA5C6A99FA274B8999936396EA550B19DD154FFADC0E9662E9FE4855C53DBD6AC1208A6A64C0D22E588AA5FB235515F7F4AA851E58DA054BB1747FA4AAE29E7E1FDA034BBB602996EE8F5455DC1B47DA6369032CC5D2FD4985DD049636C0D247B7D4CF4BFB040BB0F4A12D854380A5580ADEC1522C05EF60299F4BBDBCB44FB0004B1FDD528D762515761358DA004BB1747FA4AAE95BD011F8BEB40B96B62D2DD79B07E215E69299DC1F7268AE6AA93EC9B3079676C1D2AEA5D9C97063B7788AA57DA4AAE29EDEF36290773A8D0C58DA054BB7581A26D392B1BACEE23AF386A5E64D5EB7E5AA96EA3D2F99541541973358DA054BC7CF788B762D4BB395F9F12379D927D60DE969C6F458CF20B6215515F7F49E9788EE38A3D9089676C1D28BCF78CDAA49B2E2584FC5B891DF562AE18067CFFE1C44AA2AEEE9933C7B6069172C1DB65435ED5A3A1BEBAE695A9A9023BAD052BD33AD079676C1D28BE7525D0E48CE242783FD9241FE7E4C2DD55380A9AC975B3A8EB4C7D206583AFEB9348DDE62A959199EAF979375B4C7C17D184B0BE60003971C805455FD1B43DA6369032C6D5B7AE7ACBA31F5F2724B5379BB6069172C6D59AA93A24157DC0B579D4BF5499E112D5F46B3112CED82A5CCA5917AA23E93F2724BF5AA858CEE9D277D6E074BB1747FA4AAE29E5EB560104535326069172CC5D2FD91AA8A7B7AD5420F2CED82A558BA3F5255714FBF0FED81A55DB0144BF747AA2AEE8D23EDB1B4019662E9FEA4C26E024B1B60E9A35BEAE7A57D820558FAD096C221C0522C05EF6029968277B0144BC13B588AA5E01D2CC552F00E96622978074BB114BC83A5580ADEC1522C05EF602996827776B4D41BDAB3F360291C83BD2C3D22580AC7004BB114BC83A5580ADEC1522C05EF6029968277B0144BC13B588AA5E01D2CC552F00E96622978074BB114BC73454BDF4EE93FEF113EBE7CD7E4CEC8EFB87CDF580AC7E05A9606454F6FBA703DB0141E80EB58FAFDE5E3521E6B548943703A7D8C4B364EAB222A7BDCE44573B1496E70E95C8DA5700CAE62E9AAA44933CD96389896B3360E0B51CFB2AFB0568D0D6189CA169BC15238060E2C5D26535C89467637DF0C96C231B88AA5EBF274353B1727BA9B6F064BE1185CC7D2309B1A7DDE5E421872F533E68A66369EEE20B0DAD2263783A5700CAE64A9103C53D4CDE094264E6B9A4D95ABDB2F3F82D638EDD26CB6816A298073D2587D40D45200700B960278074B01BC83A500DEC15200DFFCFEFD7FBF7487989D608C640000000049454E44AE426082)

Close Resource_Innovations

Module Nodes_for_Illustrati
Title: Nodes for Illustration
Author: CWelch
Date: Wed, Apr 21, 2021 2:25 PM
DefaultSize: 64,32
NodeLocation: 264,56,1
NodeSize: 64,32
DiagState: 2,95,197,944,420,17
FontStyle: Arial,15

Constant Input_1
Title: Input 1
Units: UnitX
Definition: Table(Index_1)(3,4,5,6,7,0,0,0,0)
NodeLocation: 160,96,1
NodeSize: 64,32
Aliases: FormNode Fo333741827

Index Index_1
Att_PrevIndexValue: ['Item 1','Item 2','Item 3','Item 4','Item 5','Item 6','Item 7','Item 8','Item 9']
Title: Index 1
Definition: ['Item 1','Item 2','Item 3','Item 4','Item 5','Item 6','Item 7','Item 8','Item 9']
NodeLocation: 152,336,1
NodeSize: 64,32

Constant Input_5
Title: Input 3
Units: UnitX
Definition: Table(Index_1)(3,4,5,6,7,0,0,0,0)
NodeLocation: 432,96,1
NodeSize: 64,32
Aliases: FormNode Fo1100250883

Constant Input_2
Title: Input 5
Units: UnitX
Definition: Table(Index_1)(3,4,5,6,7,0,0,0,0)
NodeLocation: 704,96,1
NodeSize: 64,32
Aliases: FormNode Fo563379971

Constant Input_4
Title: Input 4
Units: UnitX
Definition: Table(Index_1)(3,4,5,6,7,0,0,0,0)
NodeLocation: 568,96,1
NodeSize: 64,32
Aliases: FormNode Fo1637121795

Constant Input_6
Title: Input 2
Units: UnitX
Definition: Table(Index_1)(3,4,5,6,7,0,0,0,0)
NodeLocation: 296,96,1
NodeSize: 64,32
Aliases: FormNode Fo294944515

Variable Output_1
Title: Output 1
Definition: Table(Index_1)(3,4,5,6,7,8,9,9,9)
NodeLocation: 160,192,1
NodeSize: 64,32
ValueState: 2,416,85,757,550,1,MIDM
Aliases: FormNode Fo1454669571
ReformVal: [Index_1,Undefined]
DisplayOutputs: Variable Output_5
Att_ColorRole: Index_1
{!40600|Att_ClusterIndex: Null}

Variable Output_2
Title: Output 2
Definition: Table(Index_1)(3,4,5,6,7,0,0,0,0)
NodeLocation: 296,192,1
NodeSize: 64,32
ValueState: 2,468,208,643,478,1,MIDM
Aliases: FormNode Fo917798659
ReformVal: [Index_1,Undefined]
DisplayOutputs: Variable Output_5
Att_ColorRole: Index_1
{!40600|Att_ClusterIndex: Null}

Variable Output_5
Title: Output 5
Definition: Table(Index_1)(3,4,5,6,7,0,0,0,0)
NodeLocation: 704,192,1
NodeSize: 64,32
ValueState: 2,454,187,767,520,1,MIDM
Aliases: FormNode Fo1991540483
ReformVal: [Index_1,Undefined]
DisplayInputs: Object Object, Object Variable, Variable Output_1, Variable Output_2, Variable Output_4, Variable Output_6
Att_ColorRole: Index_1
{!40600|Att_ClusterIndex: Null}

Variable Output_4
Title: Output 4
Definition: Table(Index_1)(3,4,5,6,7,0,0,0,0)
NodeLocation: 568,192,1
NodeSize: 64,32
ValueState: 2,241,54,657,516,1,MIDM
Aliases: FormNode Fo246710019
ReformVal: [Index_1,Null]
DisplayOutputs: Variable Output_5
Att_ColorRole: Index_1
{!40600|Att_ClusterIndex: Null}

Variable Output_6
Title: Output 3
Definition: Table(Index_1)(3,4,5,6,7,0,0,0,0)
NodeLocation: 432,192,1
NodeSize: 64,32
ValueState: 2,430,240,663,429,1,MIDM
Aliases: FormNode Fo1320451843
ReformVal: [Index_1,Undefined]
DisplayOutputs: Variable Output_5
Att_ColorRole: Self
{!40600|Att_ClusterIndex: Null}

Close Nodes_for_Illustrati

Close Model_Details

Module Other_Output
Title: Other Output
Author: CWelch
Date: Wed, Apr 21, 2021 2:25 PM
NodeLocation: 472,608,32
NodeSize: 64,56
NodeColor: 65535,65535,65535
Pict
AcpStyles: show_as_tab: No

Close Other_Output

Module Other_Input
Title: Other Input
Author: CWelch
Date: Wed, Apr 21, 2021 2:25 PM
NodeLocation: 312,608,33
NodeSize: 64,56
NodeColor: 65535,65535,65535
Pict: (000000000000004C004B0004C805000089504E470D0A1A0A0000000D494844520000004B0000004C0806000000254B4A52000000017352474200AECE1CE90000000467414D410000B18F0BFC6105000000097048597300000EC300000EC301C76FA8640000054D49444154785EED9B4F685C5518C5BB7467777625AEC48D208850A18B2C440A2274A9AEC44555DC28B8483712108C2E6205C52A2A11B4444BAD12FC43091AC59660290C96A254A8A142A860D02AB53593998C73425E39EFCE39997B67DEE4E5A56FF183E4DCEFCFFD0E33F3EEE4E5EDEA743A359148B14623C53269FF367F6075EEE07CEBE2ECE36ABD4CA45826CDCF1E5E5CF9F0DECECAB1B1BFD47A9948B14CD68DDA205C2B1B2996496D5602B55909D46625509B95406D5602B55909D46625509B95406D5602B55909D46625509B95406D5602B5590954DEACB9F3BFEE1FFFF8EBC30FBCFCC1C2AD075FE90CC29DCFBF71F9E8E9737DFFFA196B16F674DF0BEFFEAC7AC570DB3353D71F9A9A999F38F1DDE4998B4B7B558F1029665C6FAEDEF2DCD1934754B341C006551F26D6ACBB0FBDB5A87A0C0A4CC3BCAA578614339E7EFFCB69557850504FF56162CD7AF5AB8571D56318FAED4F8A002F732E94F2721D8658B38605AFA2EF2F5C1A7BE29DD9199EF3F8999F1E51F1408A805F5593B3A72654CC28D82AB3187C1E67B33EF6E6894F550C9022D8F7E274232B7069F9CA1D2A6614946116E6CB66BDFDD9D7EC5D2529822C19B08EFB7A376E5725B27AEAD0CCDAB5E53D5C2F84E3C33566EDEFC5BB707F91E363C1FEC3FB926E5E468AC025373F79F0B2DA402CADF3D3E35C2F8463C335A6B53031CDB1C9CCDC9FBB32BB79192902972C1B4702A3D7FEBC700FD70BE1F8708D692F9DDE8F1BB11C9F0AD773F33252042ED9352B8AB2EABB7919290297EC9A154559F5DDBC8C14814B76CD8AA2ACFA6E5E468AC025BB664551567D372F2345E0925D33C9CA3FBB5B3FBE3D81E3865C1724D5EF820B46EBECD4E1B5AB4B51674157DFCDCB4811B864D74CD1FAE1A523592C4C53312129F5D7AF881BB13873A9981057DFCDCB4811B864D74CC1668118C3383E5C63D68DEA9E95B2D8CA9B85B74678DAEF6718C7866B19EDDFCF8EB151386FF53BBF65B8FA6E5E468AC025BB660E69D826A7788E0BD7004CC91D46138C02AEBE9B97912270C9AED96648C3CCFF8C724CB886EF83C318055C7D372F2345E0925DB37EC41AC6EBACF7E40F601470F5DDBC8C14814B76CD6288318CD732AD27AFFB7985CFAD6C3D05551FB87919290297EC9AC5D2F356EAC286B1BE1E7F6D794F8F51DD2B61169F4A583FC3CDCB4811B864D72C859E0FE92EEDC593EB7FCE650D87DAE6178F366E68431A0572F54977F33252042ED9354BA5C7B00D23B87ED14601AECFBA9B97912270C9AED92028C3B83EEB451805B82EEB6E5E468AC025BB6683A2DE924DFA19A47CB7EC07D765DDCDCB4811B864D76C18946119EE3C36285C9B75372F2345E0925DB3615186156D14E0FAACBB7919290297EC9A1541FB8F737B9B1FEDBB8ADACDB927BF5131C3E2F6EFE665A4085CB26B5615DCFEDDBC8C14814B76CDAA82DBBF9B97912270C9AE595570FB77F33252042ED935AB0A6EFF6E5E468AC025BB6655C1EDDFCDCB4811B864D7AC2AB8FDBB7919290297EC9A5505B77F372F2345E092B959D5E1B9DCBC8C14814BB65F762B08CFE5E665A4085C72ABF1FAA46A5C35709B8EE772F332520431C93B899879A5086292771231F34A11C424EF2462E6CDFDF279E3970345FF33FE66A057CC5317603BEC2DB7213C32A2124749CC5317603BEC2DB72195B015F01E1C2A6F2BE03DD80DB13E0AB8572A61ADA271BDA28246015EE2DC2F85B056D1B85E5141A300CF0271BF58F0949AAA5724DC8FF5A8A09B0DE7432E88DF1AFD9EBDDBC9449985273BB3203CCFC76B370BEF7DDB782AF300672D5ECB058EE281C72A8347EBD89F9C5978EB0DF31CF44E02AFAA2BFFFEB79BFDC999056018AE54659C98B70378DE1057DCD02890FBA56673A458A3E8ECFA1F3436EF38348528640000000049454E44AE426082)
AcpStyles: show_as_tab: No

Close Other_Input

Text Te1376550659
NodeLocation: 312,608,19
NodeSize: 240,72

Text Te583827203
Title: (Another way)
NodeLocation: 816,536,19
NodeSize: 240,144
NodeFontColor: 3855,26214,35209

Picture Pi861150339
NodeLocation: 192,92,37
NodeSize: 128,36
Pict

Include 0,LinkModule NYPA_Solar_Storage,2,2,0,0,NYPA Specific\NYPA Solar, Storage New.ana

NodeLocation NYPA_Solar_Storage: 1176,192,1
NodeSize NYPA_Solar_Storage: 64,40


Include 0,LinkModule NYPA_specific_output,2,2,0,0,NYPA specific output.ana

NodeLocation NYPA_specific_output: 1176,96,1
NodeSize NYPA_specific_output: 64,40


Module NYPA_Dropdowns
Title: NYPA Dropdowns
Author: CWelch
Date: Thu, Mar 31, 2022 12:18 PM
NodeLocation: 1336,96,1
NodeSize: 64,40
DiagState: 2,63,10,1691,681,17,10
NodeColor: 65535,65535,65535
AcpStyles: Show_Object:No~
show_as_tab: No

FormNode Fo732811555
Title: Output Ident
Definition: 0
NodeLocation: 292,224,4
NodeSize: 60,16
NodeInfo: 1,0,0,0,0,0,0,,0,,0,,,
Original: Output_Ident2

Index Output_Ident2
Title: Output Ident
Definition: [Building_Count_from1,Customer_Load1]
NodeLocation: 296,184,1
NodeSize: 64,40
Aliases: FormNode Fo732811555
MetaOnly: 1

Index Output_Titles2
Att_PrevIndexValue: ['Building Count from Facillity Data (Buildings)','Customer Load (MWh/year)']
Title: Output Titles
Definition: Create_Titles_List(Output_Ident2)~

NodeLocation: 160,184,1
NodeSize: 64,40

Button Result3
Title: Result
Description: Press this button to view the output of the selected variable on the left.
NodeLocation: 565,88,3
NodeSize: 45,16
NodeInfo: 1,0,0,1,1,1,1,,1,,0,,,
WindState: 2,2424,68,720,350
Aliases: Alias Al646983971
NodeColor: 65278,37008,6168
NodeFont: Arial,19
OnClick: Show_ACP_Window1(Output_Ident2,Output_Titles2,Market_Characterizat, 'Result')   {For an input node that you wish to view as an editable input table, input 'Definition' rather than 'Result' for the WindowType. }

Decision Market_Characterizat
Title: Market Characterization
Description: Choose which variable you wish to view.
Definition: Choice(Output_Titles2,1,0)
NodeLocation: 608,192,1
NodeSize: 72,40
WindState: 2,102,82,720,646
Aliases: FormNode Fo1269682467, FormNode Fo1827131683
OnChange: Result3

Text Te1269682467
Title: Market Characterization
NodeLocation: 360,136,-1
NodeSize: 336,112
NodeInfo: 1,0,0,1,1,0,0,,0,,0,,,
NodeColor: 65535,65535,65535

FormNode Fo1995297059
Title: Output Ident
Definition: 0
NodeLocation: 292,480,4
NodeSize: 60,16
NodeInfo: 1,0,0,0,0,0,0,,0,,0,,,
Original: Output_Ident3

Index Output_Ident3
Title: Output Ident
Definition: [Total_PV_MW_DC_Poten,Technical_PV_Potenti,Load_vs_PV_Potential,Potential_divided_by,PV_Tech_Potential_Pe]
NodeLocation: 296,440,1
NodeSize: 64,40
WindState: 2,2423,161,720,350
Aliases: FormNode Fo1995297059
MetaOnly: 1

Index Output_Titles3
Att_PrevIndexValue: ['Total PV MW DC Potential (MW-DC)','Technical PV Potential (GWh/year)','Load vs. PV Potential (GWh/year)','Potential divided by Load (%)','PV Tech Potential Percentage of Total (%)']
Title: Output Titles
Definition: Create_Titles_List(Output_Ident3)~

NodeLocation: 160,440,1
NodeSize: 64,40

Button Result4
Title: Result
Description: Press this button to view the output of the selected variable on the left.
NodeLocation: 565,344,3
NodeSize: 45,16
NodeInfo: 1,0,0,1,1,1,1,,1,,0,,,
WindState: 2,2424,68,720,350
Aliases: Alias Al1720725795
NodeColor: 65278,37008,6168
NodeFont: Arial,19
OnClick: Show_ACP_Window1(Output_Ident3,Output_Titles3,Technical_Potential_, 'Result')   {For an input node that you wish to view as an editable input table, input 'Definition' rather than 'Result' for the WindowType. }

Decision Technical_Potential_
Title: Technical Potential Output
Description: Choose which variable you wish to view.
Definition: Choice(Output_Titles3,4,0)
NodeLocation: 608,448,1
NodeSize: 72,40
WindState: 2,102,82,720,646
Aliases: FormNode Fo921555235, FormNode Fo484954403
OnChange: Result4

Text Te921555235
Title: Technical Potential Output
NodeLocation: 360,392,-1
NodeSize: 336,112
NodeInfo: 1,0,0,1,1,0,0,,0,,0,,,
NodeColor: 65535,65535,65535

FormNode Fo1377685795
Title: Output Ident
Definition: 0
NodeLocation: 292,728,4
NodeSize: 60,16
NodeInfo: 1,0,0,0,0,0,0,,0,,0,,,
Original: Output_Ident4

Index Output_Ident4
Title: Output Ident
Definition: [PV_suitability,PV_Capacity_Factor,System_Size_Constra2]
NodeLocation: 296,688,1
NodeSize: 64,40
WindState: 2,2451,172,720,350
Aliases: FormNode Fo1377685795
MetaOnly: 1

Index Output_Titles4
Att_PrevIndexValue: ['PV suitability (fraction)','PV Capacity Factor (%)','System Size Constraints (kW)']
Title: Output Titles
Definition: Create_Titles_List(Output_Ident4)~

NodeLocation: 160,688,1
NodeSize: 64,40

Button Result5
Title: Result
Description: Press this button to view the output of the selected variable on the left.
NodeLocation: 565,592,3
NodeSize: 45,16
NodeInfo: 1,0,0,1,1,1,1,,1,,0,,,
WindState: 2,2424,68,720,350
Aliases: Alias Al378548515
NodeColor: 65278,37008,6168
NodeFont: Arial,19
OnClick: Show_ACP_Window1(Output_Ident4,Output_Titles4,Technical_Potential2, 'Definition')   {For an input node that you wish to view as an editable input table, input 'Definition' rather than 'Result' for the WindowType. }

Decision Technical_Potential2
Title: Technical Potential Input
Description: Choose which variable you wish to view.
Definition: Choice(Output_Titles4,2,0)
NodeLocation: 608,696,1
NodeSize: 72,40
WindState: 2,102,82,720,646
Aliases: FormNode Fo303943971, FormNode Fo1558696227
OnChange: Result5

Text Te303943971
Title: Technical Potential Input
NodeLocation: 360,640,-1
NodeSize: 336,112
NodeInfo: 1,0,0,1,1,0,0,,0,,0,,,
NodeColor: 65535,65535,65535

FormNode Fo119394595
Title: Output Ident
Definition: 0
NodeLocation: 988,224,4
NodeSize: 60,16
NodeInfo: 1,0,0,0,0,0,0,,0,,0,,,
Original: Output_Ident5

Index Output_Ident5
Title: Output Ident
Definition: [Installed_Cost_Input,Equipment_Cost_Multi,DER_Cost_Change_Rate]
NodeLocation: 992,184,1
NodeSize: 64,40
WindState: 2,2451,172,720,638
Aliases: FormNode Fo119394595
MetaOnly: 1

Index Output_Titles5
Att_PrevIndexValue: ['Installed Cost Input ($/kW-DC, $/kWh)','Equipment Cost Multiplier (fraction)','DER Cost Change Rate (fraction/year)']
Title: Output Titles
Definition: Create_Titles_List(Output_Ident5)~

NodeLocation: 856,184,1
NodeSize: 64,40

Button Result6
Title: Result
Description: Press this button to view the output of the selected variable on the left.
NodeLocation: 1261,88,3
NodeSize: 45,16
NodeInfo: 1,0,0,1,1,1,1,,1,,0,,,
WindState: 2,2424,68,720,350
Aliases: Alias Al1452290339
NodeColor: 65278,37008,6168
NodeFont: Arial,19
OnClick: Show_ACP_Window1(Output_Ident5,Output_Titles5,Equipment_Costs1,  'Definition')   {For an input node that you wish to view as an editable input table, input 'Definition' rather than 'Result' for the WindowType. }

Decision Equipment_Costs1
Title: Equipment Costs
Description: Choose which variable you wish to view.
Definition: Choice(Output_Titles5,1,0)
NodeLocation: 1496,184,1
NodeSize: 72,40
WindState: 2,102,82,720,646
Aliases: FormNode Fo2065551651, FormNode Fo1021825315
OnChange: Result6

Text Te2065551651
Title: Equipment Cost Input
NodeLocation: 1172,132,-1
NodeSize: 452,108
NodeInfo: 1,0,0,1,1,0,0,,0,,0,,,
NodeColor: 65535,65535,65535

FormNode Fo1384370467
Title: Output Ident
Definition: 0
NodeLocation: 988,480,4
NodeSize: 60,16
NodeInfo: 1,0,0,0,0,0,0,,0,,0,,,
Original: Output_Ident6

Index Output_Ident6
Title: Output Ident
Definition: [Invest_Tax_Credit,Storage_KWh_Incentiv,PV_kW_AC_Incentive]
NodeLocation: 992,440,1
NodeSize: 64,40
WindState: 2,2451,172,720,638
Aliases: FormNode Fo1384370467
MetaOnly: 1

Index Output_Titles6
Att_PrevIndexValue: ['Investment Tax Credit (percent)','Storage KWh Incentive ($/kWh)','PV kW-AC Incentive ($/kW-AC)']
Title: Output Titles
Definition: Create_Titles_List(Output_Ident6)~

NodeLocation: 856,440,1
NodeSize: 64,40

Button Result7
Title: Result
Description: Press this button to view the output of the selected variable on the left.
NodeLocation: 1261,344,3
NodeSize: 45,16
NodeInfo: 1,0,0,1,1,1,1,,1,,0,,,
WindState: 2,2424,68,720,350
Aliases: Alias Al915419427
NodeColor: 65278,37008,6168
NodeFont: Arial,19
OnClick: Show_ACP_Window1(Output_Ident6,Output_Titles6,Credits_Incentives,  'Definition')   {For an input node that you wish to view as an editable input table, input 'Definition' rather than 'Result' for the WindowType. }

Decision Credits_Incentives
Title: Credits & Incentives
Description: Choose which variable you wish to view.
Definition: Choice(Output_Titles6,1,0)
NodeLocation: 1496,440,1
NodeSize: 72,40
WindState: 2,102,82,720,646
Aliases: FormNode Fo310628643, FormNode Fo2095567139
OnChange: Result7

Text Te310628643
Title: Credits & Incentives
NodeLocation: 1172,388,-1
NodeSize: 452,108
NodeInfo: 1,0,0,1,1,0,0,,0,,0,,,
NodeColor: 65535,65535,65535

Index NYPA_Scenario_Variab
Att_PrevIndexValue: ['DER Cost Scenario','Base Year of DER Cost Decline','ITC Scenario','PV Incentive Scenario','Electricity Cost Ratio Method']
Title: NYPA Scenario Variable
Definition: ['DER Cost Scenario','Base Year of DER Cost Decline','ITC Scenario','PV Incentive Scenario','Electricity Cost Ratio Method']
NodeLocation: 120,832,1
NodeSize: 64,40

Variable NYPA_Scenario_Select
Title: NYPA Scenario Selector
Definition: MultiTable(NYPA_Scenario_Variab)(Select_DER_Cost_Scen,Base_Yr_of_Cost_Decl,Selected_ITC_Scen,PV_Incent_Scenario,Cost_Ratio_Method)
NodeLocation: 280,832,1
NodeSize: 64,40
DefnState: 2,790,396,599,272,0,DFNM
Aliases: FormNode Fo261607715, FormNode Fo211013923

FormNode Fo211013923
Title: NYPA Scenario Selector
Definition: 0
NodeLocation: 508,832,1
NodeSize: 148,16
Original: NYPA_Scenario_Select

FormNode Fo951308579
Title: Select Output
Definition: 0
NodeLocation: 952,584,1
NodeSize: 224,16
NodeInfo: 1,,,,,,,190,,,,,,0
Original: Acheivable_Potential

FormNode Fo2025050403
Title: Output Ident
Definition: 0
NodeLocation: 988,720,4
NodeSize: 60,16
NodeInfo: 1,0,0,0,0,0,0,,0,,0,,,
Original: Output_Ident7

Index Output_Ident7
Title: Output Ident
Definition: [NYPA_Enabled_PV_Ado1,NYPA_Enabled_PV_Ado2,PV_Potential_by_Type,NYPA_Enabled_Storag1,NYPA_Enabled_Storag2]
NodeLocation: 992,680,1
NodeSize: 64,40
WindState: 2,2451,172,720,638
Aliases: FormNode Fo2025050403
MetaOnly: 1

Index Output_Titles7
Att_PrevIndexValue: ['NYPA Enabled PV Adoption (MW-DC)','NYPA Enabled PV Adoption Percentages (%)','PV Potential by Type (MW-DC)','NYPA Enabled Storage Adoption (MW)','NYPA Enabled Storage Adopt Pct (%)']
Title: Output Titles
Definition: Create_Titles_List(Output_Ident7)~

NodeLocation: 856,680,1
NodeSize: 64,40

Button Result8
Title: Result
Description: Press this button to view the output of the selected variable on the left.
NodeLocation: 1261,584,3
NodeSize: 45,16
NodeInfo: 1,0,0,1,1,1,1,,1,,0,,,
WindState: 2,2424,68,720,350
Aliases: Alias Al1989161251
NodeColor: 65278,37008,6168
NodeFont: Arial,19
OnClick: Show_ACP_Window1(Output_Ident7,Output_Titles7,Acheivable_Potential,  'Result')   {For an input node that you wish to view as an editable input table, input 'Definition' rather than 'Result' for the WindowType. }

Decision Acheivable_Potential
Title: Acheivable Potential Output
Description: Choose which variable you wish to view.
Definition: Choice(Output_Titles7,1,0)
NodeLocation: 1496,680,1
NodeSize: 72,40
WindState: 2,102,82,720,646
Aliases: FormNode Fo434622755, FormNode Fo951308579
OnChange: Result8

Text Te951308579
Title: Achievable Potential Output
NodeLocation: 1172,628,-1
NodeSize: 452,108
NodeInfo: 1,0,0,1,1,0,0,,0,,0,,,
NodeColor: 65535,65535,65535

FormNode Fo1586221347
Title: Select Output
Definition: 0
NodeLocation: 952,816,1
NodeSize: 224,16
NodeInfo: 1,,,,,,,190,,,,,,0
Original: Marketshare_Input

FormNode Fo1049350435
Title: Output Ident
Definition: 0
NodeLocation: 988,952,4
NodeSize: 60,16
NodeInfo: 1,0,0,0,0,0,0,,0,,0,,,
Original: Output_Ident8

Index Output_Ident8
Title: Output Ident
Definition: [Assumed_NYPA_fractio,PV_Init_Adop_Fractio]
NodeLocation: 992,912,1
NodeSize: 64,40
WindState: 2,2451,172,720,638
Aliases: FormNode Fo1049350435
MetaOnly: 1

Index Output_Titles8
Att_PrevIndexValue: ['Assumed NYPA fraction of natural market','PV Init Adop Fraction (fraction)']
Title: Output Titles
Definition: Create_Titles_List(Output_Ident8)~

NodeLocation: 856,912,1
NodeSize: 64,40

Button Result9
Title: Result
Description: Press this button to view the output of the selected variable on the left.
NodeLocation: 1261,816,3
NodeSize: 45,16
NodeInfo: 1,0,0,1,1,1,1,,1,,0,,,
WindState: 2,2424,68,720,350
Aliases: Alias Al244330787
NodeColor: 65278,37008,6168
NodeFont: Arial,19
OnClick: Show_ACP_Window1(Output_Ident8,Output_Titles8,Marketshare_Input,  'Definition')   {For an input node that you wish to view as an editable input table, input 'Definition' rather than 'Result' for the WindowType. }

Decision Marketshare_Input
Title: Marketshare Input
Description: Choose which variable you wish to view.
Definition: Choice(Output_Titles8,1,0)
NodeLocation: 1496,912,1
NodeSize: 72,40
WindState: 2,102,82,720,646
Aliases: FormNode Fo1508364579, FormNode Fo1586221347
OnChange: Result9

Text Te1586221347
Description: Marketshare Inputs
NodeLocation: 1172,860,-1
NodeSize: 452,108
NodeInfo: 1,0,0,1,1,0,0,,0,,0,,,
NodeColor: 65535,65535,65535

FormNode Fo320590115
Title: Select Output
Definition: 0
NodeLocation: 952,1048,1
NodeSize: 224,16
NodeInfo: 1,,,,,,,190,,,,,,0
Original: Marketshare_Visualiz

FormNode Fo1394331939
Title: Output Ident
Definition: 0
NodeLocation: 988,1184,4
NodeSize: 60,16
NodeInfo: 1,0,0,0,0,0,0,,0,,0,,,
Original: Output_Ident9

Index Output_Ident9
Title: Output Ident
Definition: [Market_Share_Illustr,Market_Share_Functio,LRMS_by_PV_Time]
NodeLocation: 992,1144,1
NodeSize: 64,40
WindState: 2,2451,172,720,638
Aliases: FormNode Fo1394331939
MetaOnly: 1

Index Output_Titles9
Att_PrevIndexValue: ['Market Share Illustrator (%)','Market Share Function','LRMS by PV Time (%)']
Title: Output Titles
Definition: Create_Titles_List(Output_Ident9)~

NodeLocation: 856,1144,1
NodeSize: 64,40

Button Result10
Title: Result
Description: Press this button to view the output of the selected variable on the left.
NodeLocation: 1261,1048,3
NodeSize: 45,16
NodeInfo: 1,0,0,1,1,1,1,,1,,0,,,
WindState: 2,2424,68,720,350
Aliases: Alias Al1318072611
NodeColor: 65278,37008,6168
NodeFont: Arial,19
OnClick: Show_ACP_Window1(Output_Ident9,Output_Titles9,Marketshare_Visualiz,  'Result')   {For an input node that you wish to view as an editable input table, input 'Definition' rather than 'Result' for the WindowType. }

Decision Marketshare_Visualiz
Title: Marketshare Visualizer
Description: Choose which variable you wish to view.
Definition: Choice(Output_Titles9,1,0)
NodeLocation: 1496,1144,1
NodeSize: 72,40
WindState: 2,102,82,720,646
Aliases: FormNode Fo971493667, FormNode Fo320590115
OnChange: Result10

Text Te320590115
Title: Marketshare Visualization
NodeLocation: 1172,1092,-1
NodeSize: 452,108
NodeInfo: 1,0,0,1,1,0,0,,0,,0,,,
NodeColor: 65535,65535,65535

FormNode Fo1482412323
Title: Select Output
Definition: 0
NodeLocation: 960,1264,1
NodeSize: 224,16
NodeInfo: 1,,,,,,,190,,,,,,0
Original: Rate_Value_Input

FormNode Fo945541411
Title: Output Ident
Definition: 0
NodeLocation: 964,1400,4
NodeSize: 60,16
NodeInfo: 1,0,0,0,0,0,0,,0,,0,,,
Original: Output_Ident10

Index Output_Ident10
Title: Output Ident
Definition: [Select_Customer_Rate,Additional_Value,Base_assumed_PPA_rat,PPA_Multiplier,Simple_LCOE_Discount]
NodeLocation: 968,1360,1
NodeSize: 64,40
WindState: 2,2451,172,720,638
Aliases: FormNode Fo945541411
MetaOnly: 1

Index Output_Titles10
Att_PrevIndexValue: ['Select Customer Rate','Additional Value ($/kWh)','Base assumed PPA rates ($/kWh)','PPA Multiplier (fraction)','Simple LCOE Discount Rate (%/yr)']
Title: Output Titles
Definition: Create_Titles_List(Output_Ident10)~

NodeLocation: 832,1360,1
NodeSize: 64,40

Button Result11
Title: Result
Description: Press this button to view the output of the selected variable on the left.
NodeLocation: 1237,1264,3
NodeSize: 45,16
NodeInfo: 1,0,0,1,1,1,1,,1,,0,,,
WindState: 2,2424,68,720,350
Aliases: Alias Al781201699
NodeColor: 65278,37008,6168
NodeFont: Arial,19
OnClick: Show_ACP_Window1(Output_Ident10,Output_Titles10,Rate_Value_Input,  'Definition')   {For an input node that you wish to view as an editable input table, input 'Definition' rather than 'Result' for the WindowType. }

Decision Rate_Value_Input
Title: Rate/Value Input
Description: Choose which variable you wish to view.
Definition: Choice(Output_Titles10,2,0)
NodeLocation: 1224,1360,1
NodeSize: 72,40
WindState: 2,102,82,720,646
Aliases: FormNode Fo2045235491, FormNode Fo362271011, FormNode Fo1482412323
OnChange: Result11

Text Te2119946531
Title: Electric Rate & Value Input
NodeLocation: 1172,1316,-1
NodeSize: 452,108
NodeInfo: 1,0,0,1,1,0,0,,0,,0,,,
NodeColor: 65535,65535,65535

FormNode Fo92000547
Title: Select Output
Definition: 0
NodeLocation: 960,1496,1
NodeSize: 224,16
NodeInfo: 1,,,,,,,190,,,,,,0
Original: Rate_Value_Output

FormNode Fo1165742371
Title: Output Ident
Definition: 0
NodeLocation: 964,1632,4
NodeSize: 60,16
NodeInfo: 1,0,0,0,0,0,0,,0,,0,,,
Original: Output_Ident11

Index Output_Ident11
Title: Output Ident
Definition: [Electric_Rate_8760,Electric_Rates2,Value_of_generation,Simple_LCOE_vs_Value,Manual_PPA_Rates_by_,Cost_of_Elect_Ratio]
NodeLocation: 968,1592,1
NodeSize: 64,40
WindState: 2,2451,172,720,638
Aliases: FormNode Fo1165742371
MetaOnly: 1

Index Output_Titles11
Att_PrevIndexValue: ['Electric Rate 8760 (Energy, Capacity, DRV) ($/kWh)','Electric Rates (Energy, Capacity, DRV) ($/kWh)','Value of generation ($/kWh)','Simple LCOE vs Value of Solar ($/kWh)','Manual PPA Rates by Type ($/kWh)','Cost of Electricity Ratio (post/pre ratio)']
Title: Output Titles
Definition: Create_Titles_List(Output_Ident11)~

NodeLocation: 832,1592,1
NodeSize: 64,40

Button Result12
Title: Result
Description: Press this button to view the output of the selected variable on the left.
NodeLocation: 1237,1496,3
NodeSize: 45,16
NodeInfo: 1,0,0,1,1,1,1,,1,,0,,,
WindState: 2,2424,68,720,350
Aliases: Alias Al1854943523
NodeColor: 65278,37008,6168
NodeFont: Arial,19
OnClick: Show_ACP_Window1(Output_Ident11,Output_Titles11,Rate_Value_Output,  'Result')   {For an input node that you wish to view as an editable input table, input 'Definition' rather than 'Result' for the WindowType. }

Decision Rate_Value_Output
Title: Rate/Value Output
Description: Choose which variable you wish to view.
Definition: Choice(Output_Titles11,5,0)
NodeLocation: 1224,1592,1
NodeSize: 72,40
WindState: 2,102,82,720,646
Aliases: FormNode Fo99078435, FormNode Fo1436012835, FormNode Fo92000547
OnChange: Result12

Text Te92000547
Title: Electric Rate & Value Output
NodeLocation: 1172,1548,-1
NodeSize: 452,108
NodeInfo: 1,0,0,1,1,0,0,,0,,0,,,
NodeColor: 65535,65535,65535

FormNode Fo1827131683
Title: Select Output
Definition: 0
NodeLocation: 264,80,1
NodeSize: 224,16
NodeInfo: 1,,,,,,,190,,,,,,0
Original: Market_Characterizat

FormNode Fo484954403
Title: Select Output
Definition: 0
NodeLocation: 272,344,1
NodeSize: 224,16
NodeInfo: 1,,,,,,,190,,,,,,0
Original: Technical_Potential_

FormNode Fo1558696227
Title: Select Output
Definition: 0
NodeLocation: 272,600,1
NodeSize: 224,16
NodeInfo: 1,,,,,,,190,,,,,,0
Original: Technical_Potential2

FormNode Fo1021825315
Title: Select Output
Definition: 0
NodeLocation: 968,88,1
NodeSize: 224,16
NodeInfo: 1,,,,,,,190,,,,,,0
Original: Equipment_Costs1

FormNode Fo2095567139
Title: Select Output
Definition: 0
NodeLocation: 960,344,1
NodeSize: 224,16
NodeInfo: 1,,,,,,,190,,,,,,0
Original: Credits_Incentives

Close NYPA_Dropdowns

Module Old_NYPA
Title: Old NYPA
Author: CWelch
Date: Thu, Mar 31, 2022 12:18 PM
NodeLocation: 1336,296,1
NodeSize: 64,40
DiagState: 2,1059,20,758,632,17,10
NodeColor: 65535,65535,65535
AcpStyles: Show_Object:No~
show_as_tab: No

FormNode Fo33701411
Title: LRMS by PV Time
Definition: 1
NodeLocation: 320,324,1
NodeSize: 256,20
NodeColor: 30583,48316,7967
Original: LRMS_by_PV_Time

FormNode Fo1696948515
Title: Market Share Illustration
Definition: 1
NodeLocation: 320,284,1
NodeSize: 256,20
NodeColor: 30583,48316,7967
Original: Market_Share_Illustr

FormNode Fo1439994147
Title: Logit Price Coefficient
Definition: 0
NodeLocation: 320,156,1
NodeSize: 256,20
Original: Logit_Price_Coeff

FormNode Fo903123235
Title: Logit Tech Coefficient
Definition: 0
NodeLocation: 320,196,1
NodeSize: 256,20
Original: Logit_Tech_Coeff

Text Te461869347
Description: Input
NodeLocation: 100,68,-1
NodeSize: 44,20
NodeInfo: 1,,,,1,1,1,,1,,,,1
NodeColor: 49151,49151,49151
NodeFont: Calibri,19

Text Te1531416867
Description: Output
NodeLocation: 196,68,-1
NodeSize: 44,20
NodeInfo: 1,,,,1,1,1,,1,,,,1
NodeColor: 63993,42148,13107
NodeFont: Calibri,19

FormNode Fo653512995
Title: Market Share Function
Definition: 1
NodeLocation: 320,364,1
NodeSize: 256,20
Original: Market_Share_Functio

Close Old_NYPA

Picture Pi1008177443
NodeLocation: 952,92,38
NodeSize: 104,36
Pict: (0000000000240045010C0004EC65000089504E470D0A1A0A0000000D49484452000001300000005B0806000000F4BFD9DE000000017352474200AECE1CE90000000467414D410000B18F0BFC6105000000097048597300000EC300000EC301C76FA8640000657149444154785EED7D076016C7B5B52836EE3DB1E3C4CE4B716CC7491C3BCE737AF2D2DB8BBB4D134280E8986A4C37C6F40EEABD8244AFA6F7DEABE85D7421446F92E0FCE7DCD99504080C382F7F88BF2BCDB7BBD3E7CECC997B6766678310A000052840B72905002C40010AD06D4B01000B50800274DB5200C00214A000DDB61400B000052840B72D05002C40010AD06D4B5F6000BBC47FCFE8BED85C416675A51FDF38F2EF74BDE86E03F439497C0CF032409F455F2800BBE4038FFB47117F64745FD265F4E459EA427391373225E17DE33FEAA7C8DC8BBC1802F43988FC544D88A3B8E460CC78AA9F007303548ABE901298DF0F1C6439782AB1BDBA87387F57BB98EFE220AEA3B9FB2B7D06E8A6C878EA719D0CD6A306060D1201DE06A8347DE1004CCDBF188C8A3B8A758FB2C902A8239532C590566057DD19597CBA29F46F02740BE4B3B198839E44E6A02C40012AA12F148009A68AD41504421779476312D43F8B2E15522525A0D1985A19A05B22C15591FD9582310E22172F06781AA0CBE93F1AC06CD64A2A8867DC9C17EF2F5242BA28E9C9D19E9367B1E2C031AC3C7812D97967B1F998335B6836E59F45F6D173589B7B16AB0E9FC6F243A7B084FE66ED3888CC953B103E670362E66563E19E23B8C0B82E10BC0A998EF5B50088DD1A5DBAC03A2A200F0B9177E102B2738FA3C044B0003F037439FD670398075CBE312A2A511717E51C45A321B3F1B586837147F5FEB82B6430EE0D1D8C076B47E0913A117894D7876B85E3A1D0703C40B7FB4206E1DE9081A854A33F2A54ED83A0777B23E89D5E34BD196E20C2E7AE73F28226F4AF4C3740374EE49F2F6D252F5A8FAF87F6C0B2BD47ED3940012A4DFF7100A666AF6979FD9AB648B1AB801D42AA1D2479910E9E3E8F2699F350A9D62004BDDD0D3FEE94851A2973503D6926FE316802FEDA6F1CFEDA7F2CFEDC5FD771F8C7C0B1783B6222AAC74D436DFA6990321B6DC7AC40F8FC8DC85AB51D83E66FC55D7563F1B38F86E0AC015600BC3E2FF9BCEB337D2DEBA807266CDC67CF010A5069FA0F94C0D4F0357B42558EBF52140B2F15984A229A47A9EB7BED3210F45A0FFCE4A34C8C5ABB0BA7A59E942217839B8ABF9175AF8539F9A8586310AAC4CD14665AA000807D4ED28043EA3F730382AAF4C5A4CD07EC3940012A4DFF790026CCD03C1451A488BF85A68AB8CE307AE3017CA95E34CA57EB87CE93D7E2844DAC78644BF4822C1FB6E46691D1F8E43F4BC6134A69D60B98B323177752BD7C277A32CECBDD9BC40F00D8E7201FC06605002C40D7A6FF1800F301C319428C4C113B81379792B47407EE0F1D840742FA62C8F2AD6627BA4477C32E0F9424B95DB2CE7335803940F28049E918D8019BF3CFE389C649F8CD27593863FE0300F679C8B1B904C0CA05002C40D7A0FF3800BB48532844D264FDC58B948880766357D864FB579B4462FCE6FD2E00C14DF063BFEA31D669CA3682AA120B0F14057C0EF9306DDB6154A8D61F4D86CEB567C51700B05B27C736076003A84296AFDA0F93B704002C4057D37F2680997A576000F5C1C8F9087ABD077EFCD150AC3EE856B20A8BE887005468582478F2C0C9BB94263D4A36737F4E4AD32E256D5F2DF2006CCCFA3D4CA3333A8C9D6FCF26D579F909D0CD93B1CD93C00CC0AA10C002125880CAA0DB1BC0ACA50B541C686803A940E5A237613F79CB6154ACD607BFEC3A027B4F3BBB4B94CA0A19CE369B520A5338D7594AC0C6E22B652EB7103049D5148839CB4D874EE057ED9290346FAD3D5FB20DB24AC305292181E01576C50FCC8395C7DDCB67697F76AF1FFFC677F4AF46DEC365762259384028C3D1B3BADC5E4FA56DAE7C76A4381D171CF9698804EE32A5ECCCE39561AE2663432900AB40009B72030076DD383DE39371D7B3F0ED2FF3537C23F25C3CBBCB9C3CF27C786E2577BAF84FCEA6E44E5496DDB56CAF7C0AD06D0C605695042303123576AA8C8502306D95B8E4E6A69A8D5885A037FB60DCFA5DF66C5AA5019033176D7737E3F09ECB2675240112A3A571E125E315F22AC02C4401FD9CA4374DE917F0597EE4D9411C1DEC5971D9137FF5E0D9C9C26C2435FAF9707371E6649EDC93FC98BB878C5E50FBF17DC8382BE7C1EEF56BBC72E9381FFCE5C5DC0D2CE86ED6CE976CECD7C0DAC56BE9893C7F0EA01C6F5C6EB470E2EE04F217C91907F6CEBBF8622ABBE5E53A64015C6A02B08A95FB61EA75014CF1291DE5978F56062F5D73968B5276EEE2A1B9BA8CCBD6EC7D0E7999357BE7E6DD59FE5DED782E24DDCBDE8575FE35583A5F2E8CCB8F5DC90FF9776E7E9DB95F4772717E64E3FC39E372EDDC02E4E8360630BFB1C8B009D06897BDDF2833576EC7A3B563F064DD68EC3E7ACAFC15A9517AD2D195E6DA2437A6A4F0FCD1D60CA5AB66A479B48B850C2F898F46ED5C521D2E12CAE48969B9554DC5E1C7E3EEF52B92B792E4BD6D1FEED639780D5EA0AC0E68E92A904BC0BCA86B085065A56775073F1DD771BDFC5AA40AA7520880950FBF0BF9243FEE2257EB305630E7D727BBF3A3B33C5AAACE8F97B6D9F25657F1CEB37696C69B6B90F97369DD2880B95494B62EE4A23788599A1CB92E328F2AB58BDB85D06D31F9EDA2D8D67974CF1EDF8BC9B3755E68FCF4690CBC2C253325F9A2F1CA2D1BC74BF9D5D5278517A74816A786445D5D3E5C183F6617FB179D6E6B09CC9A951A9EB52447E7E83270D67A94AB3A008FD48BC0C8B5BBCDBE481D86C0E246C09246630DFC3A24776B70BAB9A825013D95223E6AD1E0A2F69A79563ED96B4B3710FF9524A9CE5E772A4DF4A8CDB8524FAFA42253992FB75709D5692FE9B59C52E51529495BA1BD1E29EFEA6C7655FCD723FAF3FC5E990F14523E25DFCB7A8FF19A0387AC6F0AC0C87FC66F92EF95445E3A807751164BCF57F29754C0F065E5B3407FC650028AEA805E3415616DEA2A72929E71CCCA2130E3B3C25899CA0A7325D1B36906F46BED4A31CA8E4EC6168B58375F78BAED00CC6FF45685BC5783F46A159F6EDA87FFE93316416FF4C0732D933073F761B397926763221B856B40CEFF8D90D2B1E6A3B06C801B0E1C4587AC79689C3E1BA9CBB75A43B58E4E3F9BF28EA1D388F96892361343976CB1B0FB8E9D4387A173D0206301EA672E41C3AC056834742E1A327C8711F3B0F3F405642C5C83FA1933F1F198C5C839266951A3F0452CD87500CD87CC41AF4F9721F79C769829DF17316EDD2E34CE58840F862EC09A3D872C5F47CF9E45DF498B98CE0CF4F974090E9F6789C51FE65B1C1AB270031AA7CD41FB918BB0F7E809DA00872F142171FE26344D9F831AB19350237E263E18B60463D7EDC669F3A18ECE8ECAF83F5DBF03ED462D4148CA42548F9985DA7153D17CF802642CDF82E37E9DF0BAF1703EDA8F58C4F2CCC2F0559B0D540460A219DB0EA265E63C344B9B8B618B1C7FCA24395867BF091592E99C2828C488D51BD17BFA3A0C98B61E8B771D34D7424A32064C64C425E6A54010C672CDD99C437F6B3068CA724C5AB703A7184701A5B5691B76A0EFF4B5E83F6535A66FDC63729049D645E7591E07606E9EB5085B8F9D46E49CF5E847BF290B3620E7F81903F242B6092B9FFCF3CFE2600672CF9EC678A6D57B46363A8E5D83E659CBD1386B113E24CF7A4F5E8D31ACDBBC420FE4188FDAB7E0D0A649C412733206E9E60B4FB72D8059FDB151EAF1003B6B9321B350BE4A0F9BF00D8E9D866DC7CE386F1CC14C68B7BE6F3F667FA3E4DA8CC0C035AAA4B9EB09903D11542512F7D48EC094ADAE938886AFDE81A0CA11087A3D02BFFB64186D2E61F9C1E3B8A7663F04551D88A0EA89087A9BEE6FF6A19FFEA8F8765F2CDC9B8BDA91A31927EDDEE9838133D6585C4AAD4AC438FA635AD5FB6242F61EB33F56508497DA329E376311F4DE208C5DB5CDEC4F5F28C0EB7D86D2BFDECFEC837E043D9FA66DDA8F7B420621E8AD4178A64532724F9FC66602CDCFBA64305FE1087A97866E662AC7A26270386A244EC661A6253A4D1EFFB4530AD3631E6B24317E96E1ADFEF41BCDBC45E3F5C113B1FFB4A4532065C96696B12FDDFBE16FFD4708338C36E59EC4B79BA9FCEEF5ADA8E9AB3C973248757B9300265AB8E3001E0865F9AB305FAC87AF358EC09203C7E8C208293DDBE28A547DDAE49D2FC27FB7637EDE1B4C138E271A4662EBD133B84000FB9FCECAE70004558BC4C3E4DBD40DEE352681B16B0B6E85FB1881E6CF3D86937F8CA3CA40DC5BB92BA665EF34BF923CC53DA5E57E8035FBF2F1E287E9285F23867C8C4250481CAFACC7E0481ADA558F45B99A71F87E8761485DB8D90647A5634390243116D3630BC98BF40B4EB72F80A92259A9A2B61CBD82DEEC853F0C9C89D97BF3CD4E74C966EDDD8869528D496B374716D45A8EEBCC898B36B1D1B1B1D5CF64A38BC32FBA0FC3516FC41CB36E2F82EAA4D23E157FEA3DCEEC561C3E89871BB243D449C17D0D12F166E44C8426CD45B5B8D96896320B47CE5E40C2A2ED6CBC090C9780EA045FD151E6FDA5B66908AA49FB9078F4A154219ABFE7081EACCF461F9A8A6FB44AC18E930EA845AB0F1CC7138D9298BF147CAB590A76521A384790FF4D174AA5D5E3D8712290B27C374ED2EF6FD5F1AAB2E3D44AC553AD33D068D852D464BE1E6AC04E152AB01A88769973ADFC7ABFF3D5AE63988F54DC512709AF33EF61998BF1E5264C8BF9087A7B203E1AB5C0F290BC7C27F34CFE04C7E38DF04966778AD2CB5FFA8F671EE8BF6A3CA5C4D92691A8624C4AF4EBD42763BAEBA99F05602EACF33B6BFB21DC5D2F9EBC66DD342498B3BC7FED350AC755ED26C9A80DB8BA3A42E9F3071D87B1FCE908AA9D8E479B24633DEB4A94B67207CA8732AFF5B2AC8E7FD76B2CA54C9786A5E7499451F336A2623502723DF2B27A0CDE899A44298ECEF2CB76A710A527DD67B20CE5146F9D21086AC0BA555BA9C2C1808380D585C0AC2EDD6A24A23C07BC766397D93E464D05685E4FB25C490B76717ED1E9F60530D5292B514FD52226B0A1C5E0B5A845485BEC462E8DB46E4B851A93143CFDDD4AA5338C81A06BC0498B37B223B3A1D51B8AF275D9F8D9F03A4FD2F60960FCDA1C54AC4D000889C41FFA8D667AC0FA8327F07803FAAF9581279A2761EF39D7F84B938EE979BC61B201CF775AA71A20CECBC9C37D61EC8C61EA8802B619E6B7C7544A800487A06AB1A81633D5EC04E42665923A8E2698AB23500A693F7E195257EFB14E2870FC73FFD1C69BA1AB0832D50832B586E0A9E61958B85F528AA3E8851B71676D76A85A9978B24E0436505253CC3FE93A91F10AC0123075479EF9ED46F52BA806E32638BEC9F28A5257EC44859A0CCFF4DE8E7400F6D198257C9694918C9F761E8E83E75C37BC0AB87C92F5CD0098E777C6CE5C3C508F65AF9D8172F50904F586A05CF508F4999B6DEE92A0FC7A3C42A9FD471D47126C09D6B593F104C1781DA544D1399A37077ECABA8D41B97A740F8940C2D2CDE6E6A478E0E099F378A1358152E1EBA4E191FA7158B2D7F145EAA39B4AD34F0980CDDA7688752AFFACD3B0543CDE22135D262C471AD5FB7E3356E2B7BD29898726A0421825E3D064DC5B2B0AD3B67A1BAF253D6A3ECD0662677515296B2A23FF5CDFF0CB5B2A006F5D78B9BA679F74EB4AE73CE9BE24F722C1B16C25119A17EFC7B5BDD23E45AE7E3DE3FEBD67FF4A79D67F2C26E55917FD30ADABDC2FA7DB76125F1291CEF7120D5DB9930D83232147C33BAB0FC0A4EC1C7930E6D8C42E3BB835A8CF6046D9242696805FF2E26C366849606A846C8C35D3F164A3746C397ADAF69DD9C85D33167FE8EB002C9B00F6447DFAAF938107DF4F43F8BC2D18B3760FC667EFC269496E8C56EF64FEAA3B47718EBC1543C3316BCF41C42FD8E280A83EA584D078FCA86D3AF65392D10BE3028C2076CC5882B54892859BE902769FBA80E73FE4C84E80FB6ACBA1F85E17760AAA7D0F85C5612E4151141ACDCE598D204375A5E5888566E733E7382F3FE9C28E1D4209812A54FA924DE6F293AE94E26AC4E3AE3A5198B9C749B9FD66AF75790C8EC51B031C80A5AFD8413588E5AD1E8F6A49333176FB613C5C87698524E2CB8D12B06097372FA941C14BF32A92F54D01988B67E6CEC378B01ED30E237811C0CAD523C0D44A261F12B0E9880327B7F9B8C824B0173F1AE524C83AE978E2FD6464E7BAB941D1D27DC7F068434ABF9438836A2693A719D8774AD0E61604DA0C9F6FD308414AA35A04DA8F5D62E194177F6BCE95347BDB41DC5B9703555D4A760428F1B4447E06F2D9A05F1F34C9F81CD480EDAB5A1C5A0F5F646EA6BE4A83F0B40ED171A6B3F76C210E9F2BC259C72E23496C3A4BCDDF682DD2528EFFA4F9C04B456E7ED327C9778EC44FA6433F26F97974AED89DC4B0DA04AE557DF1437496E630D5F27D670A70B2142AB9DD018CF2A2C294E4FD7C716E1CE59E2D403EEB4464F9625BB73E67FFB22F89B334DDB600A60ECBB188E572C55B937B1CC1C39621E8AD5E8898B9DE7922F3D449F4E7D85C3613AE4F0C59168051D47FA0593AEE6C4829AC72026A254EC7B02D8728A1B043501DFC4B9F3116620D01EC91FAEC0894062AD4A75F7578016DD5AE98B5B3A4537E307631DDD4F1A3D19C9253CBE1CBF91C474982A331E3FC72930464EE388C17DAF3B966229E689A84B5F9A72CACA04B5CF03B4D22F3582198A05187E057871D8660D238638EB94925F9534F825170123B511C1216385E99B4EA71A93655C9A060AABD94DCBA4E5A6DF1FFBC9B803011778425A0E1F0C5E83E7E31BED69471D76679DF1B8CEEE3165BD8F4653B682729281E2FB1837EA72381996A70790258DF390E708BD8400B4D0DBB467DC8FA16006CD676AAD775592EF23AA821F3C5BA3110AB1A87CA83A73975CC4A73117994C0BEFF11F34615DA07B00D1E8079D1E14349B352EF0CA462D169DC0AB35F74201F8F108C254505D58CC78BEDD30824AE732A3F927ACA02B059DB0FA2527D82535D8593343A06C72E0814BD554E52CAD26DE43381B101EB99EDA10AA56C39A90D8BE47BFAB6BD689A36032F77188A6FB4CDC2B7DA64E1D54EC3D17ED442ACDAE706291D1D25E0D89177028D5367E0279F64E12FFDC6E0D30DDA13C9D8046004AA53F4F7F1E805F869C70CD4889D8A2D478E15838EF8B4F1601E6A444FC14F3FCE4258CC146CDC972B6BD6A1F8081C385388D8D9EBF047AAD9CFB7CEC23334AFB4198266E933B174FF11F3734903759176005CC484D53BD83786E3C75D87A333F9BB2E271FF539D07DA375025E6E15CDBEBB0AE7BD3A35E9D1A19FC55316DDBE12181BA2B5116334B0F3F8397CB755121EAF17855587BC86E8FD89E3CE9BE7F9A688CC2303AF02308EDCBF0F9F81EA59041EAA63778725E22F317350A9091B5E75DEF71D6B2156690EAC816BEC151BA4E26B541BBED52C032F368F6705E715E768ECAA5DA81812C5CE94826F741885EFB61F639DE3E703A7E3D15663503E2C19BF193413F73566E30F49C21FFB8CB3F916913A8B8D51543354468DEA7F1F3C95FE388AD74AC47F7D908CB5941045E2CC2F7B8D33A949E5885FB4C1ECA5A2F8E7A5D5CB9CE7DC09829D272CB1B87FF10941AF26D36E4050A46A15F45E04F39A813B2851BC17FE290E9D71AA71FA32AAA7A102F8243CD96A281E6820904BB1C9E9F6E3575879B55D411DC8556019246BAFD1DE1880B9FBD994F6EEAF9744C0910AC9BC4ADAA17A588E125979AAB5094B37398FA43C4A2D3FB23930FABB12C03CC962C789B3F84E2B0D18ACBF5A296C5F69D843E06B3A74B6D5B9CD83126C12E63B1E4A2A7100E6CC953473DB615452FEEA5272AF958457BA4C449E491D0526218986AEA2CA4FE02AAFB9B0E0180413349CCB4503AF0E6317E1DEDA035807E47F0D964FF5545DF3678C9752F557EAC72266F67AB55AA38D04DB2F85F43737CD55FEAEDB309C55845EFEE65222BE2B7820DD59C6B7FBA1D71407D2AE2500CD3328F1BFD5D7D22AFF6E1F4CC9DEE1B9683EF6305EE9C47C5665BBAD4E7E288D100234C1598B1A5F6A148DACE5CEBFBD5EC76B70CC445BE0D17C6A45B689AF7DA0C181F957FAEFC6E1BFA8CAE79C706DD5B6A0309FE2D0B5E83606307538BF6A41142763DEED86F8A55BCCCE44565E4D4AB3991FB52EB9DC2C295C19005633056F0CE48875E63CC1860DB23A8D5497466CF021B1F853DF71166275EE493CDA80954A95E1B1666998B23B0FFB4E9EA73A721E17A80ED88BE7241D6BFDED16AC7802983A6050583AD5D104F49C9B8D9FF51618B123D2AD9CA48BE0047C3CC15BC55378E58F896944D56B52A288B91B514E52181B57D5246FAE8C391227FED64F13EACC1355959E040891DE625050F1ECB508AA98D631C23178F66AE3EF2FA44286A6E18E7AA978A6E348DC2D298292E163CD52B1DA0347513A1B6CC51A4C37381E6F26CD41AF999B180F3B1B01FC9E5A91C8E4086CC4DE5E7AFFDE6524EB5B00B0393B0EE15E4938E45D39F2FBD98E13F19D4E5487C94701F9B36D92B0D3D440AA2C04A29729B51880D1FF13EF271503980AEC1445206EC10694AF3ED8EAB6626834EA8F598B6FB721F0D5A4345D3D09BFED473550795018D64559C0E5D3ECED0770773DD6713D0E2CB593F0EA27A329015DEEBF511AA55F8251B9FACC5BD558AAAA4EB21585CFC946F92A042F02AE34807BEB50CAFD280B3FE83004956AB1BE242986A6E0BE90C118B3D6AD862AF6F7A2A630CE388649E4609A8815079D3A2DFA68E27A96238AE9A5999FBF0E984009C8B99D240B7ED39D6A360752A9E2CFB5C9A0C4E506AA4DACF3673F4822F030DEDAD42EC22889929FDF635EC4EBA0BA2C63700A9E6C9AC8F671C255294D58D22CDA93070DA8466B1A866DF0E99619F8EFCEA3F020CBF06B4A7A47CFAB950AF0C84FF2C7EF7B65D16D0C60246B2C6E65E67F7B0CC7037592B0E9841A9EF47B37DDE870DFDD5D870FD72186BD0680FDADF778B31BBA7A1B2A69595C13EE0DD5B8E3F0674A604A75CDE11378CC002C1D4F364BC1F6339A2DB89C043CCA75E52882301BAD35C4BAE978B47E12561D3D457572211B0AD3347B3656AA679336EE75616DBE4560A09C960058DC9CB5281742E0A89A80E0E45966679E489D47536AAC4A90A12AFAD7BEE3BD7918176EDD9133789AA0A48E700747E6499B720CF47EDE8D0D992AE43D61D118BBED006AA74BBD223084C4A169A67B895D94BE6C3B2A680EAC4602DE89FDD4A486D7A22630FF2C578D143CDB32011BF35D07BA665F97FD2D01D861DCA755482DAE500AFEFDC01948DE74100FD661DAEAF4945A6A27CFB07AC92B28C28B9D0912043A816B6900B3282DFD4B06307FE94D89555B60EA7350D1FC954CED34B6B758CC26685A1849AF971C385E8BE66EDB8FBBEBB3C36B5E93C0F912D5EB25878F61C7D16358BC2F1F2D472EC57D61E49DC0A45E1A4129121336BBF80F9D3A8B675B10306AD28D83C7030D1391425E1F2F28B03D7F5D27AFC11DA12CBB564409807F607FF08795C8F99BDD8024B594925294B755E7028BF88FFE023702A600A54E9A4D0B6CF706A4657BF3F0507D96BB36C3514AAA9FE11692442D87B1FEAB10F8EA0C2390C6A2CFACF538C6BCE49D3D8FC6D24A248969FA23380A1DC6F9F3AC40DD84F9CC83008C6EA171F85D9F89D870E4144E31ACF8B374E7410E044E8295F0E10604F570AF92AFA0FF4F00A6CC949D21675BDABD6C7F6A5E3667E3A93DDD26E9C89CDE18B9DEEDBCB7F6672A953F9692CA8EEA33881131B2CB014C9D3F8552D6789BBCD498F4AEC08720534E6A4588E6C0C62924D609C03407562B0B8F354E44DCB26D98BF6D2FA66DC9C1E42DFB709092979310D9D0166E641CF18C43A31847B48E230C5C86AFDC827235084692BE4213F15CFB613870CECDE8688AE02279E0447407DEA288398CAB163B0B01AC66C24CB3F325D655878EE391FA8C8F65A8C846DF902AE34A36D659EC8C7FE84DB0910A583D0E3FEB9C8563170A4CE5F899B651B0A1DF11168769BB8F60FDB133F84A43768A9A49B8A77624A66C71AB6519EC54B68D823C7877F058B3DB947F02CFB662A30DA17459251E6F447E7AD9E4F555A46CDE1480B972CDD99E8B87286558C7A11AF3EB1EA3A059C2F7B3E6B03CACB33A99B8B35604C664EF32607DB91381A41480F993F82E4A2A75DA86439ABC791FA5030D5069ECB094EE543FC103502F759A65556C2D607EFD99D66BD12C0330814C262AD6CDC03D94B49F689E86A79BC7E3D186AC2BF2CCA46F49E1EF0D40A39419964F510A557D494A6EFB4E349A66950C1A221BC429F56BE00862DC0FD689295E30594D80F84A63C6AF39BB9044FC63C018B35F77E434BEDC98E5174011BC04D05AB58D9BB7D1DC07CF5AC5342329F5934F6C7FC357BB73F40E9F2BC00F74AAB1B6DB50B5FC45F74CAF7738DAC136F364B324C6C9B829A5FE991A845AABFCD44C515DB07DD4CDC41D6C272336B8FD8DA5C9361DFB00C667D7AE4BA75042B70C602E62112B4D1D881568137F56FB9EA300C45FC9F0EC54C50E52D4699D8E6BD56EE1E422D4A5BB562254100328059617BA7912875B6171F6A2515B8F52B7EE810F464C77168ACF4BB4C4D7CD918B42E05068D91125CC5F4D5018C44A48C3EFBA8F2C1EE5561E3A81271BB3F1D85C443C7E4BD15B395F4DB078B00EED6B66A25C2DAA80B512D889A25979ECFCEFF64657EF081ED15282DD8394BA8242D938DE8BC0BBD153CC7ECDFEE3B8AFAE447536C0772210E2ED1573FCF34AC87FC75B076003671268D550DED3760BCF3F2B48FC95BF7E5357A29236D706334E02EFFD75E351511D47AA65B5FE78B2512CA66F73A3FF2906F8B15431CD5350FA1CB3C18149BB110B183FD5ABAA71F8C9C723917FA110439613C0B4B7A94A0CFE77E0582F37C0D8F57BF100250A53BDDEEB8FCEE316DB2A96B1D87CB85F91E3BB63F8CD0098E6C01EAC2B1010D027E357DD46DB00B3F3EC393CDF469D976913445F25306F397501AF7621280BC0D879BFA27D60DE4A6571BD13C074AB96D6207932EB3616E5A5FE11C49E691E872D47DC6AACFC28B72E17D7A6B95B0FE01E5B851C4689C7A9819A0B927A66E02589B65A34259A70B4C89885E3DEAA9CA8F5E8257427805172294FC9659837B764AF6FD9400DF49EBCCEF969C8782931F940749A7CFE536F9635846D8B79FF5AAB34E452024D5DB393658A4639AA7B4F7E3806772A4F7CAE1A33C57AE79B83C6F3D9B5BB6FB6CEC0AED34E7D5C71F0181ED62286F6B39127EFC44FB705A5F5878F63E3E1539879E8249EFF6804CBC5F614928617DB0DC5214A58A25A295421B5CACAB2DF5F278E12ACDB08EE5521E9B3B87839DD2280950205A6AC9DC96E8F8A2415D785945DF7DA859E54BD6232AF0A68B5AD1BED5E62380B25773288239F4288553E025B20A54314B11324BCC62DB7F805D9F8759761F8C60764D8DB7D3178869B1B7240E742DF2A196012280D561D3AE3D335DBF1F5FAE17888237258DC643721EA4981B1F336E0A9BA9178283416F5E33FB512AD23803DF37E342B3C098FBE4FD1BF493A1EE4A8F750C3643C58B33FFA4C753BE6C583538545A83E78021EAA9D80AFD689C2B015DBCDED54C125BC37680CEEAB138DA738524F5CE74ED750BE94865217A774F5817DD8B24DF85ABD703C52733081661E6D685B4420B65762F4720D3064C966FCA6EB303CDC301E77D68DC5DDF562F0F8FB297877D0442CD9EDCE4E13A7CFF1E73DDADD5F7B309E635996ECC8A5ED25EC6683FE7DD7D178382C16DF6A38004BD918676C3F88A71A45B06CE168923ADDF2A73AD5F59389CBF14483083C141685DF774CC1214A66E66CF5E4EA54648FB7026054211F3015D207B031C8F7A21DB96A1BEE0A21604B0A098E4148FA62FCB0FB5476CE12005B77198031C76ACF5EF8E11B7208BEECCCDADC1A928CCA714E2D77CE2EFDCF2201D87D619410C3B4C5231577354CC3D79B27E35B2D52F142EB34FCB1C748B44C9B83B9DB0F79F1F2D703A74643A8B2511D93747507079AF1EB9DC4EBB54EBB8F99B7C9CA66736C55A3D17FAADBFC2CEA3C41D294F23F14775062CE5AB317C189D36817837BEB25A3D5A7D9F87A4BF2AD6602BEFB41063EDD998B6FB44C627AE2571CDE899C625294E8D34DBB51A9A62452AAAB04BDBB1B25E3610EDE8FD48FB5698F8739F895B3C50AC7ABFF6A1E831CAAC0A2B0A4990430F28083CCFD543D676D77E5F0AAF0A6E99600CC8DE14CD1FE35AA3B0033494C0063B637432E3EBDE4E18EB8F1F6B1D05E53F17A934CDD5315E5A002D89B7F0EF513E7D90AC9031C755FEC90860669D390AB4D92E4866D60FD9CE4004C860F024496EF24F3907DF438D61CC8C391737AAF8EEE72D3DE187ADB9A77022B0FE4234F13912CC7D98242AC3F984F492C1FAB0EEB7A0CEBF8BCEEE051AC953F8EB2451A00ACCC402E9FD7EECFC336C623F5C1BDA4AC8D9717B08AF65BF34F3B719CC5BB2C7FE48EDD887F97CE1B186EC83D86B5878E22BF507923781148ECF40CADD9F35E74824196331FB3084A0B771EC2A623C73D1EAB5C85046817DF414A314A7F37414793BCFAFEA5389C7FBE10EBC88BADB43F5B78D1F6236D67DED7EE3B82BCB3AC3365BE8869315F1AD4F4BEE8EA03476D4FD50539291DC76025EA488FB70060B3AE04B0EE6371CC3959943592D861357F4915F08EBA69B8AB313B603D4A1D7552AF0230B56A1B80957FD2080E1A411C986CE299405035DECD0739D752895C87666E3F804AF528B908144213F0C34E13B0F2F069EC3D760A7B4E9F3375B79898AE2B9B935C1A0D596AD28ED4D83BA89A8DCBF65E61D34290C7BB584A5C36571A46E0A81287FE53DC065ED154AAF8F7D612B809A4A2502D630DA524EDED4BC073AD52B0FAE419FCBA27F9119C82FB1A66A0CEF0E578B4112528CD27D68841C46C6FB59A34810076570825B7DA9224D3702F01ECD18604AE06090430815838BED438128F3549C103F563F0A336E13870D2E92AB552046052A333086031A500AC54FDDF04DD228069546082E22FFF0A0936B6E9CDE60C4A6A519B0517EFCD43E2E21D683F61255A8F5A8C2EE369A6AE4693118BF1F1A7CB3992EC26209CC4319370487671955616C965D9C1E378F143EAECAFF7C05F7B8EC26AAA5EC708006EAC52DD7F7EE9AB3419606B24149878768E042E0EC4B435C0EF743EA94837920BCBB9E2B63CFB218CB38C43007245BC3EEFCD9E61555E81BCD5814209F04B85A15FB7CF4BDCD340E3ECAE284C09593C52A15CDD5EBA72729A763A5D4100E42272E4F250F26C6E3EDF5C962F23256F59B130A532A347AFCC9F0560465E9A4E02A394514A02F3014CB4EEE8593CD99C1D922A58396D65D0A288B7CFEE7200535DA85694691781BE5E65737B02B060AAE5714EBD77443F9667F7742D9AB5EDB05B852408692EF3BF3F19CB01E4F240F6E23687280D8A8E25E41FE9C3515221096094DCCAD58A43DA0A37D76B75251E937A4CD3C662965F13F254EB13E67B6F0F908E73407BB523CB1BCAF0614978BAC378DCDB649881F16BFDDC969FCEE397D99C69F946E978AAF368DCC3B4A4263ED420C91619FC022E3F709C527B12DDC8CB9038FC6FDC746C3C790E1B3970ADA35993771AAB68D693DF1B8F9EC2D6A31CF4BCFE5D27B904C01E08FBFF0460A56B4A09DB690C9ED511EAD6A3A85BD74E9A8D173E4CC79DD5FA22E8CDEE1C117A7374E883A0F7787D5BF783BCFBAE7898EAD28F3A0F45ECFC6C1BFDF3A8E6CCA6343071C35ECCD8B20F4BF71DB5E71E9356E22FFD27E031BD5BF84E5774FC7415CE94648515E980CB37FF3C625C6A2816A71AB5244E82811A8E8187009CF66A4706441A13757281C042D2478193365447C62B8102ED75E59FA9000CE74E5CD45B038A43C9CA9E811887C5A9F0DA3FA517935D4EDCAFE5411291FC0AA23CE941793230622A7252DEF4C7C08ADAB9333ECB8F0BA31C993B1353715CDE2CB0F9B7721AA09D614C4E72747CA03FE58D7119A02B6B2CA37B995E00AFB07257B9E543B1FBC4B0A5498F4A8774F30076B90AE9008CA97949242CD882F27AADA95E1AA507829126E4A54252752E990353FB31D9D0959DE4002C9AE1E89F2A55F5587F6B8AC88BDCBB5C8B6613C0EE91F4A5ED36CCDF8FBB8C465E81E469F14469B9B4AD4E8A2BC9A59FB67403CA570B677E35711E8D3A434A56F6448CC1F6069A9A5B3F9D6A611C16EDD546D292BED052FBD7AA46A1BC405B1B7EC5A7EA11183CDBA99AB3B61FC65D9AA714C83648C69DF24709ED97DD47B91347BC780E53CCFE5E3B82B0D2AA998AE73ECCC4A1D2D5598A8AAD5D50D44B9C61713A002BAD42AA7DD9ED4DD1AD0198CAC28B7518AF238BCD8BF61CC27F77222ABFD3DD3E72F1DC07A9A83F641E22094C1337EEC59C5D7918B7E91046AFDE85F97BF2316A5D0EBA4F5D83CA11D3296AB271BCD70B7F1A300D3FE8AC91A1BF4DF696ABD60F77D5D4C900FD10C486FC48BD68FCB04D227A4E5E6A698AD4C68CBF367AA9C2F47C0BDC288B5C6496967569352EBF364A9135F66B1179A48FEBFA24C0F3379DDE14296DED68A66A2719AB4C5276BD39B9B2C8819BD29747F36C65536E04BB8216E3A14119EB561DC892521D6B2E4B00A7704A83C6E38F19877CF261B7FE72B8404FE7A5C9B8783CD0E65D8929457252BAA4EB0198031AA5A900D70330A66F8D4433AEC05B6C6FDABF54AE418904F6842430EF5D485BD1F5CBED01D8C8F53E8011F46A2452022BD952E0F2EFF2703D9AB9FD102A0980B492582B093FFF68148E9D7761C5FFE22A91B11025E53B70F63C9EB7955CE63B2C85D2512262166D46EEB922EC3F57808F262CB57750CB49E50B8EC11FFB8EB6955ED5A4497324ADA6DE2D3552FC692020CDA4BA174335D6CD771EA0C6F47227F2A3660AD3C824D0B1ACD506E323EF3529B1C4F6BAF1BEE99059741B487E6885321E9563A760C39133385870117BA90E4F675AD5A326E37FFB0DC79EB382579787D0E439C63F49B20FD489C3CC6D25736032374BB70660CC8BD2B2F1DA3A954BF9C36144F8B77AA156FA024A4CB964C8B53BD295B4F2C869BC1B31050F870CC6B36D5211923ADBCE9F6A96B90835E267A16EE26C242DDE661BE84AD40276088935AC79D7E96E8103374062BD4A622A1A9B9ADE17CC24087719BB10BD272CC1DC0D07A8025FC490A56BD077CA4A44CFD982F8B99BD16FCA2A24CD5A83E36C64A2E5398791B9381B7A546398BDE900FA7CBA12E1B336207AC1560C9C918D7E93576063FE31ACDC7D105133D761E0F4D5E83B7925D2E6ADB73D3F2AA3BDE3C97C080E26AEDF8B1E6316A2E7B825761E9A4DB4B24E76E79F44F2BCB5183C630DFA51B5089FBC185B738F1A9FDC89A5AE211AC7FC1B15B4B86E45FC55AF12991FE7D13A9BEC483ED705832689DA93BCBA3AB147DFF864CFFAF11234E313EDCDDDD9DD0880592727694F965653FDED26BFEC360EC72DFFE416AF055E475E7DF024BED6989D48275134A05F02C2579A24626DEE717377002DE0D5BD0B6373605A39D6247E8D147B27B584BCB25E568EAB49EF42DEED4B3E3513F1EAC723912B5DDCC8B52D3725EFD9F96593644B1ABC682B07746A2ECA776806EE0D8DC7F73A8CC6B3EDB250C136B26AD23C15778746636CB6808175658570F9DAAB4DD71F10A06A65A0BC562A43D2F09BAEA370C2DC5D09EA255142AA4AA0AC3B9A662825B928CCDDE9B663A8AB69C244F1AECF3D856F6B92BF8A009140A75DF5CD52F132858FEFB41D82BB285DE9153B69599F7A4741894204603A8C8000767F9D68CCF8FF026024C7643771ED0358E3610B4DCC4DCB760516599FB7D157BDB6540EED9EC6541021B49412D824F2418E28A57C9649C50DD7BFFE9F918BDFA5E054A31643E6E0B19A7DF0E76E59F869FB64FCAD5312769F38830671A3F1D336F1788CE2FBBDA111F8713B8E4CBD92297217E0346BFF175DD8C05EEB8A71ABDC2EE9C19396E2271F84E3DBCDE3C8B768BCD83A15BFFD30120B76E5A0037959E1BDBEF869E714FCB65D02C20664E2F079C1135B113B95B636BC9F3C050F54EF81DF771D8A5F771E82FBAA7E42D077DB323EDDB81F95AAF7C1F75A25E2B79DB3F0C776D198BFD59B37F141E9DF9594BD1B00309FFCFAB77D56920A3491FDF640BCDA71043BA7DC3C29D358E7C53B632582DEA554AF933ADE1B84C76A0F2680B953395C104209AFFEB694E1ABB753B3A05620FF6FF6C17B116EDEC8F269FEF8638DFDDA3467CB0194D75B09DAAAF26E385E6C976EF3C4D722954BDB24D477046C52DCBB4E588C876B2B0E96319800519571C968A36AB5483CD99092D942EF95A98B9AC650BE78CF7CEA5233819293CE3AD36AE51B83D07E84B70AEEE53D7DE16696537C61DCEF0CC2CB1DD36D1148243F364160DA030179D711BCD296929CF6D8E9B5265DAB50CDD5AB66AA83E028FCA47D0AB20F89AF8EEFA1D113992EF9583D097757E989695B75F00249F953066F923E970AE9460CA5ED32D78D62AC0A2DD130C67B3FACA421288325392CBED745E15DEB727622D92B1CFD39F8A0B1C622C351CA0AEC814BA978FFF9E4D2B3F449BBF24FE1EEAAFD502BC39D12A0C5E1EDC74EA380A3A456E74ED1DF9F078CC3331FC4612FF3E52F3D8FCFDE8D0A5A0163A5BE317882B70156D2D445F49B958D72552330654F9EB864FEC3D2E6E21BCD12E18ED27312A0D450DBE4471AA96372DEE986B61356D8FC87E26B9C3517152AF7C4A203C7317DC711DC111C8E746FB54AE1CF312D2BC9FF25BBFE19A4FCA99E499F0560C56D80F7BB4E9E43BBE10B503D7A3A6A444F43CCDC0DDE865996DA56C8C543FAA439CE7B6D7EAE1C3B0BD5A2A6A0D398E5B6A3DD12178FCD9F824ACB284276DE4934CB988B2A549542622762C48A2D96AE4DA178B526736DBA887DC7CFE0C3E14B98BF99A8163B1D317336D8796DD7225363D937E445EDC407C8F9BB0EA2F988D9F8EBC0B178F5931178B5DB68BC1E3EC98E2D5A79D05BCBBC44759F615CF42ABFF2A9771F7311963C0D55E3A7A151FA5CACDA47F551FDC9A4F28BD873FA3C5A8D6039632623386E1252566CB341DB0AA7BEAC3E4F7FEAAEA2FD54170750C27F377A067EDD633C5EED3212FFD367024212E62076FE46ECA3D427928CAA20A3576E47D5D899783766265A0F9D831D3A8158F99326277EDE24DD2280B90663D9E28DBFC275887A7AFF793B5131340E7FE93BC27C58E5AAB46A406564505662888D0036E12D5332916D682F3755A05860F7322571FD5F029862B6D89526EFF4AAC40F5A25DB28D86AF8422CDB73D4557029FAFBA0B1F84E9BB8E2DDE6727F6BF044FCB0E310349DB01A0F870DC492BD2567700D9AB309E583FB6289DEF4F7A8C1D0F978AC6E327A517D8C99B1041B0F1E61F1557EE7AE8D8EF7878623FB98DB5F23CA3E7A96925F7FF49FBF1EF3728EE2EE1A91084E998598690B316B9D3A9C037D2730FFDFF1EC7393315DF57DE32A64E977E604432EB458E6B71707441A007492828372EB3AA53821FE8A476AD3020DFE585BD4DCAA23F9D7BDC21415D1DEBE93A099C59234CB22F518FDF9E4526748E647C994456E6F254BA3881940FD4439F7491299DE573C41ABCBD6898B8A7081919A766AD212A52686F53451233F7D45AED341FC3EE8F3A57459E46E7D4C79A561AE8C8FA5B72AE9EE347FA4B25FB61D8464020CDDFC6F08285B2559519CAE5E2C8D9BA45B542155154C8C09AA9DA97A8BB4BA44DA72F22C25B0088426B91DF156443246CCB956FE7C11D9FD3AE39AA3639C6FAE45B752F01B25C5ECCAE0573055955D87F187DE637037D58107DEEB8737078CC4E623DE8BC0A4BF0F988AE75AA714CFD5ADA5DB837506E393196BA1D980AFD48F42DB614E82136915E8CEE06E589CE376BE8B9A672E2000C5E1CFBD46E1CD9E9998B5D66D5E355EF05A336E32BE5A2F06FB4EFB3059883D672FE26B8D12087AAB309F00795F68347ED471285EEB918A81A3E7B9A6C9F0AEB1FEDFF1EC7393B2A68645BA6115D23ABA063FB533C723EB350420755E93E4597F1A48E9C33AA55B35959DA40FD9AAC5F1567F7CF65BA4C65F53102C31C5EBDAB39DAA6121E4E87B289B2C4E79507A0C6740A4D5656FB0F6C9F25EFCECC2A8DE6465E0A1B0BC571D3A1E090A3444AA9CF449B450D1D41BED99E0AB72D84919B6CAAD322BBCD270129A2D5A3090E2D59E44B7526CCEB467598D677CB0674BC9FC5BF4C663E5C172E95D15DEF1D3CAA2747D23FF5618DECB281E7B66B05BA05B5621FDABE54FB7CA0C6953FE697CB9612C7EDB6B2447075788E24625CF65915718391B43E5CDFD58522CA21967E3CCBF8E94AEEBF46A702A91884FD8987B1C1F4D5C4D55AE2FDA141F0C08BCD66F225EF82001BE8CD547EF69BED5073FFA6828FED66718EEAC1B89E70970874C6501A26664E3AE6ABD313FA744026B943A1FDF6A1A8F3D4AC823F14F8D4C39689DB508F7844462FD11FF65A64B587EE414EEAD3610097337613625B04A21E1485EE5945035716DE5101F1DAF5D39FE2D4959B3CE79A30026A38EE1C2A8B53885450FAEEDA85D99BB804EB79E912FBB571CDEBDD95A7BF65A1D1DD5BEA56598CA68EDD54FC1B50F77BD1EB961D9C2F1E200867961E77792B1F355BA9FE8D7E54F7FAE8F080474EFDE60F181C34AE80298B8437BCBA36ADDCDE239FE9CA517274D2A848B498EF2E1CA6379348872F02D007765A5BD65C82B27F3E8A6779477C75FC5E7DC5C5C2ECFCA0BDD69E1F76DE7E6EEADAC322EE44DD32D4FE2FBE9A960C61BE58A2456FC79D00CAA32E15875D0ADEA7C1680B9622B12AF20EEDF2BA8FB7336579A7F057939F01AEDE193E790306D15361E3E6E8D70D989B3B8AF662C5A673A894AB9FA5BDFB178A145BC9D3DBF9720F57C8B18FCA2C758749DB0165DC62E47D311CB50A9C6400C9CE3764A0F9EB10E41550660418E3B004E542F75019EA634B52EFF0CF2CF17D85789CEABF15A4F04A66D38880A957BA3EE90D93874A108FBCF16E2DDA84F717F484F641F3989A93B7251BEFA00A479EFCC59F362195C83F1ACFE5D49F9F31AD48D00984F0A665DC76B47AEDEE4E25647EDD61AAB6B5B7E0B33F2F9E23DCAC50FE33AA26C9C44E63AB317965777E7C57F4DA23FF3CE1EA279353E58555A60E5D385BEB29FD8ADF7687992856769D6DEA37FEF241AE69196FE9FC229B4004F80E582D3C5F3E30574171A174265F6CBEDD22EF1EB11DDE4B7C4CDA0D2F9B04C596A7A323FC637F3237BE7C5F9A3ABF376D3741D002B5538EF62A4AB98E46E4CA4B5A55A5E4F524EFD68EA4ADC533B0EDF689280DDDE049DED1DA17BE98A299BE4EEFCB8D8FDBBB2CCBF90981C4B60B7FBF24FE177ADA3F0AD2631F871BB247CBBC920FCBC63063618583BAEBCD97F347ED432CAAA2A63E1063C52E513CCDC56F2F522D9FFA1FB48FCBA5DBC0D98317357DB0AE2B2521258F3210B7057954178B975225E691D8F5F7588C6D65C9DB6293E6A7404BA8D5F8EAFD41A84E7DBC4E2D90FE2F095DA833068B63B2A65FAC67D78B85A770C59E64E1050FDB87D5D2E8F5628DD58EB13147B6A8339AA513A5FF2EF1A1CAFC5EEDE8D356077EB1AA8BB1759B4F6E059DC0C593057FB370E60AE4D5A8E2C490735168BDA2B0751EBFCB43015DAFC99C7122AF5A870AE0C97936F5FE272A58F527E7C69CD8857F513E643F971279ACA90D43F0CD4FC41C6DB8E7245D425699745F2EC8C7EE5EF8AE04666E77B15793C70FC60385D64C508743563DEFC1BC5CC32D8A3930165ED487797DB9490ECBCB09795C2B7BF35BA2E8095CE88FF6486855136C564075E45268DD44B9D8DA07F74C40F3E4CC6A40DEEBC2A9BDF921786F96C00FB7724E5D91B652CFF853872BE0863D7E7207CE62A8C58B98DAAA013D56D31838D73554E1EE6EFD8AF1742B06DDF11CCD99083336482A97F2E226CCE3D8939EB77DA9E3001FD8CECDDC8E783004D8D78FDBE7C8C5CB11359CBB7229320346AF916E49FD58E7CE640BC6443506ED61E3841005C8BF8F9EB90CD3865A79FC367CE632AE33C78E2B4CBB797773520CB82FD396BC5A42EA3B8CDD2480D8DFEBDB0AEBE9D91F262A1CD8D1616A73A9E3CC8C501A52BACCC4D92E2B96900F3F364B724D599032A970DE58937F2627EAED5D13E07293A2BBFE3A9B866EDDE9E1D2754B71A309437B59A63E70AEC945CF51F7B07D8F8E8DA8105FC979178E372ED322A233BAFE679AFF661C05ADC1A543EF9E38FDD88BC36F32FA2EBAB90CA172F62BE6FF46CE5B34CAA208E1256ED42D05B3DF1FB9EA3B0CF3BB55113A55A09713ABE8CC2DC6EA4D2D278175BB1312E5C4E2A9A26754B7FB8A03459D14DD2514425A4F65C4C37CB1E1BC5CBA6D2A9D8DC57E9B82F4BC76B98A5EC3EBB9AAEF0C04707A87E61BC085DA19DD5CD90057325B85915D285F5EE959FCB18EC91DC695F563D7E3E52F7F77B89032E472E25B14300A57CCDDF75007FEA3E1A2FB5C9C21FBAA6D92B35A6F6D1E86AF55112C1FF39590E8D570EE8CB4A5A1C73FEE45F77F4AF6A52C19477DDCA42CFFF22FACC393065C565DC72EAFE2DA7AEF3EC3C7E1AAD32E7E2CE6A03F1D57A915871D05B8DB3D5157AB3601A555CE5DC6EA41C5B57F226235D11DCFEAE157BF3308552CEAAFDDAE1EE4887011D2180AFD87D049F528D5BB4E748F19961E78A0A6CB572D6967D98B465AFADD88AD4F5457A5ABEF730A5D73D5871E098B734EE24B7DCD305584C1573C2A63D58B2E7284E7A096E3C7C148B761E62B8A358B12F0F0B98DEC23D8771FCC205EC3C926FA76BBA4104387EEE02B20F1CC1B9828B384E2972D5813C9CB095384646F783274F612BDDB56275F4EC39DBBAA169814D878F61C9CE8358B5F70896338D797B72793D8AF5878E633DD397B4E060E222728E9DC606DA3B298D8DFC56EA5C416E15C0AC261C4CF8E0356DC37EB41A360FCD33672062DA1A1C3D4F7993F19B4AF94F244567E7735D45B4531FB0ACB9722551620E7ABB17826A25F0DA03E1B3BCA36FBC7CB936E1FCFE2B48C3AEE396DA4311CEB3F38E5DBB0B9D462E42FBE18B316EE52E14DA0282C988E6F34AD28AA4FEFEC96CBD2E5D17C0940F97173252B9123F6D95C3D94EDA7A08DF6E1A43B5B13B5EE93812B3B7BB49E862694BDE4A2EB72529DF0EBCDD4BC9A29CE3E7F0669F91783A6C207EDC2A165FADDF1FC111636CC7BD282C760ABE542702AFB44AC533F506E0F53EE93874EA829DC4FA54834178E6FD44BCD83C16CF341E80D4856EC3EFAEE367F18F0123F18D7ABD192E065FAF33005523C612B81C8C354D9E81C769F7E207B1F43318AFF51A8E2D27CEA375EA583CD7A82F9E6E1A8B271BC6E2F9A671F8E90703B134E710AAF6CE40DD8889165E347AC5067C23AC37D6E69DC4948DFBF148CDBE683F7EA9E70A7C327A367ED46C30F2D892472DDD8067EBF7C2ECDD47D188F978BE5138BED938194F358EC18BEF47E2EF9D92D179EC427CBB411F4CDDE2E6F7F6B08C3F691A8E8E43DCB1CD4E85BA0510B306E33AEFCD0398BAA100CA1EB039FF2CBED5241E41EFD1E8B0BFCABD0816ABCD4DD31F066257E4CF1F6CAF343E95E526637BA378DD77E20CA2A72F47BB1173D06BE212AC25D88B0FEE65761747DAE26DB06397F54A4F8D3844CF77DF72D04029BEF96B8065A5E353596EA5CDB5E86ABF4CC7DBCE612BA3CC41CEA9023CDB4C7C63FF7E371C2FB48EC341FBA6A9CBD7A1E367103B6B253A0D9F819E13E661E53EF57DBA10C46C5B46A9F8DD9EB1CBEDF87FC5F3B5CDF5E83301CC7E2C22875D3E0D5FB31B8F8445E1AE1A83D0737A36F2346C9374BCF1454A1A628A17038BE5CC6D4B6A7C2C8B5FA2BA89D37157703FA4ADCAC1815385885CB20D7754ED8D8619F3357EE137DD46E35B2D13B1FBCC450C5D978372553E418F49AB3071CB011B6DFBCCD94A10BC80BFF41D856F3688C3AEB385A895340BF754EF850CAAE2BBCE142172D156DC51B9275A672DB02EF9A701E3F17CEB246C3F5D8861D9FB715F957E6835642EF6538A5B73301FEF25CCC41DB5A291B9E120361DCAC7013B3E2511AF0F9860E145A98B37A012C16059EE498C5ABF17FAAEE1BDB523307F8FFB14578BACD9F872BD4138C800C98BB6B0C3F7C7EC5DF9D84F10587AE8047ED76F1ABED12A198B28ED6DCB3D81BD178AF0CB8F33F09BCE19B669B7F9F005788820BBFED0496B33EA84FF3A00736D94BFBC779D48D473FA1AF7D271D870773472AD78FCB2FB309C6619AD5D5E276F657522F7AC72F9652B75EF495723576E2750F6A761E77FAD275A66CE7745BAE4F70B02D8A21DDE4BCD59F65A4FEC7CF7FA8FDBDFA5393202C535D2F7AF37629CDF9270A22BFD28FFB8749E57A5ED06E19D272EE0719DDF5F25892036184FB78CC06EBDDBECB28F116B99FFAA7D096E11087AA3079AB22D1AB1FF972C4678FCF19E15D895DF19E75EDA94E453570343EFF95AF41900A60229567751E75CBAE720DE8E9CC8420DC0A3B5076284FF95198DB645DA98A742EAABD82E9BAE21DADDBF0F793CD1C56EBDE7B2484E967B5718EC3F73164FD41D8C3A19F364514C6F474CC3775B26208F1DE74F7DC6E0079DD2CD7E3BF5BFFB42FBA2C5B0F998B8ED10F9D61D99DEB9FDCDC6AEC463B5C2317D6F3EBED9340A21F1FE19532E43AF0D1885675BC4E10099A99DFC3FEB34CCEC35D63D4569AB6AA43B735ED4962AD2A3B5C3B18D23A3486AEBCF3AA5E1CDC193ACDE4469CB36E3BEEA03B0E2C87102580EEEAF1585FB1BA5E3B75D324D7D6D3F7A1EBE4E09F100934F5AB2059538382DF44E6615558F9D86EF7748B609679FA6B14C7A2FB4F1C86594CE287D7DBADCEC6D97B68DBA2CCD6734C2AB48DEADDDDC0C806990F15547975EFE8502BCD2C19DBD558E924E85BA99285737C3BE3C3E61B37B07CF80CECB9EE593C6E5D7B31459672C298B818CA5E43AA55616B521D55759C7AEDB85F2FA36A64EBBA81E69677939A2BB376F99B6980384BE1AA5D32D8223EDB59B3249E9327E9F1C00B83C0AE05C5E4AE5D527BFF37BE11D40F8FE4AAEBEB454424C8BCF3ACEBADDC885F84D8FD1F875D761E8C4F67B4A428A07D263B2F7A13C07033B3C9140DC6CB87BA752FC30E0B53CCBC8BFE294E426507660A66B91CD1797F22737E6C7A435A6A33674BD0146F4197360AA1416DC7B9ABBFD205199A359D581F86BFF09F64D3947FACEAE461795DD31A4EC6465FBCF32D7A1B2BCF15EB9F22B554F62AD95CEECCC5719241F62A47B5A43E9A662F53EE83DCDCD59D8B960A466A316E0EB0DA3292115E0F54113EDABCEEF67CEA684928527EB0CC2E23DB9984409AC5CF5DEF81B41A561C234FB5E5F932133B1E6F8793C11C638BDAFC5F88DA415559087EB0CC666C6593D6E82C5D974F83CBC3678329E6E1487299BDD4AAFA825D3D20BC9D904279160EC171D930960136D7E432400BBBBC6002CA704368C00F650683F749A9D836F31AE9EB3D6A3E3A41578BA41040E30F984A55B29118663FEEE92579EAA44CFC04B6D5270D25E84A384459EA8E935D4B703DFEE8F5FE9935805AE315E2CD4B13F6AAC7AF4F8EB9BCF22F3E77870330066F564B72E91ACD5BBEDC31176FA838ECD094BF1BEB7188FF7E2277B7E995F7576855630164A1701FA813305C85771E853AFC118F4B093E92A103F74E61C0E15B834B52DE2C2C50B3846352B7EE92E4AC33A369900C6B41A652EC6E1B317EC9002FF03B6F14B37B3E313C0C2E8A74604E2163A15F2D0F90B7642EEF2FD79D84355D411F354CC4BAF4F1A7F2C73384687EC23C7B08A03E1324AE339CC5731B1AE9C60219075ACD5E6A643A7CE8382BE91CAA22F032D3D9087A356B7249653B4BBE012765C704B130A7D81E5D46A79DCB21DB853274E8491AFC1091CD0975AF972594EBD9FAE5874E0C0FE331770DA550774269C56EA9577015381C7D3234CF320FD291F7ABEA81DFB7A4D4B7CB71C7B792A83AE09600A6613B1A53A77FFD9EB6DE2B1D7B4F5C5A3B01AB196F51D6ACA9061C6291985F5EFE9D98BE72AF2DD6ECAF0A7386E1A2B6429433B27B6960472A390DCF82F63D522FFD7270BED55E8D6A327710F81A7A3F795661F6C6A0F9D8DFF7A3F01BB58D9AF0F1A87FBEBC722386E0A9AA5CFC0FC5D6E7FD7A8B5BBED38945FF41C8BB0C4098898B506A7C8C0ADC7CEE1F1B081683DDADBCDEF65294CF35E0DA2B0F3FC45937E1E6D12879FF71C4991BD1BFACD75FBBB540E51538E900F8545609DF74A930158A778FC357C723180652EDB887BABF7C4B2BC931891BD1795AAF5C5E49D4790BC78339E7A3F16BF1C3015CF368B431E5B5112D5E27B820712C04A24B0AAD1D3F062DB341C57A75753F3A489D93927A8420F44DF79DE3C4EA97A50FBF1552163E48D9031DC31E14600CCE2BE2C7257B395995F7DCEAD1CD5B44A3A7FAA09A51D0146AD347CA9410C56EDF7169C2C2DCD9B3114A359B9FB10FEDE3D032FB41E825759DEE18BB32D76D7998AB0FBD80954E937123F6899811FB449C7C0C9EEDB8DCB3848BDDA31098FD3DE3E8DD6602801330D8F3749C177DB0CC54FDA2562E92E375F98B0941258888EC0D1D13A91E8316F1B2267AFC34B6D53F1E50649F81207ABE75A2458FBC9F1BE65A9C51CDB89EF2DA009307A4D5A8E5F741982AFB2ED7DB951B27D7DE87B1FA4A05EC2542CA5AA2F12B8BAF7192984ECC8A144954C3FA9F84DD7E1485BBF0B4DB366537A4EC0A375A3F07A9F513874E29C95B559C624FCA0DD10BCF8612A9AA64FB685ABD57B4FE027ED87E28916192C5B32D572F134038FBF9F8AEFB6CBC08F3F4CB6A3C7676EDC819F76CAC0773F4CC72F3E1A8A896CFB46E4B1B6EC78D58BF069CBF0729B34E3CFEBBDB3B025EF3853767DD54614C31215BC6CBAAE046668A81B2F7C7F36509DEF3366B5FBD844712E44C6D452CFFF56A402788510C812F14D3C5535193029DFD766925CE557BF670938AA90EFB6CD408EF62790769DB8806FBD1F87DF125CA4BAFDBED728AA5AA9C5C0E1D388B53B3900F446EA6AFF8C0951114E7258FEC94743F04CAB44ECF25E2FDA7EEA02BEDE281AFFE833C246CCD7074CC1CFBA8CC43E26F98BCE43F1E32EA9386AF38E2E0F2D872EC023B507618377A69572FBF73E63F1CD9643E07D6C1E8D33E6E2CB210339421760181BD49D55FB601C5501C5F0E6E04F11F4EE203CD376080E31DA384A6077505A9BBBBB64736DB5C8E9F8E187437146E9B2EEED257DD2927D27705FF000C4512D12E5E49DC0B6A3C7B1EFE4199C3AAF91F4DABC2D93E4DD6B5B9F0560022FDF94AEC6B5878EE1517D324CC737D74CC4CF7A4D40E3716B4D9DD469AC41C111F868BC370829AD4BD422BC416AC8B26DD43206D02FFDBD3D18AD38381979EE4BA879DC578BD293BE28F45E14DE1AE054F9716B7623E8CDDED079F41528F155A8978AF23AF5D5E28943D06B1F63D46A37D7954C15DDFF7662F90629F86A2B7DF5290A76644F55E6B136814D1FDD7D7B20DE1D301AC728D91A5BAC335FB2E39B7FD97D38822A53231210DA27EB78D5873BF405F5CA91F872FD3824531A14B970ACD77914422AB36C35E99FF97AE87DF2A81A9FE95F47DC04BD331013D76CB776FC0D4DE22BBE2A51F86EEB246B8733D7EF619E7A328FF1CCF7103B135FEAB9CECD0F7A9B71FC9D6D6AED2ECCDC7180768399AF04B6ABC1A6B199D073E98249B3229DFEF15D9D2966C7EF24E2DBCD92ED5B092AA84ED260A6F9EFDAC1B5E83A002686F94DCFFD86CFDAC40AEB8FE8153B6D843F5950C8D1FA12F23DA363658FB2FFE5B3E7161BFF595776FE63F4E39BE3FE95793C7623A6545833D770537CC586CFFAD6ED4916A19460CDB65868270148825439FD325E4D8E0B4E519001C6AFDB8D2FD5E883173B50744E9DCC112A165FADD31753B6BA4EF6EB8FD3F15CCB689CF31A9BA929A4512BD968FFDA09290BDD59E59ABFA05261F723D7EEC1C3A183F0723B8E9E89D3F162CB447CA5EE603B044FF4F79E43F1C30F62EC7E410ED5D8CA9DD02A75AA4937A2E6BC7FA05A7BACCE2D9198C650857A30B80F7EC586FE6EEC14DC4DC06A9CE23AE390255B51F1B5CEC858E50E9B5BA5EF57D689C09304CD23CC6EE2820D28F766672CF00EB313BD3568149E6F16417E920F4CD6363193344F76CF1B1F2361AEFB22D47A4A1929B396A04BCA7864EF2851736F988C6D8ED7370C601AA93528B92CA1E39845EC14EC183A1FBE7A147A4C5E8655C7CEE2E106927A1CA8BDD22913F9761E170351357343072555F2A47C183B9E8E9BAE9180B623FD17EF5D9E96E41CC5638D75A63E81A266022A474DB301E328D5A7C19F2EC31F7B8DC71DB5D3509E2A64B9DAC978A9CB28344899819619D3B0D1FB1293CD8185101C04603AA5B56A1CA5AE14FC3D621C7ED77D04EED4A7F8F491DABAC3519103C9D835DE27FA6974B6DC3F068E6798089BD3D3E9AE4FB748C5BB51A3F1D32E2350516056579266021E691089457B4BEA30458B07CCB3CDBDD51FC13C24E3E9A629782B721C5EEE98C681381AEBF34ED959FD2FB461FAFA945FAD74BA8D466E61114E9F3B8788E9CBF1873EA37147582A2530A6C3B2BED8790CEAA7CE40B3B4E9D8967F0A1A465FF99869307E7DF9FCF116E9D8902FC59C3C948A484A5FB10DE5F441E8862C43D5287418EDE64F55F5F606A7496BAC5BB32D9B3E13C01CB94E96B6702B117A309E683D022F75C8C08B6D52F142BB4C8AD199BCA7C84D11F2FB944C7E5096693384E2E8501AFA6DEF9B2CBCC8E71FDE8C619897685EEE40D3310B3FA2D1F5729379F9B54326FEFBE391F863EF896831643EE679DFA253B9B4E860FBA43C9BAB492E64B82761FA80B124E708DA0E9F851A6C709D472CC4FA036EAE48ECCE5CBA0EF1735772C4D1BC03C3B2C16924D9967B0C3DC62EC4860394895839DA3324F55B1FCF50AC8B72F2D076D85C548F9C844F862FC42A2F4ED5C488A51B90306F9555A868F8D24D8898B4908DD90472CCD8B80783272EC4117622C5A6F3A3749DBA793F3BCF4C3BC32A6ECE7A9CF024A26CC6DD7BCC626CD439F09E4A326EF50E444E5D665F6C5EBFEF28FA8C5B807D274E79652EC2F8355B103F6BA501B3A057474C6B94CC3D7106FDC72DC29A7D8769E7DE02D870E008166ED88E2354B76E9A94DC2D00982D1C9074F2E8B3ADD3D9F19C04F6789374AAFE672CDA77C229690627A05C988021BAF8D3759A02D160261ABE7217CA1980B003D648449B91FE24BCA3653987F115AA78F6C51E76D07762A6159FFB261ABDE52081CB5F618C43DB712B3D17BF27B1F31A801160954668025EED368640A30F6738F53F34750EDD09103AEDB47A0CBA4C749D5BF4E9C6BDB823349C6550FA04E2CE23B1C63BCFFF24CBD166CC3294AB15CFB004E0AAD1A81933A578CA276131FB70A8160FB4229B88E7D98F17EE77ED2C976D63D5BE5CB5761C29BC80EFB423C0119CF401DB1F771C8ABD36BFE968DC96FD04694DE22B7FB1683EDA6D4D71E418D949E7035623AF05A6C18310BBC85BA860DDAAA6AAC4EA2B51CACB103C407574EE4EF54B42171DDDF724D8DAAD2D2850D9741D0053F3F726EFD8D91447CEC9737887E2EC3314F55E6A9F41F048A7198E573A0CC3AB6484CC2B2CE82B1D4A193D9BC9C48F043AD49F7F4835E52519EAD7323F6C2BBB1B3004C09708622F32EC0FDAA69BF9BE99347C9F7AB46FBEE719779F8EEF510FFF4EF3447CA96E38C5D9EE7828B42FA2176DB30308C53089B4AEE9974DC57365EAB832C5CDF0722A5427F2B69388CE325CA1008C5602AA127200635F73D696134657E8A92757929D23EF754C9101932F66906C72D956733C623AB608AF301E305D4E7213F8F8A467829EDF7B49AE79B9672DCE280DFFB82491B26A8B17B4737971B1A904CA896B2D65D035ACAF22F9BB5900135F3C1EC62C203868825C9216A5AFD0244F05248DA50A7447482401CAAD9EFDB5EF18B6038197034151D62A029824307D253B381E1F8EF4BFDDE968D9DE23F8923E622C70A99182F762A6BA16E1791849F5BC825621EB1360D8B95B8DF4C047F17BF386294B3613180460CA471CBACEF03BB7ABCBACD5BB9836E3A8C33C10C0DA8F29D9AFD76AE40202C36002433AA5AD0864AC7420ECABC0FBA80D7DAF03C147AA2455D1E75AA663FB09B79D3A6931B5A850AA7A0D285D51FA69CF81C788F5A8FD67DE038E165CC0B3ECAB360884C6E3C79DD271C05F81A0CF91EB7258460298A4D01A91689AE5E54F5B40BCF6B9F8403E1ED211DFB5746E7E1CDE889E54CCC3AD474FE3EBCD58B63A0C4F10FE75F7B125A7E73219D5A9B55F1A3F4C59F49900565C2445C8A6A9D1E1D059F7FE96305F7AB1AEBEF19F75BDD24D46DF21D499F252FB7CD5F1E88D1A85A3D1C74A8FB2AE64F2D8F1B4F1F27AE608FD1CA064A2D31FB3D6EEC5534DD9F8DEEA4B517F022510E5528D5FE593F12EA56E25B1D8237FE4CF4D420ACC64C7CC70FC2D54C51920B102A462D1D1BE3E2470618DC8AFF150FE0598E6A64EE349628CD3446B8B4F6F13D2D05E13B6B25250C52FB5CD3AAA2294A56E3552A90BD15EF108C02C6E85B7B04E5AB2133A95BCAE16217D2B0C6F65DCBE1BDBBDC507FE5A5674AFCE213F6A50925A7951996854545BC46138B752A632282FAECCAE213ADE99B91132BF4AFC46014C7961BAE481DE39FD7B5FAA573A72392C03F7D74BC28C3D4EB211091E7ED37B343B4D9201D47D619198E3AFA67BAACD50AADEE5C2A8DED52500B2E3B519E51657FCBE20007BA409C3DB0A622282A3A618785B6590B45853B116C34BBD2248B41EE58304CB24A6909234896F67EC13248223D17BD25AB32747ED3A5E0B3E26A1318E6A51E834CA81A05CFF366002F32FE972089E6E12437052CF52DCE7ACBA240DBE3568AC03C8BAC3F048C3642CB72F14697FDF2694D3C7494C3D8E41CF4FDD3CA0DA848E8BF6D3CFBB50E8019854C844FCF0A32C1C762724D25C621973505152AAF12816EF0FF3A45466C0CD5F15593E5EEB3FC678A4BC3ED128111B0EBB39DAE4455B5141F3635293AB45D851D946AA4F6BBB8E17CA95FADFB5E8BA93F857D2674DA8DD2EB4EEF00984E8FB74EFF4C65BE1A3EDF44A917E5D153999CBACCBE09DEB341E807964FB5EF82C161938F1C6F72707FFDE3D97C471A3A674982BA9B4BF1B35371AAE345D697FADE7CF4D8AC26B6B370660024FC1CB25CCDA9387FBEA70D4D7C85E3B03DF6C3B16B12BF7DA4758B256EDC6A875FBF07AC22294A35A64D24FF57034CB74DF11F02B741855C8F28A432A588D044A600EC05CABD0C75972F1A54604903AECE0A1B1A816E9AB682EFC88753E8049CA89A1C4E4754EE5D1E34FB224305B852440558F46F7C90EC00CE448630810F6D932DB4B168576DE9781F479B39F7565BCB592080AE978FEC30CECF6B74DE84047927259234EAAB240380BF7D78FC79C6D0EA493166D218009185936BA7F32D1CD5B2AEFCA9A0F1602B0E7A8F1D81C58CD44BCF8D1300FC09CBB49607514BF0038114DFD033A551F041D7F7B517F1D155523C2F19A401C3FCFBD7952256A12CB456063FE1EAE1B81E507BD41C6EAF372733DBA2900BBDD49BC90DA2652737FB9CB707CA54124F69F71CCD6A82149C61D212CE6C9CE399526632A8D1A4AC6D20D889CA97921E766812C60806E99C4BE1B0130F913E8B0D35B63E763FD9439EC18ECDC0DD9B11A66A03CD5C80A35A932DA8A184149DF24A46A57BE619AFB6C58AD147CB7553AF69C2C519147ACD84500224069829C925C1B7F125FD2256971CE513CD1806984D14FAD7876463789EFB795516BF6A012D52E173E0E1F8C70528E5A8CCBA5004CAA5C949B27A39AD97D8A07605EDB118095D3E7FBB58A191C8D0E631798BDCE1BF94577AA872A4768069E6D95899DA7DD3BB5067E0C2FCE558D990C7DA4565F01BFBF6E0266EFF024B0C55B51DEF6C6493DA6EA7A0580F9F93B5A200023C8690E8CBC78E9A34CE4DA1C98731FB13E07E5557E0290CAD822CBDB024477E90176863F69EDE193F8AABE00559BE508D1F7342761DDF153541FC91FA9B82C878E602FBDC07633F485023091CD0DD188BDBFEA361C8F378A418EF7D9331BC52549791D427E5C755D4EFEA87092FEFEBBA3967FA390AB996F2386F7DC03748B24F6DD088019787986B439FF24BEDE98520D3B5DB986945C422921686B82BE02A4ED0032D5D8A9A57E518D2AAFF99B06C3CC4F9CF72A8F286BC56E6F232ADD4322D176B427A179AD419B4C9FB02F53B37333AECAD1B36C40F4F33C7CCD5E540C653ADAC241706A33D2DBAE41A54A33942293C04229995C17C062BC89F858B41F5B3207563972AA2B07D5B7C7285DADF6BFA6A45C300F02833FF4A71A1DCC72D64EC1971BA760857D19E86A00EB36D19F7CBF1AC09E970AE901984E139654A65444232481D5253F35CF171C850FB23C1E2938237273B017ED2494D795971AE417078B1F7E321A2D26AC36FEDB1EB2EA11885DE47D41DC257D53F4C592C0644C8CD70C13F0EEE0C9B833241C2B0F6B1E8CD664BCAD0892F7EA13AE2D5DCD551FC0B46CFE42CB74FCB0C3689CB0162C2A196503748B24F65D03C04A38CB3B531D555FCEB6F79415ECD8FAB2343B273BDECF7B4EB28ED570E86234C85A84F787CE47B38C05683C6C19AA242DC47DF5095052A52899FDE293E138A38940D250AA9AE5F59D4549682109084BF5DEF3F368C6CE5CDCDB902AA8BEB01D9C40009BEA01980B9FB56E0FCAE994094DC0D788420B6F1140E4AB680292A010A9568CA30C001B2B1552529CCD9145E3C3F13E8802BDA6E8FD4EBA691F56B5087C3CD15FE5746157E79FC5575A681596714B7A6A9F81C3F62236D3D5B7254D85BCBE04E6544886F701ACB30F60CE7DF49ADDA8A4AF78DB5C5A2C9A67796AB247FE877C44718B09D6D5E99760FC60B34C3CDD761479C7F4A902FF57CB145B2116B9986F8EBE702AA4DABABFE698B678877D88F7EF04B203DE0652B1512AA49B57B1C7ABC807B02DC74EDB0BAF3FEF36DE5E3DF13D0700EC7392D8775D00D32FDD59479A7C161D29B8E8E68642094AEC28F7D449C0E49D257BE2AE244D7BFFAAC748EB7C92222AD58AC664FB18ACBEA07D00F78645B38365A15CED2C3CD524DD4069D7F19318B776375EE9C40E281553F3533552ED1364461E904ED8B80777870924E84E20FC5DFF89587AE414FA4E5E86B9DE4EFC140198F6401990C4A2471912984990DAC74609B1C3787F2F1AB0F4E0313CDA9000568BE0523B1D8F378947C2E22DD87AE294BDDEF7C7DE2C17C14F5FD7D64BE59DC739F553540C607AB54AAB9F370460491E80395E8B666EDA87076B4B9263FE2859FDBAD7242CCD6319A72DC1CCAD6E6FA13F67BEEDE4597CBD3901BDB6F68D1158EBA4A3427DB732593966AAD71B6F8DBE582A2439A5255EB765B1D0CEBA0A49988EA0D7BBE3DB1FA6A26ED2546CCAD768208FEEF81C1FD64A930F604B0F9EC0C3B5C2F156F864298E24BF2A9C7B806E91C4BE1B003029F9B6E2451ABF3E0777D8A7FF052A09F843CF11386BF544775B54E1ADFDB046BDFA1B385B13CC9A676267B2ED16B32CE663170AF0934EB4D3368606ECE8755251292C1E4FBC9F818A542983AA0C4425ED4097FA143A024F35CF40EC826C5B35166D387A0AFFF5BE536525A1DC5927190F36A6DFB77BA346D478F393BE54004600D097C1ABC7A09B3F89EFC561DFFDD48762B55F8BA0FC42C7E118B1C2BD3EA612EB73FF41EF0D64DE189EEAE01DB5A3F078B338DC5B97E9067B7BD0AA44E2E79DB24A26F94949024E03304A7635E2CB98C477FC3C42007BD6004C654CC24B5421734B6DA3D873F21CBED992E5D39B0DE4514596F1D1C649CC533FBCDE772415656FC98391AA446F454F617AB128D760284D26CA33CF15832391B4DC7BAB472AE72DD0176E0E4CECB4E308F53D3F32378F7C6B3B6C0E9E6DC18AF87B37548F9BEE55A1B60768D29F30A64E62EFA0696E8C0E0EAD306FF7513C10DC1F8D8B4FA6B01640E28FFCF24E5E6D6036A3F02E0E8BC7E6095C45BB86638103E4F14A54268019CFDC7E37A929DACFF74E5F02CD1BFAA2741282DEE9899445EBCDBFBDC44CFF8EEFCEF8FB94761D3F836FEBAC307D1EBFEA203C1136086B0FB965FE495B0EE1AB8D092055BD38AB53E2D2CEFEAA03503B79169A0C9B8FA077FBD29E6EAFF7C1CF3B27E09CD426AF3E3B8F5F48F5AE37C352F2D07C5535C6F5E600D48CFCD4E24F5BA8030D7BD29D52D61B3DD16562C97E2CD18CCDEECBEA7A97530012F47A37D41C38CA959F25D7478A3B13C41EACCB786D6E4F79A54AAAD772646A0CC2EFFB8EC0FAC36EFF97AF6627CD5FCD7C777320F7563F7CECAD6E3261AF056AC82EC2E1F30578A639E37C8FE69DC178E1C3381C30094CC7C7BB61BDDF8C552817AC2FA1337D9DB55685D777C2F17A3F0E1ECCA925E9A9913DA732DDCA7D1DE837A4A1F4F89D5629D87BDA6D01765B8CECF6A6E88B05601E8FB46B4AAB24A5379DE6161452F41E6B9F8DAF9634DBDEECF7497BAFB4574B9DC6E6C93C462FCAC9C77DC183D8A0E7380B56BFDCA4A20A26F56C2B570C6FF56371B826E2F672F14E6EAA69DB86E145FC4527B181F523BA12C0CC967CD255F5A8AD03673910642EDB80B62316A045E60244CF5C877CBD3BC838ACDE8CF9E2AFAB0BDBF3A4FA671C5337E4A0D5884568316C2EFA4E5A813DC74E316997B626EB5B8F9C87CA9153F0E6E0C9A89B3A1543976CB2FD4D39C74FA13907AEBF0F9E882629B3B162EF31E6A6080556D7176DBF64DAA20DA893380D6F0F9E84E0E889E83A6E39B61D3B67F9DE78E418BA4F58860F32E7E3E3510BB06ADF21E6C7B5CB4B1C5CCF310FDAEC5A356A22DE8C1C8B2E6317326FA7CDCF7981B2E59E6D70F72193C6AA274CC51BD404DE8B9A861643E762F88A2D38E1F9B109F522CA448C7B536E3E7A4C5C825699F3D069F4222CDD7B84F6E223F9426FD63679AF777E872E264FB316308F73A9F266E38CCD6B15402510E0909BC858B10DB51367E0CDF071A81235199DC72CC1D6BC13AA225785F2C4879D54BFABC5CDA0FA9A6252A90683C6AC2B47AE4E74BD59FA82019898A47DF4B6ED9398418615F2AE4822F625641F3DC1D163948D76F7D51A8CD6A31623F7AC1B41C4DB824B7A7351A0A35A01F67044FA5AF334BCD07E886DEE9527019352B1BA60C569D140528003291AD5AC6A55FEEC513FBA57D30C9091186175752D0073C60613BD45E001CE6544770D3CDA0669C389F1998676BA17BFED7595AB88F6AC33FF3D4F9FE4D3F75D3A35273F38D2F130761E9E36C47AE1F5ABD6E55A8C481B9435145E4D855EFBBAA8F6E8B531A55512D69DA1A557B914A7DBBCEB5CD5FA344D7F39275C39B47DCB6D622E89A93459DB132F69C42FF9F525B6D2242B2D72B90DDA7A28F1233E944E5BEEDADC5C9ACFFD67645352A3341A361477D78EC5E4ADDE2B7DC63785BE3ACDCFA22F980AC90AD42B316C28561B7AE4458066A31449ACCE5CB11DDFEB3C8C40D6D55E57CA58B5BBA4F12A00C3E71716A1FFBC4DB8272C160FD71D5C7C0A841BE5756505F2A270AE83B9F8456555930571B7011223D8F04557AB901E97CC8F3AA6E6B7C865F158BC67A59A9A4837075C259CB520AC1767D8690408F223EE5F324830FF8ACF753EAF8198B1E6423BFA2DD2819D2E1D93A2AD43339CBD4971CE00C0EA5DE14A91A5A36F10B0ED289CC930F2A22C2ABCD2D76B5EBC77EFE7CA41F1BBB495633B0F4C711818C98DF9B6328A14995AB30B23EFAE9C5A94623915466D5FFEFD72797C536EDCB07ECEFCEBD957EB2C5FB4B13C5830A52F1E3B7B8B47646EAE1C4AA7D0944DBAD3E4B3403FEFA20DB854332985BDFAD1086F514075217E5B0C374D5FBC393055A4986C8D53578D28BA2533AD313A7F872F14A2CB94E578B0663882DE1A88D723A660A9F772F5E97317F0EE404A6A9507E03BEF2750BCF6CFC12A9B14E5AE13A791BA682B6AC6CDC4EB03C62273E50E3BD6664DEE09ACA5396BE9DE622DFEA791D8A04E46BA12C0CCD16393BA9C9B2C565DBA4EA5EE2249444B3036F27B757CB5F1EA5EFE6874AFB0EAC2B2313FEA87F6A3780494B2A72110C89D5D987D939991C4A6DCA809F151F1581C924BBCA39A958E8184F26EE82A80E0453E65A964E864404607494297ECF5344998F4433B0310F9A22A27F0D03D83594A25ED592909D4980B86713169C0766EAEAC7AC355CE4A57092B3E2F0EA625955BEE2E4AB939CEC8DD19575EF51B33CA9380976E2A93E38D008C712983A4D93B72714F3D4A5F75536DBEAE9DFF82BCD256AE18EE56E80B08609EB13F57FD56B9AA0432D3CD4BA9C21CADC8C9C3DBE1930862FD716FCDBEE8356D15F67104FD69E721A8101A8F597BDD24E9F1828BC8CE3B8305BBF3307DF31E4CCCDE85D1EB7661D0AC0DA84AD07AB231479ED7BAE3FED068DC5F3B06954222F14CEB2178E2FD143C526B107A4DF47732074855617541BA0AC05CE5597DA97396D427EB4C9DCBBA93C0411D4D9D56EEFAD1BD0CEF4B93754EEB82AE23292CFFCC9F492C821D19DD3B9070BEE5CFC91772732DC96B4FE6C3C564CF2A8B3AB7FDC9BF97075E0C343C5BF7AB1FFD12420C2814C66B93022497B4F95548238B43B0ED00C4F2EFA5EF7937FF32468CD7005231286FF221DEC88D8F02133B7C4092A27DB54AA5A483A5E3975E3FB2930B7F8C4F5E7C3496075DCD23D076F402AA8F31A63EDE573B1233771C32FB125074357AB3F4050330AF12C4278F578E69B42F2657B1D6503CEE4BBF1FB5662F5E6C9741A9AB1B62D6ED46ED214B51AE7A345A8D5989B62316DAF1408F3488C7DDC1916EE5AA4A6F54A8DC0B41EFF44085AA7DF03F3D4760F09C0DD870E20C26EEC9C3331F8FB5656C5BA57AA327FA4E2AD9ECF84527F1DE756760A000AC4A3F4CB9420273EEEAD4BCD0B8AE25E2838BC0C85D3C4F66AE24F9F03B8F93BF4AFCB9D0CE87A3927BFEAAE3F9CFF6E3A7AD36E662747922C99A1785B08EEEA7E1D9EBD98314926C5C789F8A735E6C291B0F743CFF2E0ECF4BF1CF15C62E7E0EF4ECD2918D7BD6BFFEF4E443A04BCDDDF957B938577BE64FC955770CE181DAC1F317F0FD0F257925D9D68EDF741F6EE7F3995FF2CA4E5CB1557E8BE1A6E80B278119D76E906C54D09C83356C60F28E7C54A24AF954DB2C3CD0640875F96404BD3D0015AA0CC4B3AD92F1A7BE63D028731E3E99B40283A6AFB22382D357EFC6D22327B0E54C21C66D3A84F73317E295CE2350BEC66054A8158DEFB5CF40FF292BED90BA9BC9DB7F32394EE85700968DF204B0C95B7C000BD0ED400EFC548717B166EF21FCBC4D0ABEDE2203CFB58843E222EFB5AD4227611AA8BBEABE69FA0202D88D9303308E32DEC83064C56E94D7EE68ADA45489C6375A24DB5BF853B6E5E270A9C3DE7C529DECBF5088F0B91BF19D5669B691B1FCBBBDF0DC0729689AB51863B373ECC3118E54E501003312BF352A932481551080154B6001BA1D4855683D82FDE702A5AB9C7385D8927F1639272FD80AAACDA311B56CFED9F37B2BAD3F0060D72131D4C0CB0330A98AE56A84E31F9193F1C9B825D873CA3B0580944FA05AB8F310C66F3988CEE396E1F73D47E3E5CE23F170ED0804FDA31BBEDE3C0DEDC7AFC2DCEDFBE9D7BD97E688E38F264E5993B75281FF9164F3280EC0FACFDA4809AC7F29153240FFF6E43A8EBBA82AED5EF54998B245830BD0019E9A5973FD4BF0654F3437470100FB0CD2EA8FBF27E69DD8E9B83B2C1AABCE5CB2771F779C3883F445D96894321BCFB74A4579ED4AB68F7D76C72361E1B48BC7BBB1933168CE1A6C3BA171C7916233C15973049A473173F395F71F4BD6A825BF0AC03619800524B0DB8D045A022B55A79641F4D1143EDB40AD9552F601AB67029B1609BCFABE590A00D875488CF75751A66CD88D07F59E59581A7EDA63225E6C9D867B4208586F744585777AE1FB6DB3502365811D7E97BA740BC1ED1CCE6815A734B1A2DCF2B73735AA1FBBD16CC1AD0AD1FF99E4037ABF69EB50F19DEE98B2F1163E0E12A0FF6F2498B2A5026F30D29612FDBA5AF5DAB9808B7EDCEFAD5100C03E838A3BD2B87908FADFCEA8543B168FD51E84FFEE9881B0F4B91830631DA66EDA8FC3D4F12F2757599AA0B4CD8F5691BED168A3ABFDBBFB0080159363931B912366AC41A5373B60DE36775244806E0F7200E6AD5216B7796764ABEDB66EEB8B9B072BB57E7A531400B0EB9049605221C9D71CAA8BA90BD6DB1761361F3B635F43BE8AACA254270AA3494A17B6A4F2ECC15D3CF26C02549A8C29E2DD25EC22AFF539BA135A240930EA36225759C5EDBBB8EE4CB1F4866B5A167B0800D83F9DD4810CC4AEC75743A812BF579A00DD02896D343647529A02EC0CD0151400B0EB506920526792E8EBA4AACBC1A9B4BF2B4D806E81C4361AF14F3C2F51C19D738002E45300C0AE43D68FACE338F1B6E48FDDCA96835D8F2A0D58579A00DD0219E32FE7AB6F17A00095A60080DD10F9BDA72C13A07F3A95C5DA00BB03540605002C40010AD06D4B01000BD0BF1D0504B000DD2805002C40010AD06D4B01000B50800274DB5200C00214A000DDB61400B000052840B72D05002C40010AD06D4AC0FF031A326D52124DC9780000000049454E44AE426082)

Include 0,LinkModule Standard_SPIDER_Inte,2,2,0,0,Standard SPIDER Interface.ana

NodeLocation Standard_SPIDER_Inte: 1176,296,1
NodeSize Standard_SPIDER_Inte: 64,40


Include 0,LinkModule NYPA_Energy_Efficien,2,2,0,0,NYPA Specific\NYPA Energy Efficiency New.ana

NodeLocation NYPA_Energy_Efficien: 1336,192,1
NodeSize NYPA_Energy_Efficien: 64,40


Include 0,LinkModule NYPA_Aggregate_Outpu,2,2,0,0,NYPA Specific\NYPA Aggregate Output.ana

NodeLocation NYPA_Aggregate_Outpu: 1176,400,1
NodeSize NYPA_Aggregate_Outpu: 64,40


{!40404|FreePassObjectCount H1qIqwy5jj2MNB76AAHtFYqpbdKuFv6EVNHQRXZiKGJOI41$T8jAOPbpiltx6mj5F8_xxW8j7FawgINXdqWVv50utvWAnDNk6pDKWetbhtCx51iK36c3LLYn5LiYhFbgir1ocNzHoKp9Qm2RJpIj7Qklnb8eFwgM9R5rcAcDr2IVXHEDHHO_jrlfFAiRrWGyl1VF8Hp7RRmirfku_BtlvCzrrnUDVtELBM8FRZoWQcxgkXFaGgv38Z3V24U_dg29BqqY5ZyhVF6SB$xogwGlesphA0azkaMFdII1hpR0Rdw8Pl1QIrLtNUWQFIQUfJ8KVQc5vSwexKaiyfku_BtlvCvxiOhLjw2X5bCIa8ryOZfTRaIHLLS2qu5gcGl9U9vbOg8un2g0BHkGkJNd9qtHPHJWILTXiMOWnSSBrDlSkHvT8IrTDuaeo5oqbH5fOiHxXEQ_eReARdQaSdt3M8JZxEYE0xGwJdYqq7VpE8Ec7u2_wYV3qG$cIwftS8yiDmKkqvkib5oApXByCrZPAy6Ml962mUudzeO4t9qaSF3FXyOzxhRtTExjRGaH6sgW2Wj5EANftC0CUvkuniaA2Qv8ewu7Rh2u6QtLyykWWuQ7Pya8pzJxij7JVNPcORZdoSIQhzocCocCY39Yp9RqiyInWeYS6sRAdI2kXpbaTEm5jrvtnplkoovVWWhgWQF5RzXuw9ELXfucUiDa0Otrva9cqrlrsYRAxnZSqTNLE8dCeyOfVQVflyeUgBWwGjfzNo06NNNGGyQ1Min8ayRPmCmFldbi3pLt9Xk5UyMtt8m6CStt8Um91Cix5jrwrXK2rWGyl1SGsS7Rrln4LhzMEg2eNVPJIwesCpO2eLXVCwgOjz22IF7kG3xlg4a0Z3uiDXzUtLlGG4mCdrHKA7qZ5tSsMnHjGIW0f6UbddcNB6625dLLU1vW28duCf_OkB7RrOLdea4zeMRt9SXuKiB9Gi3Ffq1FA0b5Z0FXwOoJJh9mn7CCmjSENtDsNzV8GmM53XyDFO1jM_iIxfJ4KygXdDm9JaL9wgWPA0oh3bkQCxWuWj0y_ot17K05FoCWp_2$oZ8oO5HEugOtOxZ7oyU6t2YnxumWx_6AL$2AQbnL$o$Xo_nxp05FLYE6GZGI3lEewtS6iPbzdQn3D2V1V48$XBmMSko1LbyopBWe0BLGwiXRHEgPJPWcYM6rVyMjs4EVFIWwMn7GIEC2pM_YDNjL6uAZi6IABDlU7fEuUBNmU1VDe_33KgyLDi6LVv02pVULH98cSRRTTAo9R_cAr$XCucIh$20HQeo3p3Wt66v0CKZHOau7NP7_sEpIfnixFVsi2b2NTMbiu0Fz2EYYhrVM7mANlAg6fhpYBi_3Jbjpd8h3JkBjBmq2tFj8PTnugfUKtLY1b5ioOBuTpyOPNB0dWUOPvomstvjDsWg1IRL22zzvyUppx_2uQ5nzMfqmx_6AL$l6NWQ7$vf5crHIG49JPcI9NRWNVF_TtUi2RvJqqDhHoKeenxbSDsGwR1ZCK9vOo7Vm1Ki0RLsAbmzz5FC_sSl4EGb$Lok2S$Zdu3GYm5vvBc2_7AFPViOScvD12zvQuCXe1VvQQc4hJRm$F4sU7YF1lauaM9lDsWg1IRL22uiRF$sCjhuxsgO0f5Yn5LiYU1Upvo_lT1czbr43KgyLDEeq0u5vwcY3XrAHXqCWxrCUhEsQ5FsOHF9AgbVUWC8sVlCKifZJ4$$x_WLVOC_lIuar37C336EIT78uTm8Stn_Wnzgqtw_dDf6Lj8e4df4aR8kJm5RghnpyaVrzqeZX4gDbh_IB14CGR5CE8jwCQlZp9UZNWGDrjAaq58KZt7UKJds7z8wvZTyOgz2GXt9YQOrcEi8UjtulhZY0tp3GRQI2jKpAc_TRnDgw2LfhQBnFuQ$fFy8VJOG4qSxPhw$9FS80ATnBC7wUrVkwy$qx7FUC5RwRq3BCD7rW1d9owR1qT7Hev2yfZMqQ3nRCS4oX3T2IRrlstmQtVAwcPh8254_mT7j5Tmr$5I_VbsuiREqhdVUycYdjJ6paDxbMc1vwrgP7nEdxCFNRcG0Lagoz675zgEpGXt9YQOxOi2Poy26_viLsFj7eekP_QuNrDVhpjYJyT3bEMaN4eEyXyKaqy$wfTD4QstoaOF5kMuKgs1_0_3dHWffhlokcGzRrEPfr8woFcq4LYkmfRCqSvCauJDDoHd$On_DJHE2gFgAc9BOyVoMedeUC5th7Y4X3X6AODd4ajnkysiH1YsR5hOa3tQuc2RWWdnSOGqKxdF_CsbFjAqASTfcME8rN0kO9P1lU0Q$FOouwhdKqS7tZMeIIvbDa6PVj_Kc$t3Mhrt4A0rZDcH1jWoL91qSrHci3VtMKc$Qgo5H6C0mFvKY1b5ioCzQoHdglt2IUnZfs595CCEuXHq5HXp0IWrfdxX_W_Zd$U$Z9TkhZYEpf0eChFlMSiI9uiSJf95_rhTwEcvEe_RNe_Vj_FXVP2sRpSAqbriM7eBX7Wk29_kYOwbL1q6nhWQ0Yp$CZ$Nsq0bwATmkbjXHmQr3PoGgBBa2e9hr_thYPxM2Qk9f5egqNn3NrdWRBpcQMltKsKvzPBa2Sbv_ssukNoAV_Y2flGmRt5ERRhTIscGc4bBjMUqe4Lb0CA30mntv2gTdkeRVrXyYv3TPO69HLWA2OMvpgKt3bsIVVm6OnfxQhv42v1RBgKlzRRk6QrltTh0y50ujLs0Wl9Kf3Pso0atLacuiZ9xd$V2gEv3RHlJp2Sdbq8Olbf6JRcnzkYJ7DfqAHYuAZRPzKqUUkt5FWG6Yn9hZjkqs$dLfm0QAB42yzT3FEMxuwuzXPOPFzseAhh16MNBFEIIP$zHCC8pfGgCpIsMz3xlAg6HdkegonrryYMZWOJEAe5LmFpJw0O6ZBamC9NXJ4b1W$W6eHPlUzNqHPQigaD1cN0kO9PygaVQDvV4Vt8HEGEJtkm_GPTSJBwdAXzLqo5k4LZwuz5uY$csHj6a_VVj0kBaghfmUJBcyRXySuRTGmOi9eCiJPnVyaz9boinZB$R_bHvesMCnX2MwFHUO84_TvYGwhxZH0YyX7PdaibHH84yxP5s2kX4uCbrt5LA8vomghBviwE1h7lPsIVRew8THUmAVr29EOUhNHGgA9$dRxZDbk7b$WWvNzU0eljTP1nZ3KrRzck4VLHi_2IafjY6wXpM_YDNkI2q0UevDlHJ2i5P_eEx7iM8rZUcwG02mbTZfGyaJXAobRu8a23x0ilggcfB00CPZhhVJxX_Ti0GdTcwQ3X_DTefVM$jN8OxfZVJ3jOtEXkpmomrPGIWr3CF9xiLoKoNRnNyet1JFKA1sQ_R$U2Y9FjX7drEe_2txhNoOlGsO19fV7fvKm8E5B3tIoEnPzeoLzjO4Yy8E211zd2lK_aHTysY0bx57EUQIvhEaBtVES2_iKgBjBRdbhTBeGvdH2IwueIgDnHVUicS1naF$hUmP94iAqSfppqdZYccjJ70KYJ$pHuGf06CB9AGIR3_4Mfu0661rbDm5VrIETtTAoLn$CNOJ2scTpFANPMJ8uRuJYs6TJU$DMShXUU3nIYz7HYuAZRg0PVhfhQB8A8DnikoopTN0bt4EXo8QphuRhs_FTNDoY3NycCv5eI_cFX3KXRG2zrPvWCqZnD7qKzWk3SwKrr3lEWxGGNXU6sXtKrRzck4uNrBTqDh5ccqWtDRbq47rhSuR2kM5JslLsKxVetzx1rMveSC3PreL8tJg_RsMoLNVPE_fFmCZhkibP8oFnFquH0Sp7a_z2_okTtPsLvP06bMm6OwppscS8pH_mUJdkWQF5Gn$8ETflXFiRF$sCmoSra0Nh8Z3V24V$dAkWm2qwlW_NjCfBfEIlUsAQw9KC$leVRJImbXWC_YM1gO2p3bT4sPlDmBh7gi6c7Rd_MEQI6fNs8jAiAlpF1b3Fc_IIEvlMmQrKuO$5Y6rHZ1TQeokc5f9OvV1goF2YzLsKJZldR_iBT0eCt1WLtKkHns_3B6lJxbAqQ7JjC66f6Pp9EFzcCxeQ8zHpQS0S7RbyCVtBcWqNem55LH9mY5R1IQl9Vyu7X7kMsDWirurkN5lWmJ1xwmVApFf2LOWalPMUo7QholcO5hCZ$Nsq5X9oKrJbpuwpcH1jWoAUvpS1JWgzEasF7Kt7ds1viSLBqIsl_HfzOIKWfB$x2DTfykzwuI_onqy0BrtEadTZKyN5MYtpninx1EwJdgesrT2cGoN1dKWQ1g8U$XsAF3$_229lzFZegVEoLhGwWDPuYOzPq0T$T26JnRq1LLWNVP3uIqP3fMY6kVzLmIBBJH6_lFlM2gPd_kGoPf$TjjueeRrApXByCbF5gS0KptBDA5lPydN3s8nXP1qCCShUOQI1pUBzhWqVHBrg46Of1A0_$57Guu_DiSO3PvaqLxT6EvR9ctFJYTfdLEiRF$sCefaMA$nW6awANWTVTY6z$DSehlkZEtQt8Um91CY4kIgwCGKG5mWC$HfcTBxiP1VxKWkpkXPD8Y276yqjVBvPwGWjupploKAQZUG1ZLyGQm5VrIENr8MqgYfPPweFgDrP4EnZFo5HeXRGGJRVgKMXjx76pNBh7IOVlot17K04HHEGKEBDBGqVXkaRJEEADlYoqiZ7$Y2Ke2Nn7aWa5PZqCH79wY9X1aCmRb8mjaH3ncwdPcZbZeC8DJRXAgMnPq_DE27HNaG39MTLKM3j9dBFQLXeqyBvj9UeugK3ZME2zN4uxznWEftMwQ17W0lBpDYsthmw0Dv_8dzCWm7z1UgvB6nhWQQ0efhevFXwo2RrH$jKGxXaEnEWh_Mg5$Hd6IOXnpbY4tlZUuVRD6eLj4c43x_4gC1xnkAOXfU6_e_T_a6lt6eFmEctFLKQCweEW3hFw4LvY5b$IifXQ2ypldc4fXUL9tUCTfso0AsXQOIJpXUMHCsNr9a28DP6iddZc8ppkcT9wQwJpx2G$dacafDACXls2AP78UZZpgS6hEew7Qkclz7O8HV1Rl0BJLD4pM_YDNK6pb3Tcw$ttw26Hxz8KYkcQzhASsIEMWblr2kCbz2w2mM5siUNlwmkdXXTW2MbpkSQ_nfTOo_5B_aQ1LnvATr9aUn9qX1Sk1DMPI$nVKe9$gG6f7Urpiuma7raO8$LqeNxjGrRfsphmoW0ndPIgB1oOCnO0nt5z_mZK7$pk8xp$332uiOuQn_GUpdp8UsCMJ$dM1JdwDVk2IfVxScv_GLFxX6U6HNOf$HgYp5IoqyxtmjljoM352qqbOCoJp00GL$_KpJrLcagiVKApBetv3GYm5vPr06DT4oeArYK2tBuglohTHyUyHelx3I087wGK9DU0Z4g$$$t0EOfPYwDblqufDveSC3PTE1$mW1Hf3JXW8575AkUWhtqQzV7dAoM1BgV1k8OqEQXdQ0kVL70OOdkw2H$DMQnDb42gTL94UacN3mcEnJYakxDRmag6HNUk4MldHsQhl3IcsD3Jr3OmmlgaN3n0WyUl5Nme3Pgm49GGIrfPF1wIbzHicuV5OUqldL4bFykSHbhiiPvXBTknt4MavjJqKXXnqsfB_sgb$BIOBnd8Wh0_7HN0aPJiIvPo1GLH8rduLk5HPVODzg9jDqwOBzSkGTXOYT5Z_eElLtWetXGpUEwj$nngOq8Xh74ISlRvN4saPjPB624kHfljmaht$EymCXhZJ8kc1Nek27ENbl0mfx$3DPR9yTBJjp0GRhtAyqKjxthaEAqPyEWhr2KYthb7YomcXDBxcuNn3Oo8bXrFoM0ITTBnSuc6X_W_ZdnZEky2D9NJA$Z7qP3fMYSDmauQr53vqWVZZgGAUhkmhdOkFhAkErxRDhGuEapuyvuyy3fdhmeOJFhRk048H3xy24DrtBBISKCzaAf1RTUcfnr0gTfdbeK6uiJem5RVafpv6o_FQkssYLBlJm3LWaht$EyuDNcaK9ri8qJd1znw8IZJ9d_A4sjLFgM_9JizJb_sqQvDF98uwXBoSv4ATr9aUU6dz1z_mqgRpOuGg$PlC8AqNlrpsgmeRrS_a1Z1cgqcHn$5GCQBtUzRhxQ_U5BNBuQgo$zDzoeK6WvQ0YBJAzd_eq6GNRYks5pf$EFD31sOB3toCIE$1bFnGk53E82rdSMC9b7HKCoGp7jx8SK5rgXTLKoeaflza2Omv9SMOTdjwcd_C6yzja4qMntGk8ffR6S4HUQMOTdjwcgm53ihX3XA5QUYivBPkYhAWYWfXW80gKjrGmClnvcDhBnDfx4950vYGwhxZH0YyX7p7KM6kRvgWIBZgjdE8a6WtBarBTskiIn5710moS5r9MtGk8ff2WH$f7Z_CPWPNHIofdWVB$YIm9WcihfgmoxZVmmp05FLYEDNjAUlx$vqXChFlMSrP9wiInFXn_14tlZUubTXfklbJ0a3Wj$DYMTlDi9Wlsy$rhMtT$emBnZM2fFh8UfolaUKHjSMSaadR9rNqJen$9QAQuFRL7_cWqsVDteuXFGE4wgItKgtw26Hx5KTllleN5iKnp08INXdqWWrv0E$lHpQg0XwOoJJg8k0RtpqlpbN2Z3StNpMOpJBtcEe1GWfaaWZ5ww6MVXSPFxWxRtQSnHzgHoIl3CKMJ2scTpSGGLNBvgClAVes0H14Ii7Xq$980rcJmImLPmI0nQzVwFRelcYQPteairw_viVAf3OZp$I49PrPpBQWaUH_ZDpWiBrhYR7jDh5HQVOMGHnnz3vdMClDai4FFL722_1ZBIbo_3$rdHuToCY$xFfCmQ0jvtmeDb5df0SqJHcInNhuC82vfM$gQ6vBqaI$X8mzDQSPHuQCvhPEYE0xtvtyWdfcOO9yeNBxo8sgdbN1NqKSZceZND_qcVtXJ9pjOm_9ZvqojhH4ymh5jkaVR5eIdvto$HVqeq6XzxuseEmYs9JLPefL9ueUG9XhXWW2Z5Rbh1IewJBrQ_FJVjWM9$Y0DLbuGa$v_Zn5BXaYFtdQI61RFL70ycGpCar7voRLA4wtJ7GODrbNgEkx3wiltx6mkpwsgfXRBvKgvF8y1BHUA9TWUiidX8Y4fJvconNzn6iEYn$wedhhoOCPMEJL3Z6gEWjuoijpr_cNThZaM91d8d$Pftehpt2i8VrukiiD$j8UZZs1HTmY9LcuC51wsAa7h1IYl1FaO_V$CCKU95zY2HRvEe_RN0at5Zp_8$fRI1rbSoJHVVURAsPyRg_EbRhDRm8EKJ8yfFtLnwBXpC42e7RTNM68hVFi4BDWuCdXX9g0401ptSI4ZzWxRtQSuc0X5NfqrrkeFn2EhDhGKU71uaBd$OfsprpuSWfiuvVGo6LekyCF76AAHtqu7$_vrZCq9HXpuopvx4iVl8SeluvpfQ5W0S$1Ci7Nr4LdnXPJwS5pTEU84iRDjDcr3AADLPaE19C4A1wqqSzJNJK6BLReK9JOIQJEACsPntrANftC0c7dqqy6rdM8d1KNLauhiaN8pQvKZgs_DxMi1NLIME_Q7vdSmvdWKAsEhsE04qhbpYM6zJoYU9eEWz6Oj7TwsBXyHlw0rbTOOKNvqmnimXDe_as_5J8qnpnsQOeadj1kN$WwNvNy0Fxa2ex96__19DO2Uct93yb9we2ETj_Kc$t7WwMmJBBreCnKc7W_OvvKkJfnqxrtxdI4$BZ_UwTVfGc7PYuAdaAsK2TpGoGrvlWGjzLlnownaEgBPuSyZfFyP7Lk1z0saYDp8OvV1goDzSsOyJVnZWNtUuAjLvakBzUwc4TTeltsprpuSJVQGM3d9ZuJmImLPZIxDcosAnjO_iTJ5_MqtqQ7d$dyCB57B2aNF3_OCksXBd3b9OaUgM9iXRHEgNLNKI_R7D1r9A6nNEA21VGMBxxjQkDe4Of$HgYjDSc0GCzuXOKCBfVRW5hCQ$GSl6YwPNeEZpBbdemIYPLDCgENQ6vVzhCKNbu3JVoaf3CGa4ofcechFy2wolL1rGYowz6HXj0oj17DOC680azWnGqKx1D_fzOci29zvnQ5nJqQybj_e4W2VZqmysXRlnPya8pzI4$ylS6ayGWhegejHxyt3qhBn9oWAxB6qTE0ey5OPeyCZPXnCMSXk0EZNHm9BKG48zV9rNbol_IYvlmErQuGYhkieP2mQBR_icXLBsSuLdqzwyw$ZQSgz9HIB1kKrCe0VTj5XnHHOFN1nSAqCHg8Y33QyYwSk_qnkQBh1V0c8nvZJ_iMkpwsgfiddZc8yuuimeOqNzBOXfgaXZXcAs29JPJ5Z8m0FQadisy9rxJNYmcRCybFPm1A4BNVkSIevDTS6xPz7jj7lmv7HYIKUik064kVJlAXtGXt9YQdvMWjw8wvR3e3HlCVtBcWoPd28Yv7MPOC_fAmIx3SC_oZBqHgu494403bPTMalnqhU6iBWwGjfoGctPuEbmtpjW9tXIYA7hSudIsOqBRdhgRH3yKzz$21vlVAkEcv_8ER75JMj0CMQPH5nOnFfAANvJeDk8Wo$571sT9nWkN$$sogf7hkeKCwP2Gf6e6hlxdEuUopskUPMOMR$fw58yZL9mCkoy19EOUhNbv8QeaDuOmJxQ_U5Bb6fFt7MikiPHwM3rZOi87pL4U8WbieSRSYajLMSgpzF4c_ZpJXSPBEMQbF4PNRHNAkUI1kGf_BGQWjPTss3x6FLHBuU1Yt4MavjoEiBe2IWXRI7mHtP2AaEjWH$Z5QepyvkeURtWUK5651pZ6YxITWeitXZwu3v240wmT6g3OZp$I47XzQm0EOPMExa3d7kqCqH2iGoGbs230phVQqRNBwvnZJ$Y1Rgrsy_7lyFBD1zxiI_DRRRWEHPTeI3Rs9XrGARpJZ__EwiT_aCgBnJy4Z9tL_CgaaZI6yeP2mQBRsePwiCf9LFD$1eLhM6obt_gRFjRxMOdXiy8RDOe0Jd1oTgNj9NsQwXdI3TzFn1AQ1pT2jQCwl3lXKwO1h1JKWTD500y$Xss36AkPqWn88E6E30205fOdVTDDwYvBj5925srvv0cPXUMUJ3Yycr136xvw02Bpou6GB86fIay6X1T02CsPy6ITdpVV4l3Tf6e6hl_j5ZpJWUeptvvoV7cAgHNmK4reHqKes067wocXxeWagfXSHvPpANftC07PtMmAQdgdZJ2Z9hKSybFxbgsu6I6vpuThEsQ5FjIvLf8ez$tx_6AL$1COcoaRxa$d4EEQejtzAsLVn_C8rn5rdLyLpDkkynhXUwbsCUtl0MqDdCH$pPeCVjCmGtzBoCj1Dfuy6a9mCW$W6eHPvYCuYlxvtwcOJJFIqgrlimY1YEm_B8AEHPTeIKVhv5bCrJfAi3717CMSfLPcq4IfPxT4Kg8RRHOaixfl_EWmcX5oHzUim0HQeo3pxCUo4lR2jBvSio4NYo_H3DWqAUL7qZP4Sg4TxLssQtJqMhdUP76AAHtry4EM2dBqUx$_1t_AIXFHQbbTWaT3V7mHtP2AgJzfJZuszsytVzdKtV3kuD2W4Qp7A8M1d5E$rdWu3vtmgMnDh8g8jnzcCm0WsuvgWOFB32WZiUM0jLi_WVPBeibUSMNtmkqrtcGfzXyIWPWiq3neuwyCAvYIkJwcEzBjM1XvS0PVRZjkqs$dQjfhVykFhr8Soqr03BFQ419Tp2DGLJ6oPyJl7carHvdAf5PejpoZPB4SbRP3sga5Wyz4qgIzmeSNnWbXAi9d2KgxxlrmOD7zwMz4qgIAY1Gm3zyrtcTPHGkaWTDreSuJUajsgNLEC67dLSJ5wlFeIewx74qqllhkG4E7B0eW_XxLam$JZwm_Idllw6_oL3YqMUhyIazr$Vk8JHNVQA0eyHPPi4OpjnSg_FMGQPzcIeExMsIrtDg9Tf0OHNMFzaIk3W2W59xQxHVuIDLMH1gQ7iMyfrQ41vfO$ZxFWlkoovVUYvFPbZSH1hEd5V006lIhBdr_6xZJ5g4bBjMUKtSs8bxJXRQ711z0ZBlQaWNDm6a45NbXArLjGrV5o_OBpWEkzDVldUS$ewXDraoojdEeAk03LC9lRvdG_ePfheaDfDp_CNbCqX8uZJ$o4TKwdBvjTKgORTCkO5tbQkB1fH_KmKPl1urR7bK8ul586pRBzGqKNPD1wS4rhTMkUZdOymFbkABI2uWPNHIobZjv__vmbFrHivBPkYfxPyQl_587_rS8mVjEwoidN5iEYu34ACLzu_GZo_66xoZ5ezNjA6DnZCoEbq39C1xKvQqAPcjmcN_grIgx421pW7cADSiqnfTFxSvAWLQLI0lIpEZiw4L50RVfbnoW4qQ3nRCS4rdRDa17JHVYIugRH3yK71njdK0Tf52GQQ6naSGBbRNIzjVFoKdfp0IWrfe7FTTjfJ8iChI_cLZwgCk0Ols2GSM1cIgJ1hSi8sj7d6Lf$seIdZ4hM6obtH4gNtFOek0_xG5Z7qcK9T$wgVLmHRhj$6waQ6rfPGcvxusf1aAHfzsrTBhSI4zLIL1pNBqAMk5XvOMyXxQeejxkd9nBjHe1VvQQoCr7IkLSC2gYFfvLmGiFH6cEnLhju4riCoApXByCqUNvhe5BNLZcMykM1nTGYPMye6qNdj$7HE0uH_mUJdjRO_TD8ZdnjvwebQKjInIiu771wfGyaJX4zjArDRrEi6dd0UIzW8iNX4idS9xfUoXF8oEb0EikzldS7bK8ul5aO4mW0WvPTkYSJ0WH7voA6A4zXCeuQkzB6qgZXRSyYhkW8xNwCQu41DCvqqmpLGGdx5AA7ydAb5X46EvUoyHFezCLMF8wb2a2dh2aI1mPvIfu32vrjiAxt$8CD4rcJqLit7JcOTj9i3NaekgaJuY8r1WA0wkT9k9Rfsrvv0cVZp4JOVTG0kJk1Pj82FdBuUuHXgpmjQCwl3gSQPI4pR3auDKWetbcoAZsAKKL9ydAb5X46JzsdGnDcs3611z0YFPk3DFE8zbEf9b8A_U7nXD0IMLJ_SAawNvNy0T$qeKzY_FWdcTPHGkbXpz3$sdK1axNlECydHeo4OHD62nEc2WvNnII4YwYs65$w_qbLo2QrLnKMmGvZwCNfUEvP7c7f6e6hl_gVFuX4Um_23wskjBqwAIMLB$nS1Qh1JiarBxV3Po3A90yqpH2_6FORI4rSwRkv9LeQNnKsHdnv_tmT2iI$BmQNI7pU2So1CBFFMyjxQj$69A2lUzX1ek$jcUFxUzHUjimmtTESp7NSVWR7nKjBb66HvoU6h5Virsljde8pxCViokcRAlEXvDeYd9rU$To7HQL80ql9yq$786yhKsHkxDRmaXpz7LJH86eNf1MXu7Rh2u9Pq0_tqaa8vDd_BarBTsk_Z7OSeslV2uMpGbn4SmB5IgEpOo4PZaYQBoU6r3aG81teGrFe$FOJJFIqffrAHMMD0eHo7XtKGVvV6lHk$EMQPIxfJ4KtbVRJ5oOwKdsv15Gwt$Jev2CA80iLyJl7carHveIl9QhoqpaQC5T8_0372tYBoBans06J$_8UvAMZfYSHuNxR28X5rcL1b4OdqrqdVJEeLDHTUNG0kNwJWo0L9GY0VzFXjjgZMzfH0ElRJK9wb6a1GNZhwefrDcvBOQTK5kLmGiFHU8xeJwLl5DFE3zpmCpt9HHDA$dIl4UqHDUyiJwQr4CIH60spF0_BOSPD2hEg7MgwH78cDqHbx8IMK7mU8v983hU_KsMF9813oSrWGyl1b_2zzvyUsCDBxjb$VsARdsAQndr5ai4_41uS3gIVok$Ld0u9VFpFbxERURC2qj5qgeI5vFaixztv_8ER7b_MRJJLbEtOmFpJw0RCgJfrDZgUQIxcJKY6axBFIA1sN14wtDazMmCe5Z2Y2Z5eDoO$dGwaGygO7tePC$peVME71yuqonmnoqtx06CJSblx7KXm0HZr9To8VtGf3UxOsMsMuR$a9mN$fIzfL2mWG1qcRG5yqibWRNKIHGGIKOSXdkt$9KViv8Mdu9Sl4Pm7WvJkAd5Z3Z4c9jItU6kO2kQ7raK5seRF4wnfYSMIECA88ABEIMRYfnw4FRer3JZq6Qj2Ol7WvJlBe6b5b6eCmLxYApT7pVCxgQBylZNC3wpicWSPNLKLMORVafmu1ALWiv7Mct8Qk2Nj4SrFf4X$TyS_W2cAmM_cGwbH_iQ9vhTG4vlcTMFA52$zyyz_048DJRYhr0BObp3Jar8Sm6SpCb$QsJnGlFmJrP$aBpR5lR6pXG0mYL8zoeVNF94$yvtttuwz16BHOXgq$BOcq4KcuCVqAXuHh5XzQvNtOwT0bAnN$eIyeL2nWG1pcQE4wogZTPLIGEEEGILPUbhox5FQdp2GWn3Mf_If0NmAb1TxQvQxT0a9lMzcFvaFzgP9whUH5xneVOHC741$z__037CHNUdlv4GSgv8OfxEYtCZxKj7Z$SwOtOwS$Z8kLzcGxcI0kTD$mYMA0sjcUOJFC98889BEHMSYgoy6HTgu7NduAUo7TqCb$PrIlEjCjFnKvU5iKzdI_gO7sdO9ymbRIA2ysnjgeddefhkpu_5DMWht3GVk_GYr8Sn8VtGg5WyQuOvQyV3eErT6lP4mTBwgRD$pdSJA2xrlgcaYXXYZcfkpw1AJTeq1FTj_FXq9To9XvJj9b2W$V$X3dBmN_bEtYEweM5rcPB_pfVME81yurpoonprtx16DKTdny8Lap2IatAVqAXvIi6Y_SwQwQyV3eDqS4jO3lSAueP9xkZND3xpjeZVSQPOPRUXchnv1AKUgt4JYp4MeyHczKj6WxNqInHnIqNxW6jKzdHyeM3oYI4tgUKA1voicYVSQQQRTWZekqx4DNYlyAPevATm4Pl5TsFg5X$TyRyU1a8kJxYBrWBucK3pbNA_oeUMF82zvspoooqsw_39GNWgq0COcs5MexEZuFc$NnCe5Y0W0X2b8iHuU6lQ4mTBwfQC_ocRH7$uoieaXVUUVWZdhms_6FPamyAOeu9Rk2Nj3QoCc1TwOtMtOwT2dCpR3jO3mTBwgQC$odTJB3ysojfcbabceimrx19IRbmy9Ncr5MexEZuFc$PpEh8c5b5d9iGrR1gIydJ$jSByjVJ7yofWPJD941$_z_026AFMTbjs1DPdr4KcuAUo8UrDc0RtKoHmHoKtR$bCqS6nS8saI2oZM9_pfXPHC61zxvuuwy$37DKRajt2ERes6NexEYtCZwJi6Y_RvOuPxU1cBnP0fIzeL3nWH2qdRG6yqibWQMIGFEFGJMQVbiqz7HTft4JYp5Oh0Lh3RqEf4X_SxRyU1bAmN_dGxcI$jSBxiUI6xneXPJE9531000258CHNVdmw5GThw9PhzGavEaxKj7Y_RvOtOvS$a9kLybFvbH$jSCzlYMA0rjbTNIEA86667ADGLQXenw4FRft6LcuAUo7TpBZzOpFjBgBiDlJtS3gJxcHzfM4qaL7xlaPG80wqliebaaaceimrx3BJTep0DQfvASl2Ni3QpCc1TwNsMsMuS$a9lM_dHxdJ1mVF1pdRG6zrkeZUQOMMMNOQUZekr_6HRdq2HWm2KdxGbxJi5VxMpHmFmIqNxW6jL_eJ_hO7scN9ymaPF6$uojfbZYXYZcfjou$6ENYju5JYn1JbvDYuFd0QrHjBf8f9hDnMxX8lO1iN3nVE_mYL9_qhZSLGB743223469EJPWdmw4FSfu7NewDXrBYvHh5WyOsKqKrNxU4fGuXArWCweN6teRE2tjZRJC61_xvuvvx_15AGNUdmy7JXm$GXp7Rm6TrDd1TvMqIpJrNwU2eEsU7oUAtcL5seRF4vmdWPJEA7543357ADINUbjs0AMan0FWo5Oj3Pm8YxMoFiBhAhDmKuU5iL_eJ$iQ9vfRE0qfVME6$uplifeddfhlpu$6ENXiu4IWl$GYr9UqBYwKj8a1VzSyT$Y5gFrT6lP4nUCxhSD0pdRH8$uoieaYWVWXacfjpv$7GQanzBPfvBTn5Ql6TrEe3VxQvOvRzX6hIuW8oS7pWE_kVH4tiYPH92xsnkhfffhimqv$6ENWgr1ERgvASk1Mh1PnAb$QsJnGmGoKvT2fHvYDuaH_iSCzlYLA0tkdXRMJGFEEFHKOSYfmv2CMYlyBQhyEXrAWtFe1RtJlDiCiEmKvU4hJycHzfN5qaK7vjYNE5_tniebZYXYabeintz5ENXjv6KZp4MeyHbxIg3TtJmDiBhCkHqO_bCqT7pVCveO8wiUI7zqiaUOKGDCA9ACEHMRXfnw4FQdq3IZp5Nh0Li3SrFg6a1V_V0Y6gFrS4iM1iP6qZK4rdRF4wnfXRMHEBAAABDGKPUbjr$9KViw8OevBUo7TqBa_PqHkCiBhDmJtT3gJycHzfN5rbL7wkZPF7$vpkhebaabcfimqx19ISdo_BQfu9Qj1Lg1Om9Z_QtKpIpKsPyX7jLzdHyeL3oYI4tgUK90tmfaVSPNMMNPRVafls$7HRdq2GWm1JcwFbyKi6WxNqHmGmIqOyX7kM$eJ$hP7sbM8wkZOE6_tnidaXVVVWYbfkqw2AKUgs3HWm0HZtBWsCazNnDf6b4a5d9iHsT4iM0gN3nVF$mZMA$qgYQKEA531$$0147BHNUckt2EQds5LcuBVp9VtGe2SvLpHnHpLuS1dDqT6nS8rZI2pbOB$qhYQIC62_xwvvwx_26BIPXgr$BNbp2Ias9Tp8VsFe1SvMqJpJrNwU4gHvYBsYFygQAxjWK9_qhZSNIEB87779AEHMRZgpz7JViw9PfxDWqAWtFe2TvLpHmHnJrQ_aAoQ3kP5oWF_lWI6wkaRIB4$wtqonnoqtw_49GOXgr1DQes6NewEYuEbzMmBd4X$U_V0Z7iHuV8oS8qXF_kWH4tiXOF80vqmigeeefhkotz4BJTdo_AOdt7Ph$JezKi4UuKmEiBhCkHqP_bCpS6nT9tcL5tfSG5xnfXRLFB8655569DHMSZhqz8JUhw9OgxEYsCYvHh5WyOsKpJrMvT2eEsU8oUAtbJ3pbNA$qgYQJC61_xvuuvwz15BIPXhq_ANap2Jbs9To8VsFf3UwMqJpJrNwU4gHvYCtYFyhP9wiUI7ypgYRMGC9755568BEKPWemw4FRft6LcuATo6SpBazOqGkCiCiFnKvU4hKzdIzfM4pZJ5thWMC3yrlhdZWVUUVXaejpw2AKVgs3GVk$GYrAVrCb_OpEh8c5a5dAkIuV6lO3kR8sbL6tgTI7_ribVPLIFDDDEHJNSYemu2BMYlyBRhyFYtCYvHf3TvLoFkElGpNyX7lN0gL0jR8udOAzmbRI91xrmifdbbcdgimrx29ISco_CQfvASl2Ni2PnAZ_QtKpIpKsPzY8kL_cGxdK2nWH2reSH7_sleYTQNLKKLMPTXdjrz6GRdp0EUj$HZsBWsDazNnEg7c6c7gDmLwW8mP3lQ7raK5seRF4vmdWQKGCA8789BEINTahqz7JViv8NevCVp8UrDc0QrHkChBiEnLwV5jL_eJ_gO6scN9zncSIA3ysnjfecccehkpu_5DMVgs2GUiyDVo5Ql6TsFe3UxPtNtOxU2dDqR4jO3lR9ueOAymaPG6_smgcYWUTTVXZdinu07GQbmzBPfvBTm4Pm6UsGg5X_RwQxS$Y6iIvW9pT8qWEziTE0pdSI90wpkfcaZYYacfjpu$7GPaly8Mbr5NfzHcyJh4UvKnEiBhCkHrQ0cDrV9qWDxgPAxiVK8_ribVPKHECAABCEINSYfow4FRdr3JZq5Oi0Mi4SrGh7Z1W0W1Z6gFrS3iM1iO5oYH2qcQE4vneXQLHDB988ACFJOTahqy7HTft6McuATn7TqBa_OqGkBg9hClItS3gIxbGyfM5qaL7vjYOE5_tojfcaZYZbdhkpu07GPaly9Nct8Qi0Kg1Nl8YyOrImGmHqNxV5iJybFvcI0lVF1pcQG6yqicWSOLKJJKMOSXcjqy5FPan$DTizEXq8TpAYyMmCf7c5b6eBkJuV6lO2jQ7raK4rdQE3vldWPKFCA88789CFJOUbjt1BNao0FWo5Oi1Nl6UuJkAe6b6c8hFqP0dFuZDubJ1mWI3shWLB2xqkfcYWVVVXZcgmsz5EOYkx8Mbr6Oh_Je_Mk7XyOrJnHnJrNxW6jKzcGyeM4pYJ5tgUJA1voidYVSRPPQSUYdipw3CLWiv6Kaq6Oh$Kg1PnBb1TvNsMsOwU2eErT6mQ6pWF_jUG2shWNE60wrnkihghiknqw$6EMWhs2FUjzEVo5Ql5RqCc1TvNrKqLtQ_Z8lN_dHyeL3nXI3reTI8_sleYTPMLJJKMORWbiow3DNZmzBRhyEXrAWsEc_OqFiAf9e9hEnLxX8nQ4lS8scL5seRF4vmdXQKGDA88789BFJOUbjs0ANZn0GWn3MfzJf0OnCd3W_TzU$Y5fEpQ1gJzeL2mVG1pcQF5xphbVQNJGFFFGJMQVbiqz6HTft4JZq5Oi0Mi3RqEf5X_SySzV2dCnO0eIydJ0kTDzkXK8zpgYRLFA63100136AEJPWenx6IVixBRi$IbwFczMl9a1UyRwRzV3dCnO0fIydK1kTD_mYMA$rjbUOJFC98789BFJOUahpz7IUhv8OfwDWrAWtFe1RtJmFkElHqOyY8lM0gK0jRAwgRE0qfVLD5$vrnkihhhjlosy17GOXit4HVk$GXq8To9WuHh6Y_RwQwR_W4fFrT5lP5nUCxgRC$odSI91wqlhdaYXXYadhlrx3BLVfr3GVl_FXr9UqBZxLlBd4Y0W1Y5eDoO0eHxcH_iQAvgRF2siZQIC61zwussstvz05BIQYit2ERfv9Ph_HbwGd$OoDe5Y1W1Y4dBlLxYAqT8qXF_jUF2rfVLB3yrlgdaYWVWYadint_6FPamyAOdu9Rk2Mi2QoBb$QtKoHnIpNwV5iKzcHzfM4pZK6viWLB3xqkfbXVUTTVXaejou08ISdq0FTj_FXq8TpAYxLlAc4Y1X2a7gFqQ1fIzeJ0kTCyjWJ6xmdUNF94$xvtsstvy05BIPYit2FSgv9Qi$JdzJg1RqFh7b4Z4b7gEpP0eGvZEwdL3paL8ylaRH92ytpkhffefgjmqu_5CLUfr1ETizEWq8To9XwJj8b2W$U_W2cAlLzbEtYEweM5rcNAzodULD60xtqomllnpsw_4BJSbmx8LZo1IasAUqAXvIi7Z$TxQwS_W3eDqR4jN2kQ8tcN8wiXLB1umfZTPLJHHHJLPTYdlt0AKWiw8NduAUn5Qn8WwKlBe6b4b6eBlKwX8nR6nTBveO9xjWK9$skdXSNKIGGFGILOTZfnv2DOan$ETk$HauDYvGf2SuKnFkDkGoMwV5iKzdIzgO6scN9ymaPG70vpkgdaYYZadgkqw07GQaly9Ncs7Pi0Kg0Nl8YyNqImFlHpMwV4hJxaDvbH$jTD$obPE4xpibWRNKIHHIKNQVbhow3EOZlzCRizFYsBXuFd0QrIlDiBiEmJuS3gIxaFwcJ0lUF0obPE4xphbVQMJHFFHILOTZgnw3EPbo0FVl0JdxGbyKi6XyPsJoIpLuS0cCpS5lQ5oVE_jUG3tiYPG82ytpmkjiikmpuz3AIRalx7KYo2JbtAVqAXvJj8a1UzTzU0a8jIuW8nS7pWEzjUF2rgVLC5zsmiecaZZacfjntz5DNXht3HVl$HZsAVrBZxLmBd4X0W0Y5eCoO$dGwaGzfO7sdPC0qgWOGA4_wtrpooqsvz28FNWfq$COcq4LdvDXtDayLlAb1VzSyT$Y6hGtU7mQ5nTBwfPAymaPF6_smhcZWUTTUVXbfkqx3CMXiv7Lar6Oh$Je$Mk8YzPsKpJpLtR$aAnO0gK$iP7scN8xlZPF7_tnidZXVUUWYaejpv19JTdp0DRhxDVp7So8WvJj9b3X0V0X4dCnN$cFvaGzgP8vgSF2tjZQJC61zwutttvx_37DJRZju3FThwARi$IdyIg1QqFg7a3Y2Z5fCnN_cEtYDubJ2nYJ6vkZPG80vqlhedccdfhlqv_5ENXhu4IWm0IatBWrCayLlAc3X0V0X4dBnN_cEuZEwdL4qbN9zodTKD60xtpmkkkloruz3AIQakv6IWk_FXp7Rm6TrEd1SvMqKqKsPzX7jKybFwcI$kTE$naOD3wogaUPMIGEEEGJMRVbhox4EPao0EUl1KeyHe0NnBc2UyQwQxT0a9lM_cGwbI_iRAwiUI6yofXPJEA642011359EJPVdmv3FRet6MdvCWrBYvIi6Y_RvOuPwS$a9lM_dHxcI0kTD_lXK8zpgYRLFB85443468CGLRZhq_9LYm$FVm2Lf_Jg1QpEf6Z1X0X2a7hGsT5kO2kR9tdN8viVK9$skeYTPMKJJJKMPTXdjrz7HTft5Kbs8Rk3Pl6VuHi8b3X0W0Y5eDoO0fIydK1lUE$naOC2uleXRMHDA9889CFINTZhpz6HTft6LctATn6SpBa_PqHkChAhDlJtR1eFuXBsZG_jUE0qdRG6zrjdYUQONMNOQTWbgnu09JVgt5Kar7Pi0Kg1OnAb0TwPuOvRzW4gGtU7nS8qYH0nZK7wlaRIA3_vromllmnpsw$5CJSbmx7Lap3KcuCWrBYwIj8Z0UzSzU0Z6hGtU6lQ5nUCxhTE1rgVMD5$vqmjhfdefhknrw17FOYiu5JXm1JbvDYuEc$PqGiAe7e8fCmKwW8mP4lR7raJ4rdPE2ulcVPJEB865557ADHMSZhqz8JVixAQhzGauEbyJi7XzQuNtNuR_Y7jKybEuZFygP9vhUH5xneWPJEA73101136AFLRZhq_9LYlzDTl1KezJg2QqEg6Z1W0X3b9jIuV7mQ5nTBveOAykXMC2woicXTQONMNPRUYdjpw3CNYlyAPfwBUo6Rn8WvJk9c4Y2Y3c8iHtU5iL0hN4oWG1obOC2tkcUNID96433469DHNTajs$BMYl_DTk0JdyIf0PoCc2VzSxS_W4eDpQ2hK_fM3nWG1pcPE3wnfYSNJFCAAABDGKPVcjs$9LXkyBQgyEYsBXuGf3TvMpHmFnIqNyY8lN1hM1kSAwgSE1rgVLD5$vrnkihhhjmptx28FOYju4IWl$HYr9Tp8VtGg5WyPtMrMtQ_Y8kM_eIzgN5qaK6viXMC4xpjeZVTRQQRTWZekqy4DNXjv7Lbr7Pi0Kg1PoBb0SvMrLrNwT2dDqS5lQ6oWEzjTF2rgVKB3xqlgcaYXXZbeint_6EOYjv6Laq5MexFawIf2StJmDiBhCkHrP_bCqT7nS8rZI2pbOC0rjaSMGB85322357BGKQXfoy6IVixAQi_HbvEayKj7Y_RuNsNuR_Y7jKxZCtYExfO8vhTG5wmdVOHB7410$$0269EKRYhq_9LXlzCSj_HavEbyKk8a0UyRxS_W4fDpQ2hL0iP6raK6uhUJ9$tleXTOLJIHIJLPTYekr_8ITgt5Lar7Qj1Mi3RqEf5Y$TzT_X4eCoO$dHxcI$jSByjWJ8yoeXPID95210$0358CIOVdnx5HUhwAQhzGauDayKj8Z$SwOuPwT0a9kLybFvbH_iRBykXLA_riaTMHD9755568CFKQWenw4GRer4Kbt9Sn6SpBa_PqHkChAhDmJuU4hKydHzgO6scN9ylaQG80wqmifdcccegkoty3BKTep0EShxCUn5Pk4SqDd2UxOtMsOwT0bBnP1hL0iQ7scM8xkYMD3xqkfaWUSSSTVYcgmsz4EOYkx9Ndt9Rk2Nj4RqDd2UxPuOvQzX5gFtV8nS8qXF_kVH3tiYOG82ytolihghikosx07FOXhs2FTiyCUm3Oj3RoAa$QtKoIoJrOyW6iJxaEvbI$kTE0obPD4wnfZTPLIGFEFHJMQWbjqz7IUgu6Lbs9Sl3Pl6VuIj9c4Z2Y4cAjItV6kO2kQ7sbK5tgUI8_ribVPLIFEDDEGJNSYelu1BMXkyBPfwCVo6So9YxLmDf7c7d9iFqP$cDtXBtaI0lWH3sfUJA1vpjeaXVTSTUWaejpw2AKVgt4IXn2JbvDZuFc$OoDf6a4Z4c9iHtT4iK_eK0jRBxiUI6xndVNGA50zwwvwx_16BHPXgq$BNbq3KbtATo8UrEd2TvMqJpKrOxW4gGuXBrXExfO8vhTH5wmeVOID964222469DIOVckt2CPcq3Jar8Rm5RoAZyMoEhAf9gClJtT4hJzdI_gN5rbM8ymbRH91xrmjfdcccdgjnsy4CLUfr1FTiyDUn4Pk4SqDd3UxPuNuPxU2cCoQ2iM2kQ7sbL6ugUK90tngbWSPNLLLMPSXcipx4EPamzBQgxCVp7TpBZzNoEg8c5b6eBmKwX9oS6oUBvdN7vhUI7_rjbWQMJHFDDEGIMQVcks$ALXkxAPfwCVp7TqCa_PqGkChAhCkHsR1dGvYDvcJ1nXI4uhWMD5ztojfdaZYZadhlrx2AJTeq0DRgwBUn4Pl6TsFf4X_SwPvRzW5gGtV7nR7oWDyiTE1qfULC4ztokgedbbcehlpv07GPZkw7Lap3KdwEZvGe1QqGiAe7d8gClJvV6kN1iO4oWF_lWI6xmcTMF941zxvuuvwz15AIPXgr0DQes6MdvCWrAYvIi7Y$SwPuPxT0a9lN$eIzfM4pYI3qdRF4xohaUPMJHGHHJLORWcjqz6HSes5Kar7Pj1Mi3RpDf4X_TzT$X3dBnN_dGwbH_iRBykWJ7yoeWPIC741$$$036AFKRZir0BNao1HXo4Oi1Mk5TtIj9d5a4c7gEoO$cFtXBuaI0mWI4thWMD4zsnhdaYWWXYbfjpv08GRbnzBPdt8Qj1Mh2PoBb0SuMqKqLuR$a9mN0fK$hO5qaL7viXMD4yrkfbXVTRRTUXbflsz6FPamzBQfu9Sl3Pl6TsFg5Y$TySzV1a8jJwYBrWBubK3qbNAzodTLD60xtqonmmoquy16DLUdny8Lap3KcuCWrCZxJj8Z$TxRxS_X5gGsU6lQ4mSAuePAymaPF5yqjdYURPNNOPSWZekqy4DOZlyAPfwCVp7So9XvJj9c3X1Y3b8iGsS3hK_fL2mUE$mZNB1tkcWQLGDA9899BEIMSYgoy6HTgu7NduAUo7TqCb_PqHlDiCiEmJuT4hJydIzgO6rbL8wkYOE6_tniebZXWXZbejou$6FPZlx8Nbr5NgzId_Lj6WyNqHmFlHpLvU3gIwaEvbI0lVG1pcQF5yqjdYTQNLLLMORUYdkrz6GSdq1GVm1KdxGcyJh5VwMqImGmIrOyY8lN0fJ_hO6scN9ymaQG80vqkgcZYXXZbejnt_5ENYjv7KZo2KdwEZwHf2RsIlCgAgAiEoNyZApS6nTAucL5seRG5xofYRMHDA97789BFJOUbjs0BNZn_ETk0JcxGd$NmAb1UyRwRyU1b9lM_cGwbI$jSCykWJ7yofYQKFB85434468CGMTajs0BNao1HXo4Nh0Mj5TtHi9c4Z2Z5eBlKwX9oS7pWDxhRD$ocQF6zrkeZWTQPPPRTWaelrz6FPbo$DSiyEWp7TpAYxLlBe5Z3Z4c9jItT4jM0hM3mUDzkVI5xmdUNGB62$yxwwxz05AGNVeoz9LZn1HYq8Rm6SqCb$QsJnGlGnKtR0cDrU8pU9sbJ4qcPD1tjaTLFA631$__$148DIPXfpz8KXl_EVm2Lf_Kh3RrGh8b3Y3a5eCmLxZBqU9rXFzjTF1qeTI80uoidZWVTTUWYbglry4CLWhu5KZp4MfzIdzLj6WxMoGkEkFoLvU4gIxaFvcI0kUF0pcQG6zrkeYURONMMMORUZels_8ITfs4IYo3LdxGczKh4UuKmEiBiDlItS2eGuXBsYFyhRCzmaOD4xqjdYVRPOOOQSVYdjqx4DOZlzBQgxDVn6Rn7VuIj9b3X1X2a7hFrR3hK_eK1lTD_lXL9_qhZRLFB731001369EJQXfoy6IUix9PgyFZuEayKj8Z$SvOuOwS_Y8jKxaEuZFygP9wiUI7xneWPJD953111257BGMSaiq_AMZm$FVn3Nh0Mj4TtHi8b3Y2Z5dBmLxZBqU8qXEyhRC_naOD3wohaVQNLJIJKMQTYdjrz6FQdq1GWn2LeyHdzLj6XzPsKpJqNvS0cCoQ3jN3mTCyiTF2rgVLD5_vpmigeeefhkotz4CLUeq0DQfvASl2Mh1Om9YzOsJoHnIqMwU4gIwaEwcJ1mWH3sgUKB1voidYVTSRSTVYchnt$8HRbo$DRhyEXq8UqBZyMmCe5Z2Y3b7hGsS4iL$hM2lUD_lXK8zpgXQJE841$zz_$259ELSajt1DPdr3Jas8Sn6TqCb$QsImFkFmHqOzZ9nP3jO4oVE_lWJ6wlbSJC61zvtrqqruw_39FMUdnx7KYn1HZr8Sn7UsEe2TuMqJpJrOxW5hJwYCtYFyhQAxjWK9_ribUPJEB97779BEINTahq_8JWjx9PgyEYsCYvHh4VxNrJoIoLtR0bCpS5lQ6pXF$mYJ6wlbSJC60yurpppqsuy05BIQZju3GUixBSk1Lg$Mj5UtIj9d5a3a7fDoO$cFvZFxeN5rbNAznbSJA3zuplihffgilpuz4BKTdo_BPeu8Qi_IezKi4UvKmEiBhCkHqP_ZApS6nS9tbK5seSG4wneWPJEA7543458BFLRYgoy6HThv8NdvBUo6SpBazOqGjChBjFnKvU4hJxbHyfM5rbN9xlZPF6$uojfcbZZacehlpv07GPamy9Odt9Qj0Kf$Mk7XyOqJnHoIqNxV5hIwaEvcJ1mWH2qdRG6yqidXSPNLKLLNPTXcipx5FPbp0FVl0IauDYuGf2StKnFlEkGoLvU3gIxbFxeL3oYJ4tgUKA2wojeaXUTSSTVXbgmt_7HRdq1FUk$HauCYvGe2RsHlCg9fAhEnMxX8nQ4lR8saJ4qcPD2tkcUOJEB97678ADHMRYfox5GRes5Kas8Sm4Qn9YyMoEh9d7e9iFqP0dFuYCubI1mXH3rfTJ90tmgaVRPNMMNPTWbhnu09ITfs3IYo3Mf_Ie$Mk8YzQsKpKrMwT1cCpQ3iN2lTBwhSE1qfUKB3ysnkgecddfhkosy3AISco_BPeu9Rj0Lg0Nk7XyOqImGmHpLvT3fGvYCtaH$jTD_mZNC1umfYTPLIGFFFHJMQVcjr_9JViv7Mct9Sl4Qm8WwKmBe5a3a5dAlKvW9nR5nTAtcM6ugUJ8_skdXTPMKJJJLNRVafnu0AKWiv8Mct9Sm4Qm7WuIj8a2W0X2a7hGsT4jM1iO6pXH2pbPC1sjaSLFA6310$1259DHNUbkt1DPdr4KbtAUp8UrDc$QrJmEkFmIsQ_aAnQ3jO4nVE_lWJ7xmcSKC60xusqppqswz17DKSbkv4IVkzEVo5Pk3Qn9YyNqHlEkFmKtR0bCqS6mR8saJ3qdQD2tjaSLF9620$$$136AFKRYgpz8LYm$FWo5Oi1Nk5UtIkAe6c6dAiFqP$cEtXCubJ2nYK6viXND5ztniecaZaabehlqw18HRcn_CQgvASk2Mi2PnBa$RvMrLrMuR_Z9lO0fK0iP7sbM7wjXMD4xqlgbYVTSSTUXaflry5FPamyAOdu9Rk2Nj4RrFg5Y$UzU$X4eDoP0fIxcJ$iRAwhTH5xneVOIC8420$$0137BHNUdlw5GThv9PgyFZtDZxJi5WxNrJoIqMuS2dEsV9pVBucL5seRE2ukbUNHC8420002369FKRYhq_AMZn0GWo5Oi1Mi4SrFg5}
Library ACP_Styles
Title: ACP Styles
Description: To set navigation and node styles and options for Analytica Cloud Platform (ACP). Most of these styles and options are available in ACP, but not desktop Analytica editions.
Author: Max Henrion, Fred Brunton, and David Paine, Lumina Decision Systems
Date: Mon, Jul 11, 2011 10:16 PM
DefaultSize: 48,24
NodeLocation: 1184,496,1
NodeSize: 64,40
NodeInfo: 1,0,0
DiagState: 2,161,52,1459,583,17,10,4
WindState: 2,766,262,681,532
NodeColor: 65535,65535,65535
DiagramColor: 55705,55705,55705
FontStyle: Century Gothic,15
OutlinerState: 2,38,26,450,600
Att_PreLoadScript: {!40404|FreePassObjectCount H1qIqwy5jj2MNB76AAHtFYqpbdKuFv6EVNHQRXZiKGJOI41$T8jAOPbpiltx6mj5F8_xxW8j7FawgINXdqWVv50utvWAnDNk6pDKWetbhtCx51iK36c3LLYn5LiYhFbgir1ocNzHoKp9Qm2RJpIj7Qklnb8eFwgM9R5rcAcDr2IVXHEDHHO_jrlfFAiRrWGyl1VF8Hp7RRmirfku_BtlvCzrrnUDVtELBM8FRZoWQcxgkXFaGgv38Z3V24U_dg29BqqY5ZyhVF6SB$xogwGlesphA0azkaMFdII1hpR0Rdw8Pl1QIrLtNUWQFIQUfJ8KVQc5vSwexKaiyfku_BtlvCvxiOhLjw2X5bCIa8ryOZfTRaIHLLS2qu5gcGl9U9vbOg8un2g0BHkGkJNd9qtHPHJWILTXiMOWnSSBrDlSkHvT8IrTDuaeo5oqbH5fOiHxXEQ_eReARdQaSdt3M8JZxEYE0xGwJdYqq7VpE8Ec7u2_wYV3qG$cIwftS8yiDmKkqvkib5oApXByCrZPAy6Ml962mUudzeO4t9qaSF3FXyOzxhRtTExjRGaH6sgW2Wj5EANftC0CUvkuniaA2Qv8ewu7Rh2u6QtLyykWWuQ7Pya8pzJxij7JVNPcORZdoSIQhzocCocCY39Yp9RqiyInWeYS6sRAdI2kXpbaTEm5jrvtnplkoovVWWhgWQF5RzXuw9ELXfucUiDa0Otrva9cqrlrsYRAxnZSqTNLE8dCeyOfVQVflyeUgBWwGjfzNo06NNNGGyQ1Min8ayRPmCmFldbi3pLt9Xk5UyMtt8m6CStt8Um91Cix5jrwrXK2rWGyl1SGsS7Rrln4LhzMEg2eNVPJIwesCpO2eLXVCwgOjz22IF7kG3xlg4a0Z3uiDXzUtLlGG4mCdrHKA7qZ5tSsMnHjGIW0f6UbddcNB6625dLLU1vW28duCf_OkB7RrOLdea4zeMRt9SXuKiB9Gi3Ffq1FA0b5Z0FXwOoJJh9mn7CCmjSENtDsNzV8GmM53XyDFO1jM_iIxfJ4KygXdDm9JaL9wgWPA0oh3bkQCxWuWj0y_ot17K05FoCWp_2$oZ8oO5HEugOtOxZ7oyU6t2YnxumWx_6AL$2AQbnL$o$Xo_nxp05FLYE6GZGI3lEewtS6iPbzdQn3D2V1V48$XBmMSko1LbyopBWe0BLGwiXRHEgPJPWcYM6rVyMjs4EVFIWwMn7GIEC2pM_YDNjL6uAZi6IABDlU7fEuUBNmU1VDe_33KgyLDi6LVv02pVULH98cSRRTTAo9R_cAr$XCucIh$20HQeo3p3Wt66v0CKZHOau7NP7_sEpIfnixFVsi2b2NTMbiu0Fz2EYYhrVM7mANlAg6fhpYBi_3Jbjpd8h3JkBjBmq2tFj8PTnugfUKtLY1b5ioOBuTpyOPNB0dWUOPvomstvjDsWg1IRL22zzvyUppx_2uQ5nzMfqmx_6AL$l6NWQ7$vf5crHIG49JPcI9NRWNVF_TtUi2RvJqqDhHoKeenxbSDsGwR1ZCK9vOo7Vm1Ki0RLsAbmzz5FC_sSl4EGb$Lok2S$Zdu3GYm5vvBc2_7AFPViOScvD12zvQuCXe1VvQQc4hJRm$F4sU7YF1lauaM9lDsWg1IRL22uiRF$sCjhuxsgO0f5Yn5LiYU1Upvo_lT1czbr43KgyLDEeq0u5vwcY3XrAHXqCWxrCUhEsQ5FsOHF9AgbVUWC8sVlCKifZJ4$$x_WLVOC_lIuar37C336EIT78uTm8Stn_Wnzgqtw_dDf6Lj8e4df4aR8kJm5RghnpyaVrzqeZX4gDbh_IB14CGR5CE8jwCQlZp9UZNWGDrjAaq58KZt7UKJds7z8wvZTyOgz2GXt9YQOrcEi8UjtulhZY0tp3GRQI2jKpAc_TRnDgw2LfhQBnFuQ$fFy8VJOG4qSxPhw$9FS80ATnBC7wUrVkwy$qx7FUC5RwRq3BCD7rW1d9owR1qT7Hev2yfZMqQ3nRCS4oX3T2IRrlstmQtVAwcPh8254_mT7j5Tmr$5I_VbsuiREqhdVUycYdjJ6paDxbMc1vwrgP7nEdxCFNRcG0Lagoz675zgEpGXt9YQOxOi2Poy26_viLsFj7eekP_QuNrDVhpjYJyT3bEMaN4eEyXyKaqy$wfTD4QstoaOF5kMuKgs1_0_3dHWffhlokcGzRrEPfr8woFcq4LYkmfRCqSvCauJDDoHd$On_DJHE2gFgAc9BOyVoMedeUC5th7Y4X3X6AODd4ajnkysiH1YsR5hOa3tQuc2RWWdnSOGqKxdF_CsbFjAqASTfcME8rN0kO9P1lU0Q$FOouwhdKqS7tZMeIIvbDa6PVj_Kc$t3Mhrt4A0rZDcH1jWoL91qSrHci3VtMKc$Qgo5H6C0mFvKY1b5ioCzQoHdglt2IUnZfs595CCEuXHq5HXp0IWrfdxX_W_Zd$U$Z9TkhZYEpf0eChFlMSiI9uiSJf95_rhTwEcvEe_RNe_Vj_FXVP2sRpSAqbriM7eBX7Wk29_kYOwbL1q6nhWQ0Yp$CZ$Nsq0bwATmkbjXHmQr3PoGgBBa2e9hr_thYPxM2Qk9f5egqNn3NrdWRBpcQMltKsKvzPBa2Sbv_ssukNoAV_Y2flGmRt5ERRhTIscGc4bBjMUqe4Lb0CA30mntv2gTdkeRVrXyYv3TPO69HLWA2OMvpgKt3bsIVVm6OnfxQhv42v1RBgKlzRRk6QrltTh0y50ujLs0Wl9Kf3Pso0atLacuiZ9xd$V2gEv3RHlJp2Sdbq8Olbf6JRcnzkYJ7DfqAHYuAZRPzKqUUkt5FWG6Yn9hZjkqs$dLfm0QAB42yzT3FEMxuwuzXPOPFzseAhh16MNBFEIIP$zHCC8pfGgCpIsMz3xlAg6HdkegonrryYMZWOJEAe5LmFpJw0O6ZBamC9NXJ4b1W$W6eHPlUzNqHPQigaD1cN0kO9PygaVQDvV4Vt8HEGEJtkm_GPTSJBwdAXzLqo5k4LZwuz5uY$csHj6a_VVj0kBaghfmUJBcyRXySuRTGmOi9eCiJPnVyaz9boinZB$R_bHvesMCnX2MwFHUO84_TvYGwhxZH0YyX7PdaibHH84yxP5s2kX4uCbrt5LA8vomghBviwE1h7lPsIVRew8THUmAVr29EOUhNHGgA9$dRxZDbk7b$WWvNzU0eljTP1nZ3KrRzck4VLHi_2IafjY6wXpM_YDNkI2q0UevDlHJ2i5P_eEx7iM8rZUcwG02mbTZfGyaJXAobRu8a23x0ilggcfB00CPZhhVJxX_Ti0GdTcwQ3X_DTefVM$jN8OxfZVJ3jOtEXkpmomrPGIWr3CF9xiLoKoNRnNyet1JFKA1sQ_R$U2Y9FjX7drEe_2txhNoOlGsO19fV7fvKm8E5B3tIoEnPzeoLzjO4Yy8E211zd2lK_aHTysY0bx57EUQIvhEaBtVES2_iKgBjBRdbhTBeGvdH2IwueIgDnHVUicS1naF$hUmP94iAqSfppqdZYccjJ70KYJ$pHuGf06CB9AGIR3_4Mfu0661rbDm5VrIETtTAoLn$CNOJ2scTpFANPMJ8uRuJYs6TJU$DMShXUU3nIYz7HYuAZRg0PVhfhQB8A8DnikoopTN0bt4EXo8QphuRhs_FTNDoY3NycCv5eI_cFX3KXRG2zrPvWCqZnD7qKzWk3SwKrr3lEWxGGNXU6sXtKrRzck4uNrBTqDh5ccqWtDRbq47rhSuR2kM5JslLsKxVetzx1rMveSC3PreL8tJg_RsMoLNVPE_fFmCZhkibP8oFnFquH0Sp7a_z2_okTtPsLvP06bMm6OwppscS8pH_mUJdkWQF5Gn$8ETflXFiRF$sCmoSra0Nh8Z3V24V$dAkWm2qwlW_NjCfBfEIlUsAQw9KC$leVRJImbXWC_YM1gO2p3bT4sPlDmBh7gi6c7Rd_MEQI6fNs8jAiAlpF1b3Fc_IIEvlMmQrKuO$5Y6rHZ1TQeokc5f9OvV1goF2YzLsKJZldR_iBT0eCt1WLtKkHns_3B6lJxbAqQ7JjC66f6Pp9EFzcCxeQ8zHpQS0S7RbyCVtBcWqNem55LH9mY5R1IQl9Vyu7X7kMsDWirurkN5lWmJ1xwmVApFf2LOWalPMUo7QholcO5hCZ$Nsq5X9oKrJbpuwpcH1jWoAUvpS1JWgzEasF7Kt7ds1viSLBqIsl_HfzOIKWfB$x2DTfykzwuI_onqy0BrtEadTZKyN5MYtpninx1EwJdgesrT2cGoN1dKWQ1g8U$XsAF3$_229lzFZegVEoLhGwWDPuYOzPq0T$T26JnRq1LLWNVP3uIqP3fMY6kVzLmIBBJH6_lFlM2gPd_kGoPf$TjjueeRrApXByCbF5gS0KptBDA5lPydN3s8nXP1qCCShUOQI1pUBzhWqVHBrg46Of1A0_$57Guu_DiSO3PvaqLxT6EvR9ctFJYTfdLEiRF$sCefaMA$nW6awANWTVTY6z$DSehlkZEtQt8Um91CY4kIgwCGKG5mWC$HfcTBxiP1VxKWkpkXPD8Y276yqjVBvPwGWjupploKAQZUG1ZLyGQm5VrIENr8MqgYfPPweFgDrP4EnZFo5HeXRGGJRVgKMXjx76pNBh7IOVlot17K04HHEGKEBDBGqVXkaRJEEADlYoqiZ7$Y2Ke2Nn7aWa5PZqCH79wY9X1aCmRb8mjaH3ncwdPcZbZeC8DJRXAgMnPq_DE27HNaG39MTLKM3j9dBFQLXeqyBvj9UeugK3ZME2zN4uxznWEftMwQ17W0lBpDYsthmw0Dv_8dzCWm7z1UgvB6nhWQQ0efhevFXwo2RrH$jKGxXaEnEWh_Mg5$Hd6IOXnpbY4tlZUuVRD6eLj4c43x_4gC1xnkAOXfU6_e_T_a6lt6eFmEctFLKQCweEW3hFw4LvY5b$IifXQ2ypldc4fXUL9tUCTfso0AsXQOIJpXUMHCsNr9a28DP6iddZc8ppkcT9wQwJpx2G$dacafDACXls2AP78UZZpgS6hEew7Qkclz7O8HV1Rl0BJLD4pM_YDNK6pb3Tcw$ttw26Hxz8KYkcQzhASsIEMWblr2kCbz2w2mM5siUNlwmkdXXTW2MbpkSQ_nfTOo_5B_aQ1LnvATr9aUn9qX1Sk1DMPI$nVKe9$gG6f7Urpiuma7raO8$LqeNxjGrRfsphmoW0ndPIgB1oOCnO0nt5z_mZK7$pk8xp$332uiOuQn_GUpdp8UsCMJ$dM1JdwDVk2IfVxScv_GLFxX6U6HNOf$HgYp5IoqyxtmjljoM352qqbOCoJp00GL$_KpJrLcagiVKApBetv3GYm5vPr06DT4oeArYK2tBuglohTHyUyHelx3I087wGK9DU0Z4g$$$t0EOfPYwDblqufDveSC3PTE1$mW1Hf3JXW8575AkUWhtqQzV7dAoM1BgV1k8OqEQXdQ0kVL70OOdkw2H$DMQnDb42gTL94UacN3mcEnJYakxDRmag6HNUk4MldHsQhl3IcsD3Jr3OmmlgaN3n0WyUl5Nme3Pgm49GGIrfPF1wIbzHicuV5OUqldL4bFykSHbhiiPvXBTknt4MavjJqKXXnqsfB_sgb$BIOBnd8Wh0_7HN0aPJiIvPo1GLH8rduLk5HPVODzg9jDqwOBzSkGTXOYT5Z_eElLtWetXGpUEwj$nngOq8Xh74ISlRvN4saPjPB624kHfljmaht$EymCXhZJ8kc1Nek27ENbl0mfx$3DPR9yTBJjp0GRhtAyqKjxthaEAqPyEWhr2KYthb7YomcXDBxcuNn3Oo8bXrFoM0ITTBnSuc6X_W_ZdnZEky2D9NJA$Z7qP3fMYSDmauQr53vqWVZZgGAUhkmhdOkFhAkErxRDhGuEapuyvuyy3fdhmeOJFhRk048H3xy24DrtBBISKCzaAf1RTUcfnr0gTfdbeK6uiJem5RVafpv6o_FQkssYLBlJm3LWaht$EyuDNcaK9ri8qJd1znw8IZJ9d_A4sjLFgM_9JizJb_sqQvDF98uwXBoSv4ATr9aUU6dz1z_mqgRpOuGg$PlC8AqNlrpsgmeRrS_a1Z1cgqcHn$5GCQBtUzRhxQ_U5BNBuQgo$zDzoeK6WvQ0YBJAzd_eq6GNRYks5pf$EFD31sOB3toCIE$1bFnGk53E82rdSMC9b7HKCoGp7jx8SK5rgXTLKoeaflza2Omv9SMOTdjwcd_C6yzja4qMntGk8ffR6S4HUQMOTdjwcgm53ihX3XA5QUYivBPkYhAWYWfXW80gKjrGmClnvcDhBnDfx4950vYGwhxZH0YyX7p7KM6kRvgWIBZgjdE8a6WtBarBTskiIn5710moS5r9MtGk8ff2WH$f7Z_CPWPNHIofdWVB$YIm9WcihfgmoxZVmmp05FLYEDNjAUlx$vqXChFlMSrP9wiInFXn_14tlZUubTXfklbJ0a3Wj$DYMTlDi9Wlsy$rhMtT$emBnZM2fFh8UfolaUKHjSMSaadR9rNqJen$9QAQuFRL7_cWqsVDteuXFGE4wgItKgtw26Hx5KTllleN5iKnp08INXdqWWrv0E$lHpQg0XwOoJJg8k0RtpqlpbN2Z3StNpMOpJBtcEe1GWfaaWZ5ww6MVXSPFxWxRtQSnHzgHoIl3CKMJ2scTpSGGLNBvgClAVes0H14Ii7Xq$980rcJmImLPmI0nQzVwFRelcYQPteairw_viVAf3OZp$I49PrPpBQWaUH_ZDpWiBrhYR7jDh5HQVOMGHnnz3vdMClDai4FFL722_1ZBIbo_3$rdHuToCY$xFfCmQ0jvtmeDb5df0SqJHcInNhuC82vfM$gQ6vBqaI$X8mzDQSPHuQCvhPEYE0xtvtyWdfcOO9yeNBxo8sgdbN1NqKSZceZND_qcVtXJ9pjOm_9ZvqojhH4ymh5jkaVR5eIdvto$HVqeq6XzxuseEmYs9JLPefL9ueUG9XhXWW2Z5Rbh1IewJBrQ_FJVjWM9$Y0DLbuGa$v_Zn5BXaYFtdQI61RFL70ycGpCar7voRLA4wtJ7GODrbNgEkx3wiltx6mkpwsgfXRBvKgvF8y1BHUA9TWUiidX8Y4fJvconNzn6iEYn$wedhhoOCPMEJL3Z6gEWjuoijpr_cNThZaM91d8d$Pftehpt2i8VrukiiD$j8UZZs1HTmY9LcuC51wsAa7h1IYl1FaO_V$CCKU95zY2HRvEe_RN0at5Zp_8$fRI1rbSoJHVVURAsPyRg_EbRhDRm8EKJ8yfFtLnwBXpC42e7RTNM68hVFi4BDWuCdXX9g0401ptSI4ZzWxRtQSuc0X5NfqrrkeFn2EhDhGKU71uaBd$OfsprpuSWfiuvVGo6LekyCF76AAHtqu7$_vrZCq9HXpuopvx4iVl8SeluvpfQ5W0S$1Ci7Nr4LdnXPJwS5pTEU84iRDjDcr3AADLPaE19C4A1wqqSzJNJK6BLReK9JOIQJEACsPntrANftC0c7dqqy6rdM8d1KNLauhiaN8pQvKZgs_DxMi1NLIME_Q7vdSmvdWKAsEhsE04qhbpYM6zJoYU9eEWz6Oj7TwsBXyHlw0rbTOOKNvqmnimXDe_as_5J8qnpnsQOeadj1kN$WwNvNy0Fxa2ex96__19DO2Uct93yb9we2ETj_Kc$t7WwMmJBBreCnKc7W_OvvKkJfnqxrtxdI4$BZ_UwTVfGc7PYuAdaAsK2TpGoGrvlWGjzLlnownaEgBPuSyZfFyP7Lk1z0saYDp8OvV1goDzSsOyJVnZWNtUuAjLvakBzUwc4TTeltsprpuSJVQGM3d9ZuJmImLPZIxDcosAnjO_iTJ5_MqtqQ7d$dyCB57B2aNF3_OCksXBd3b9OaUgM9iXRHEgNLNKI_R7D1r9A6nNEA21VGMBxxjQkDe4Of$HgYjDSc0GCzuXOKCBfVRW5hCQ$GSl6YwPNeEZpBbdemIYPLDCgENQ6vVzhCKNbu3JVoaf3CGa4ofcechFy2wolL1rGYowz6HXj0oj17DOC680azWnGqKx1D_fzOci29zvnQ5nJqQybj_e4W2VZqmysXRlnPya8pzI4$ylS6ayGWhegejHxyt3qhBn9oWAxB6qTE0ey5OPeyCZPXnCMSXk0EZNHm9BKG48zV9rNbol_IYvlmErQuGYhkieP2mQBR_icXLBsSuLdqzwyw$ZQSgz9HIB1kKrCe0VTj5XnHHOFN1nSAqCHg8Y33QyYwSk_qnkQBh1V0c8nvZJ_iMkpwsgfiddZc8yuuimeOqNzBOXfgaXZXcAs29JPJ5Z8m0FQadisy9rxJNYmcRCybFPm1A4BNVkSIevDTS6xPz7jj7lmv7HYIKUik064kVJlAXtGXt9YQdvMWjw8wvR3e3HlCVtBcWoPd28Yv7MPOC_fAmIx3SC_oZBqHgu494403bPTMalnqhU6iBWwGjfoGctPuEbmtpjW9tXIYA7hSudIsOqBRdhgRH3yKzz$21vlVAkEcv_8ER75JMj0CMQPH5nOnFfAANvJeDk8Wo$571sT9nWkN$$sogf7hkeKCwP2Gf6e6hlxdEuUopskUPMOMR$fw58yZL9mCkoy19EOUhNbv8QeaDuOmJxQ_U5Bb6fFt7MikiPHwM3rZOi87pL4U8WbieSRSYajLMSgpzF4c_ZpJXSPBEMQbF4PNRHNAkUI1kGf_BGQWjPTss3x6FLHBuU1Yt4MavjoEiBe2IWXRI7mHtP2AaEjWH$Z5QepyvkeURtWUK5651pZ6YxITWeitXZwu3v240wmT6g3OZp$I47XzQm0EOPMExa3d7kqCqH2iGoGbs230phVQqRNBwvnZJ$Y1Rgrsy_7lyFBD1zxiI_DRRRWEHPTeI3Rs9XrGARpJZ__EwiT_aCgBnJy4Z9tL_CgaaZI6yeP2mQBRsePwiCf9LFD$1eLhM6obt_gRFjRxMOdXiy8RDOe0Jd1oTgNj9NsQwXdI3TzFn1AQ1pT2jQCwl3lXKwO1h1JKWTD500y$Xss36AkPqWn88E6E30205fOdVTDDwYvBj5925srvv0cPXUMUJ3Yycr136xvw02Bpou6GB86fIay6X1T02CsPy6ITdpVV4l3Tf6e6hl_j5ZpJWUeptvvoV7cAgHNmK4reHqKes067wocXxeWagfXSHvPpANftC07PtMmAQdgdZJ2Z9hKSybFxbgsu6I6vpuThEsQ5FjIvLf8ez$tx_6AL$1COcoaRxa$d4EEQejtzAsLVn_C8rn5rdLyLpDkkynhXUwbsCUtl0MqDdCH$pPeCVjCmGtzBoCj1Dfuy6a9mCW$W6eHPvYCuYlxvtwcOJJFIqgrlimY1YEm_B8AEHPTeIKVhv5bCrJfAi3717CMSfLPcq4IfPxT4Kg8RRHOaixfl_EWmcX5oHzUim0HQeo3pxCUo4lR2jBvSio4NYo_H3DWqAUL7qZP4Sg4TxLssQtJqMhdUP76AAHtry4EM2dBqUx$_1t_AIXFHQbbTWaT3V7mHtP2AgJzfJZuszsytVzdKtV3kuD2W4Qp7A8M1d5E$rdWu3vtmgMnDh8g8jnzcCm0WsuvgWOFB32WZiUM0jLi_WVPBeibUSMNtmkqrtcGfzXyIWPWiq3neuwyCAvYIkJwcEzBjM1XvS0PVRZjkqs$dQjfhVykFhr8Soqr03BFQ419Tp2DGLJ6oPyJl7carHvdAf5PejpoZPB4SbRP3sga5Wyz4qgIzmeSNnWbXAi9d2KgxxlrmOD7zwMz4qgIAY1Gm3zyrtcTPHGkaWTDreSuJUajsgNLEC67dLSJ5wlFeIewx74qqllhkG4E7B0eW_XxLam$JZwm_Idllw6_oL3YqMUhyIazr$Vk8JHNVQA0eyHPPi4OpjnSg_FMGQPzcIeExMsIrtDg9Tf0OHNMFzaIk3W2W59xQxHVuIDLMH1gQ7iMyfrQ41vfO$ZxFWlkoovVUYvFPbZSH1hEd5V006lIhBdr_6xZJ5g4bBjMUKtSs8bxJXRQ711z0ZBlQaWNDm6a45NbXArLjGrV5o_OBpWEkzDVldUS$ewXDraoojdEeAk03LC9lRvdG_ePfheaDfDp_CNbCqX8uZJ$o4TKwdBvjTKgORTCkO5tbQkB1fH_KmKPl1urR7bK8ul586pRBzGqKNPD1wS4rhTMkUZdOymFbkABI2uWPNHIobZjv__vmbFrHivBPkYfxPyQl_587_rS8mVjEwoidN5iEYu34ACLzu_GZo_66xoZ5ezNjA6DnZCoEbq39C1xKvQqAPcjmcN_grIgx421pW7cADSiqnfTFxSvAWLQLI0lIpEZiw4L50RVfbnoW4qQ3nRCS4rdRDa17JHVYIugRH3yK71njdK0Tf52GQQ6naSGBbRNIzjVFoKdfp0IWrfe7FTTjfJ8iChI_cLZwgCk0Ols2GSM1cIgJ1hSi8sj7d6Lf$seIdZ4hM6obtH4gNtFOek0_xG5Z7qcK9T$wgVLmHRhj$6waQ6rfPGcvxusf1aAHfzsrTBhSI4zLIL1pNBqAMk5XvOMyXxQeejxkd9nBjHe1VvQQoCr7IkLSC2gYFfvLmGiFH6cEnLhju4riCoApXByCqUNvhe5BNLZcMykM1nTGYPMye6qNdj$7HE0uH_mUJdjRO_TD8ZdnjvwebQKjInIiu771wfGyaJX4zjArDRrEi6dd0UIzW8iNX4idS9xfUoXF8oEb0EikzldS7bK8ul5aO4mW0WvPTkYSJ0WH7voA6A4zXCeuQkzB6qgZXRSyYhkW8xNwCQu41DCvqqmpLGGdx5AA7ydAb5X46EvUoyHFezCLMF8wb2a2dh2aI1mPvIfu32vrjiAxt$8CD4rcJqLit7JcOTj9i3NaekgaJuY8r1WA0wkT9k9Rfsrvv0cVZp4JOVTG0kJk1Pj82FdBuUuHXgpmjQCwl3gSQPI4pR3auDKWetbcoAZsAKKL9ydAb5X46JzsdGnDcs3611z0YFPk3DFE8zbEf9b8A_U7nXD0IMLJ_SAawNvNy0T$qeKzY_FWdcTPHGkbXpz3$sdK1axNlECydHeo4OHD62nEc2WvNnII4YwYs65$w_qbLo2QrLnKMmGvZwCNfUEvP7c7f6e6hl_gVFuX4Um_23wskjBqwAIMLB$nS1Qh1JiarBxV3Po3A90yqpH2_6FORI4rSwRkv9LeQNnKsHdnv_tmT2iI$BmQNI7pU2So1CBFFMyjxQj$69A2lUzX1ek$jcUFxUzHUjimmtTESp7NSVWR7nKjBb66HvoU6h5Virsljde8pxCViokcRAlEXvDeYd9rU$To7HQL80ql9yq$786yhKsHkxDRmaXpz7LJH86eNf1MXu7Rh2u9Pq0_tqaa8vDd_BarBTsk_Z7OSeslV2uMpGbn4SmB5IgEpOo4PZaYQBoU6r3aG81teGrFe$FOJJFIqffrAHMMD0eHo7XtKGVvV6lHk$EMQPIxfJ4KtbVRJ5oOwKdsv15Gwt$Jev2CA80iLyJl7carHveIl9QhoqpaQC5T8_0372tYBoBans06J$_8UvAMZfYSHuNxR28X5rcL1b4OdqrqdVJEeLDHTUNG0kNwJWo0L9GY0VzFXjjgZMzfH0ElRJK9wb6a1GNZhwefrDcvBOQTK5kLmGiFHU8xeJwLl5DFE3zpmCpt9HHDA$dIl4UqHDUyiJwQr4CIH60spF0_BOSPD2hEg7MgwH78cDqHbx8IMK7mU8v983hU_KsMF9813oSrWGyl1b_2zzvyUsCDBxjb$VsARdsAQndr5ai4_41uS3gIVok$Ld0u9VFpFbxERURC2qj5qgeI5vFaixztv_8ER7b_MRJJLbEtOmFpJw0RCgJfrDZgUQIxcJKY6axBFIA1sN14wtDazMmCe5Z2Y2Z5eDoO$dGwaGygO7tePC$peVME71yuqonmnoqtx06CJSblx7KXm0HZr9To8VtGf3UxOsMsMuR$a9mN$fIzfL2mWG1qcRG5yqibWRNKIHGGIKOSXdkt$9KViv8Mdu9Sl4Pm7WvJkAd5Z3Z4c9jItU6kO2kQ7raK5seRF4wnfYSMIECA88ABEIMRYfnw4FRer3JZq6Qj2Ol7WvJlBe6b5b6eCmLxYApT7pVCxgQBylZNC3wpicWSPNLKLMORVafmu1ALWiv7Mct8Qk2Nj4SrFf4X$TyS_W2cAmM_cGwbH_iQ9vhTG4vlcTMFA52$zyyz_048DJRYhr0BObp3Jar8Sm6SpCb$QsJnGlFmJrP$aBpR5lR6pXG0mYL8zoeVNF94$yvtttuwz16BHOXgq$BOcq4KcuCVqAXuHh5XzQvNtOwT0bAnN$eIyeL2nWG1pcQE4wogZTPLIGEEEGILPUbhox5FQdp2GWn3Mf_If0NmAb1TxQvQxT0a9lMzcFvaFzgP9whUH5xneVOHC741$z__037CHNUdlv4GSgv8OfxEYtCZxKj7Z$SwOtOwS$Z8kLzcGxcI0kTD$mYMA0sjcUOJFC98889BEHMSYgoy6HTgu7NduAUo7TqCb$PrIlEjCjFnKvU5iKzdI_gO7sdO9ymbRIA2ysnjgeddefhkpu_5DMWht3GVk_GYr8Sn8VtGg5WyQuOvQyV3eErT6lP4mTBwgRD$pdSJA2xrlgcaYXXYZcfkpw1AJTeq1FTj_FXq9To9XvJj9b2W$V$X3dBmN_bEtYEweM5rcPB_pfVME81yurpoonprtx16DKTdny8Lap2IatAVqAXvIi6Y_SwQwQyV3eDqS4jO3lSAueP9xkZND3xpjeZVSQPOPRUXchnv1AKUgt4JYp4MeyHczKj6WxNqInHnIqNxW6jKzdHyeM3oYI4tgUKA1voicYVSQQQRTWZekqx4DNYlyAPevATm4Pl5TsFg5X$TyRyU1a8kJxYBrWBucK3pbNA_oeUMF82zvspoooqsw_39GNWgq0COcs5MexEZuFc$NnCe5Y0W0X2b8iHuU6lQ4mTBwfQC_ocRH7$uoieaXVUUVWZdhms_6FPamyAOeu9Rk2Nj3QoCc1TwOtMtOwT2dCpR3jO3mTBwgQC$odTJB3ysojfcbabceimrx19IRbmy9Ncr5MexEZuFc$PpEh8c5b5d9iGrR1gIydJ$jSByjVJ7yofWPJD941$_z_026AFMTbjs1DPdr4KcuAUo8UrDc0RtKoHmHoKtR$bCqS6nS8saI2oZM9_pfXPHC61zxvuuwy$37DKRajt2ERes6NexEYtCZwJi6Y_RvOuPxU1cBnP0fIzeL3nWH2qdRG6yqibWQMIGFEFGJMQVbiqz7HTft4JYp5Oh0Lh3RqEf4X_SxRyU1bAmN_dGxcI$jSBxiUI6xneXPJE9531000258CHNVdmw5GThw9PhzGavEaxKj7Y_RvOtOvS$a9kLybFvbH$jSCzlYMA0rjbTNIEA86667ADGLQXenw4FRft6LcuAUo7TpBZzOpFjBgBiDlJtS3gJxcHzfM4qaL7xlaPG80wqliebaaaceimrx3BJTep0DQfvASl2Ni3QpCc1TwNsMsMuS$a9lM_dHxdJ1mVF1pdRG6zrkeZUQOMMMNOQUZekr_6HRdq2HWm2KdxGbxJi5VxMpHmFmIqNxW6jL_eJ_hO7scN9ymaPF6$uojfbZYXYZcfjou$6ENYju5JYn1JbvDYuFd0QrHjBf8f9hDnMxX8lO1iN3nVE_mYL9_qhZSLGB743223469EJPWdmw4FSfu7NewDXrBYvHh5WyOsKqKrNxU4fGuXArWCweN6teRE2tjZRJC61_xvuvvx_15AGNUdmy7JXm$GXp7Rm6TrDd1TvMqIpJrNwU2eEsU7oUAtcL5seRF4vmdWPJEA7543357ADINUbjs0AMan0FWo5Oj3Pm8YxMoFiBhAhDmKuU5iL_eJ$iQ9vfRE0qfVME6$uplifeddfhlpu$6ENXiu4IWl$GYr9UqBYwKj8a1VzSyT$Y5gFrT6lP4nUCxhSD0pdRH8$uoieaYWVWXacfjpv$7GQanzBPfvBTn5Ql6TrEe3VxQvOvRzX6hIuW8oS7pWE_kVH4tiYPH92xsnkhfffhimqv$6ENWgr1ERgvASk1Mh1PnAb$QsJnGmGoKvT2fHvYDuaH_iSCzlYLA0tkdXRMJGFEEFHKOSYfmv2CMYlyBQhyEXrAWtFe1RtJlDiCiEmKvU4hJycHzfN5qaK7vjYNE5_tniebZYXYabeintz5ENXjv6KZp4MeyHbxIg3TtJmDiBhCkHqO_bCqT7pVCveO8wiUI7zqiaUOKGDCA9ACEHMRXfnw4FQdq3IZp5Nh0Li3SrFg6a1V_V0Y6gFrS4iM1iP6qZK4rdRF4wnfXRMHEBAAABDGKPUbjr$9KViw8OevBUo7TqBa_PqHkCiBhDmJtT3gJycHzfN5rbL7wkZPF7$vpkhebaabcfimqx19ISdo_BQfu9Qj1Lg1Om9Z_QtKpIpKsPyX7jLzdHyeL3oYI4tgUK90tmfaVSPNMMNPRVafls$7HRdq2GWm1JcwFbyKi6WxNqHmGmIqOyX7kM$eJ$hP7sbM8wkZOE6_tnidaXVVVWYbfkqw2AKUgs3HWm0HZtBWsCazNnDf6b4a5d9iHsT4iM0gN3nVF$mZMA$qgYQKEA531$$0147BHNUckt2EQds5LcuBVp9VtGe2SvLpHnHpLuS1dDqT6nS8rZI2pbOB$qhYQIC62_xwvvwx_26BIPXgr$BNbp2Ias9Tp8VsFe1SvMqJpJrNwU4gHvYBsYFygQAxjWK9_qhZSNIEB87779AEHMRZgpz7JViw9PfxDWqAWtFe2TvLpHmHnJrQ_aAoQ3kP5oWF_lWI6wkaRIB4$wtqonnoqtw_49GOXgr1DQes6NewEYuEbzMmBd4X$U_V0Z7iHuV8oS8qXF_kWH4tiXOF80vqmigeeefhkotz4BJTdo_AOdt7Ph$JezKi4UuKmEiBhCkHqP_bCpS6nT9tcL5tfSG5xnfXRLFB8655569DHMSZhqz8JUhw9OgxEYsCYvHh5WyOsKpJrMvT2eEsU8oUAtbJ3pbNA$qgYQJC61_xvuuvwz15BIPXhq_ANap2Jbs9To8VsFf3UwMqJpJrNwU4gHvYCtYFyhP9wiUI7ypgYRMGC9755568BEKPWemw4FRft6LcuATo6SpBazOqGkCiCiFnKvU4hKzdIzfM4pZJ5thWMC3yrlhdZWVUUVXaejpw2AKVgs3GVk$GYrAVrCb_OpEh8c5a5dAkIuV6lO3kR8sbL6tgTI7_ribVPLIFDDDEHJNSYemu2BMYlyBRhyFYtCYvHf3TvLoFkElGpNyX7lN0gL0jR8udOAzmbRI91xrmifdbbcdgimrx29ISco_CQfvASl2Ni2PnAZ_QtKpIpKsPzY8kL_cGxdK2nWH2reSH7_sleYTQNLKKLMPTXdjrz6GRdp0EUj$HZsBWsDazNnEg7c6c7gDmLwW8mP3lQ7raK5seRF4vmdWQKGCA8789BEINTahqz7JViv8NevCVp8UrDc0QrHkChBiEnLwV5jL_eJ_gO6scN9zncSIA3ysnjfecccehkpu_5DMVgs2GUiyDVo5Ql6TsFe3UxPtNtOxU2dDqR4jO3lR9ueOAymaPG6_smgcYWUTTVXZdinu07GQbmzBPfvBTm4Pm6UsGg5X_RwQxS$Y6iIvW9pT8qWEziTE0pdSI90wpkfcaZYYacfjpu$7GPaly8Mbr5NfzHcyJh4UvKnEiBhCkHrQ0cDrV9qWDxgPAxiVK8_ribVPKHECAABCEINSYfow4FRdr3JZq5Oi0Mi4SrGh7Z1W0W1Z6gFrS3iM1iO5oYH2qcQE4vneXQLHDB988ACFJOTahqy7HTft6McuATn7TqBa_OqGkBg9hClItS3gIxbGyfM5qaL7vjYOE5_tojfcaZYZbdhkpu07GPaly9Nct8Qi0Kg1Nl8YyOrImGmHqNxV5iJybFvcI0lVF1pcQG6yqicWSOLKJJKMOSXcjqy5FPan$DTizEXq8TpAYyMmCf7c5b6eBkJuV6lO2jQ7raK4rdQE3vldWPKFCA88789CFJOUbjt1BNao0FWo5Oi1Nl6UuJkAe6b6c8hFqP0dFuZDubJ1mWI3shWLB2xqkfcYWVVVXZcgmsz5EOYkx8Mbr6Oh_Je_Mk7XyOrJnHnJrNxW6jKzcGyeM4pYJ5tgUJA1voidYVSRPPQSUYdipw3CLWiv6Kaq6Oh$Kg1PnBb1TvNsMsOwU2eErT6mQ6pWF_jUG2shWNE60wrnkihghiknqw$6EMWhs2FUjzEVo5Ql5RqCc1TvNrKqLtQ_Z8lN_dHyeL3nXI3reTI8_sleYTPMLJJKMORWbiow3DNZmzBRhyEXrAWsEc_OqFiAf9e9hEnLxX8nQ4lS8scL5seRF4vmdXQKGDA88789BFJOUbjs0ANZn0GWn3MfzJf0OnCd3W_TzU$Y5fEpQ1gJzeL2mVG1pcQF5xphbVQNJGFFFGJMQVbiqz6HTft4JZq5Oi0Mi3RqEf5X_SySzV2dCnO0eIydJ0kTDzkXK8zpgYRLFA63100136AEJPWenx6IVixBRi$IbwFczMl9a1UyRwRzV3dCnO0fIydK1kTD_mYMA$rjbUOJFC98789BFJOUahpz7IUhv8OfwDWrAWtFe1RtJmFkElHqOyY8lM0gK0jRAwgRE0qfVLD5$vrnkihhhjlosy17GOXit4HVk$GXq8To9WuHh6Y_RwQwR_W4fFrT5lP5nUCxgRC$odSI91wqlhdaYXXYadhlrx3BLVfr3GVl_FXr9UqBZxLlBd4Y0W1Y5eDoO0eHxcH_iQAvgRF2siZQIC61zwussstvz05BIQYit2ERfv9Ph_HbwGd$OoDe5Y1W1Y4dBlLxYAqT8qXF_jUF2rfVLB3yrlgdaYWVWYadint_6FPamyAOdu9Rk2Mi2QoBb$QtKoHnIpNwV5iKzcHzfM4pZK6viWLB3xqkfbXVUTTVXaejou08ISdq0FTj_FXq8TpAYxLlAc4Y1X2a7gFqQ1fIzeJ0kTCyjWJ6xmdUNF94$xvtsstvy05BIPYit2FSgv9Qi$JdzJg1RqFh7b4Z4b7gEpP0eGvZEwdL3paL8ylaRH92ytpkhffefgjmqu_5CLUfr1ETizEWq8To9XwJj8b2W$U_W2cAlLzbEtYEweM5rcNAzodULD60xtqomllnpsw_4BJSbmx8LZo1IasAUqAXvIi7Z$TxQwS_W3eDqR4jN2kQ8tcN8wiXLB1umfZTPLJHHHJLPTYdlt0AKWiw8NduAUn5Qn8WwKlBe6b4b6eBlKwX8nR6nTBveO9xjWK9$skdXSNKIGGFGILOTZfnv2DOan$ETk$HauDYvGf2SuKnFkDkGoMwV5iKzdIzgO6scN9ymaPG70vpkgdaYYZadgkqw07GQaly9Ncs7Pi0Kg0Nl8YyNqImFlHpMwV4hJxaDvbH$jTD$obPE4xpibWRNKIHHIKNQVbhow3EOZlzCRizFYsBXuFd0QrIlDiBiEmJuS3gIxaFwcJ0lUF0obPE4xphbVQMJHFFHILOTZgnw3EPbo0FVl0JdxGbyKi6XyPsJoIpLuS0cCpS5lQ5oVE_jUG3tiYPG82ytpmkjiikmpuz3AIRalx7KYo2JbtAVqAXvJj8a1UzTzU0a8jIuW8nS7pWEzjUF2rgVLC5zsmiecaZZacfjntz5DNXht3HVl$HZsAVrBZxLmBd4X0W0Y5eCoO$dGwaGzfO7sdPC0qgWOGA4_wtrpooqsvz28FNWfq$COcq4LdvDXtDayLlAb1VzSyT$Y6hGtU7mQ5nTBwfPAymaPF6_smhcZWUTTUVXbfkqx3CMXiv7Lar6Oh$Je$Mk8YzPsKpJpLtR$aAnO0gK$iP7scN8xlZPF7_tnidZXVUUWYaejpv19JTdp0DRhxDVp7So8WvJj9b3X0V0X4dCnN$cFvaGzgP8vgSF2tjZQJC61zwutttvx_37DJRZju3FThwARi$IdyIg1QqFg7a3Y2Z5fCnN_cEtYDubJ2nYJ6vkZPG80vqlhedccdfhlqv_5ENXhu4IWm0IatBWrCayLlAc3X0V0X4dBnN_cEuZEwdL4qbN9zodTKD60xtpmkkkloruz3AIQakv6IWk_FXp7Rm6TrEd1SvMqKqKsPzX7jKybFwcI$kTE$naOD3wogaUPMIGEEEGJMRVbhox4EPao0EUl1KeyHe0NnBc2UyQwQxT0a9lM_cGwbI_iRAwiUI6yofXPJEA642011359EJPVdmv3FRet6MdvCWrBYvIi6Y_RvOuPwS$a9lM_dHxcI0kTD_lXK8zpgYRLFB85443468CGLRZhq_9LYm$FVm2Lf_Jg1QpEf6Z1X0X2a7hGsT5kO2kR9tdN8viVK9$skeYTPMKJJJKMPTXdjrz7HTft5Kbs8Rk3Pl6VuHi8b3X0W0Y5eDoO0fIydK1lUE$naOC2uleXRMHDA9889CFINTZhpz6HTft6LctATn6SpBa_PqHkChAhDlJtR1eFuXBsZG_jUE0qdRG6zrjdYUQONMNOQTWbgnu09JVgt5Kar7Pi0Kg1OnAb0TwPuOvRzW4gGtU7nS8qYH0nZK7wlaRIA3_vromllmnpsw$5CJSbmx7Lap3KcuCWrBYwIj8Z0UzSzU0Z6hGtU6lQ5nUCxhTE1rgVMD5$vqmjhfdefhknrw17FOYiu5JXm1JbvDYuEc$PqGiAe7e8fCmKwW8mP4lR7raJ4rdPE2ulcVPJEB865557ADHMSZhqz8JVixAQhzGauEbyJi7XzQuNtNuR_Y7jKybEuZFygP9vhUH5xneWPJEA73101136AFLRZhq_9LYlzDTl1KezJg2QqEg6Z1W0X3b9jIuV7mQ5nTBveOAykXMC2woicXTQONMNPRUYdjpw3CNYlyAPfwBUo6Rn8WvJk9c4Y2Y3c8iHtU5iL0hN4oWG1obOC2tkcUNID96433469DHNTajs$BMYl_DTk0JdyIf0PoCc2VzSxS_W4eDpQ2hK_fM3nWG1pcPE3wnfYSNJFCAAABDGKPVcjs$9LXkyBQgyEYsBXuGf3TvMpHmFnIqNyY8lN1hM1kSAwgSE1rgVLD5$vrnkihhhjmptx28FOYju4IWl$HYr9Tp8VtGg5WyPtMrMtQ_Y8kM_eIzgN5qaK6viXMC4xpjeZVTRQQRTWZekqy4DNXjv7Lbr7Pi0Kg1PoBb0SvMrLrNwT2dDqS5lQ6oWEzjTF2rgVKB3xqlgcaYXXZbeint_6EOYjv6Laq5MexFawIf2StJmDiBhCkHrP_bCqT7nS8rZI2pbOC0rjaSMGB85322357BGKQXfoy6IVixAQi_HbvEayKj7Y_RuNsNuR_Y7jKxZCtYExfO8vhTG5wmdVOHB7410$$0269EKRYhq_9LXlzCSj_HavEbyKk8a0UyRxS_W4fDpQ2hL0iP6raK6uhUJ9$tleXTOLJIHIJLPTYekr_8ITgt5Lar7Qj1Mi3RqEf5Y$TzT_X4eCoO$dHxcI$jSByjWJ8yoeXPID95210$0358CIOVdnx5HUhwAQhzGauDayKj8Z$SwOuPwT0a9kLybFvbH_iRBykXLA_riaTMHD9755568CFKQWenw4GRer4Kbt9Sn6SpBa_PqHkChAhDmJuU4hKydHzgO6scN9ylaQG80wqmifdcccegkoty3BKTep0EShxCUn5Pk4SqDd2UxOtMsOwT0bBnP1hL0iQ7scM8xkYMD3xqkfaWUSSSTVYcgmsz4EOYkx9Ndt9Rk2Nj4RqDd2UxPuOvQzX5gFtV8nS8qXF_kVH3tiYOG82ytolihghikosx07FOXhs2FTiyCUm3Oj3RoAa$QtKoIoJrOyW6iJxaEvbI$kTE0obPD4wnfZTPLIGFEFHJMQWbjqz7IUgu6Lbs9Sl3Pl6VuIj9c4Z2Y4cAjItV6kO2kQ7sbK5tgUI8_ribVPLIFEDDEGJNSYelu1BMXkyBPfwCVo6So9YxLmDf7c7d9iFqP$cDtXBtaI0lWH3sfUJA1vpjeaXVTSTUWaejpw2AKVgt4IXn2JbvDZuFc$OoDf6a4Z4c9iHtT4iK_eK0jRBxiUI6xndVNGA50zwwvwx_16BHPXgq$BNbq3KbtATo8UrEd2TvMqJpKrOxW4gGuXBrXExfO8vhTH5wmeVOID964222469DIOVckt2CPcq3Jar8Rm5RoAZyMoEhAf9gClJtT4hJzdI_gN5rbM8ymbRH91xrmjfdcccdgjnsy4CLUfr1FTiyDUn4Pk4SqDd3UxPuNuPxU2cCoQ2iM2kQ7sbL6ugUK90tngbWSPNLLLMPSXcipx4EPamzBQgxCVp7TpBZzNoEg8c5b6eBmKwX9oS6oUBvdN7vhUI7_rjbWQMJHFDDEGIMQVcks$ALXkxAPfwCVp7TqCa_PqGkChAhCkHsR1dGvYDvcJ1nXI4uhWMD5ztojfdaZYZadhlrx2AJTeq0DRgwBUn4Pl6TsFf4X_SwPvRzW5gGtV7nR7oWDyiTE1qfULC4ztokgedbbcehlpv07GPZkw7Lap3KdwEZvGe1QqGiAe7d8gClJvV6kN1iO4oWF_lWI6xmcTMF941zxvuuvwz15AIPXgr0DQes6MdvCWrAYvIi7Y$SwPuPxT0a9lN$eIzfM4pYI3qdRF4xohaUPMJHGHHJLORWcjqz6HSes5Kar7Pj1Mi3RpDf4X_TzT$X3dBnN_dGwbH_iRBykWJ7yoeWPIC741$$$036AFKRZir0BNao1HXo4Oi1Mk5TtIj9d5a4c7gEoO$cFtXBuaI0mWI4thWMD4zsnhdaYWWXYbfjpv08GRbnzBPdt8Qj1Mh2PoBb0SuMqKqLuR$a9mN0fK$hO5qaL7viXMD4yrkfbXVTRRTUXbflsz6FPamzBQfu9Sl3Pl6TsFg5Y$TySzV1a8jJwYBrWBubK3qbNAzodTLD60xtqonmmoquy16DLUdny8Lap3KcuCWrCZxJj8Z$TxRxS_X5gGsU6lQ4mSAuePAymaPF5yqjdYURPNNOPSWZekqy4DOZlyAPfwCVp7So9XvJj9c3X1Y3b8iGsS3hK_fL2mUE$mZNB1tkcWQLGDA9899BEIMSYgoy6HTgu7NduAUo7TqCb_PqHlDiCiEmJuT4hJydIzgO6rbL8wkYOE6_tniebZXWXZbejou$6FPZlx8Nbr5NgzId_Lj6WyNqHmFlHpLvU3gIwaEvbI0lVG1pcQF5yqjdYTQNLLLMORUYdkrz6GSdq1GVm1KdxGcyJh5VwMqImGmIrOyY8lN0fJ_hO6scN9ymaQG80vqkgcZYXXZbejnt_5ENYjv7KZo2KdwEZwHf2RsIlCgAgAiEoNyZApS6nTAucL5seRG5xofYRMHDA97789BFJOUbjs0BNZn_ETk0JcxGd$NmAb1UyRwRyU1b9lM_cGwbI$jSCykWJ7yofYQKFB85434468CGMTajs0BNao1HXo4Nh0Mj5TtHi9c4Z2Z5eBlKwX9oS7pWDxhRD$ocQF6zrkeZWTQPPPRTWaelrz6FPbo$DSiyEWp7TpAYxLlBe5Z3Z4c9jItT4jM0hM3mUDzkVI5xmdUNGB62$yxwwxz05AGNVeoz9LZn1HYq8Rm6SqCb$QsJnGlGnKtR0cDrU8pU9sbJ4qcPD1tjaTLFA631$__$148DIPXfpz8KXl_EVm2Lf_Kh3RrGh8b3Y3a5eCmLxZBqU9rXFzjTF1qeTI80uoidZWVTTUWYbglry4CLWhu5KZp4MfzIdzLj6WxMoGkEkFoLvU4gIxaFvcI0kUF0pcQG6zrkeYURONMMMORUZels_8ITfs4IYo3LdxGczKh4UuKmEiBiDlItS2eGuXBsYFyhRCzmaOD4xqjdYVRPOOOQSVYdjqx4DOZlzBQgxDVn6Rn7VuIj9b3X1X2a7hFrR3hK_eK1lTD_lXL9_qhZRLFB731001369EJQXfoy6IUix9PgyFZuEayKj8Z$SvOuOwS_Y8jKxaEuZFygP9wiUI7xneWPJD953111257BGMSaiq_AMZm$FVn3Nh0Mj4TtHi8b3Y2Z5dBmLxZBqU8qXEyhRC_naOD3wohaVQNLJIJKMQTYdjrz6FQdq1GWn2LeyHdzLj6XzPsKpJqNvS0cCoQ3jN3mTCyiTF2rgVLD5_vpmigeeefhkotz4CLUeq0DQfvASl2Mh1Om9YzOsJoHnIqMwU4gIwaEwcJ1mWH3sgUKB1voidYVTSRSTVYchnt$8HRbo$DRhyEXq8UqBZyMmCe5Z2Y3b7hGsS4iL$hM2lUD_lXK8zpgXQJE841$zz_$259ELSajt1DPdr3Jas8Sn6TqCb$QsImFkFmHqOzZ9nP3jO4oVE_lWJ6wlbSJC61zvtrqqruw_39FMUdnx7KYn1HZr8Sn7UsEe2TuMqJpJrOxW5hJwYCtYFyhQAxjWK9_ribUPJEB97779BEINTahq_8JWjx9PgyEYsCYvHh4VxNrJoIoLtR0bCpS5lQ6pXF$mYJ6wlbSJC60yurpppqsuy05BIQZju3GUixBSk1Lg$Mj5UtIj9d5a3a7fDoO$cFvZFxeN5rbNAznbSJA3zuplihffgilpuz4BKTdo_BPeu8Qi_IezKi4UvKmEiBhCkHqP_ZApS6nS9tbK5seSG4wneWPJEA7543458BFLRYgoy6HThv8NdvBUo6SpBazOqGjChBjFnKvU4hJxbHyfM5rbN9xlZPF6$uojfcbZZacehlpv07GPamy9Odt9Qj0Kf$Mk7XyOqJnHoIqNxV5hIwaEvcJ1mWH2qdRG6yqidXSPNLKLLNPTXcipx5FPbp0FVl0IauDYuGf2StKnFlEkGoLvU3gIxbFxeL3oYJ4tgUKA2wojeaXUTSSTVXbgmt_7HRdq1FUk$HauCYvGe2RsHlCg9fAhEnMxX8nQ4lR8saJ4qcPD2tkcUOJEB97678ADHMRYfox5GRes5Kas8Sm4Qn9YyMoEh9d7e9iFqP0dFuYCubI1mXH3rfTJ90tmgaVRPNMMNPTWbhnu09ITfs3IYo3Mf_Ie$Mk8YzQsKpKrMwT1cCpQ3iN2lTBwhSE1qfUKB3ysnkgecddfhkosy3AISco_BPeu9Rj0Lg0Nk7XyOqImGmHpLvT3fGvYCtaH$jTD_mZNC1umfYTPLIGFFFHJMQVcjr_9JViv7Mct9Sl4Qm8WwKmBe5a3a5dAlKvW9nR5nTAtcM6ugUJ8_skdXTPMKJJJLNRVafnu0AKWiv8Mct9Sm4Qm7WuIj8a2W0X2a7hGsT4jM1iO6pXH2pbPC1sjaSLFA6310$1259DHNUbkt1DPdr4KbtAUp8UrDc$QrJmEkFmIsQ_aAnQ3jO4nVE_lWJ7xmcSKC60xusqppqswz17DKSbkv4IVkzEVo5Pk3Qn9YyNqHlEkFmKtR0bCqS6mR8saJ3qdQD2tjaSLF9620$$$136AFKRYgpz8LYm$FWo5Oi1Nk5UtIkAe6c6dAiFqP$cEtXCubJ2nYK6viXND5ztniecaZaabehlqw18HRcn_CQgvASk2Mi2PnBa$RvMrLrMuR_Z9lO0fK0iP7sbM7wjXMD4xqlgbYVTSSTUXaflry5FPamyAOdu9Rk2Nj4RrFg5Y$UzU$X4eDoP0fIxcJ$iRAwhTH5xneVOIC8420$$0137BHNUdlw5GThv9PgyFZtDZxJi5WxNrJoIqMuS2dEsV9pVBucL5seRE2ukbUNHC8420002369FKRYhq_AMZn0GWo5Oi1Mi4SrFg5}
AcpStyles: Navigation_style: Top_tabs~
Show_description: 20~
Show_index_menus: Fly-in~
Show_outline: No~
Show_tabs: No~
Use_top_diagram_size: No~
Node_drop_shadow: Yes~
Bevel_node_border: No~
Show_title: Yes~
Show_uncertainty_view: Yes~
Show_graph_table_icon: Yes
{!40300|ProactivelyEvaluate: 1}
{!60005|Att_AttsToShow: Object Object, Object Attribute, Attribute AcpStyles}

Module ACP_style_lib_detai1
Title: ACP style lib details
Description: Details and libraries used in the ACP Styles library.
Author: Max Henrion
Date: Wed, May 19, 2021 12:33 PM
DefaultSize: 64,32
NodeLocation: 112,544,1
NodeSize: 64,24
DiagState: 2,396,201,941,423,23,,
AcpStyles: show_as_tab: No
{!40300|ProactivelyEvaluate: 4}

Library ACP_Object_attribs_l
Title: Object attribs library
Description: Functions to get and set attributes of objects, including node location, size, and corners, Diagram location and size, and tracing.
Author: Max Henrion
Date: Mon, Jul 13, 2020 2:48 PM
NodeLocation: 96,240,1
NodeSize: 88,24
DiagState: 2,267,0,1324,826,23,,
WindState: 2,98,82,720,350
AcpStyles: this si the platform style!

Constant ACP_Number_format_US
Title: Number format USD
Description: Number format for a variable with US dollars and commas separating thousands, e.g. '$2,000,000'
Definition: '2,I,4,0,1,1,4,0,$,0,"ABBREV",0,,,0,0,15'
NodeLocation: 88,664,1
NodeSize: 56,24
WindState: 2,1113,75,720,350
NumberFormat: 2,I,4,0,1,1,4,0,$,0,"ABBREV",0,,,0,0,15

Constant ACP_Number_format_PC
Title: Number format %
Description: Number format for showing percent and no decimal points e.g. '50%'
Definition: '2,%,4,0,0,0,4,0,$,0,"ABBREV",0,,,0,0,15'
NodeLocation: 88,720,1
NodeSize: 56,24
WindState: 2,113,631,720,350
NumberFormat: 2,%,4,0,0,0,4,0,$,0,"ABBREV",0,,,0,0,15

Function ACP_SetNumberFormat(v: Handle Atom; t: = '')
Title: SetNumberFormat(v, t)
Description: Set the number format of variable v according to the first character in t:~
	'$' integer number of dollars -- e.g. '$2,000,000' ~
	'%' percentage -- e.g. '50%'~
	otherwise a number with two decimal places e.g. '1.23' (default)
Definition: t := SelectText(t, 1, 1);~
Local format :=~
   IF t = '$' THEN ACP_Number_format_US~
	ELSE IF t = '%' THEN ACP_Number_format_PC~
	ELSE ACP_Number_format_1_;~
NumberFormat OF v := format;
NodeLocation: 296,664,1
NodeSize: 120,16
WindState: 2,98,82,824,406

Constant ACP_Number_format_1_
Title: Number format 1.23
Description: Number format for showing percent and no decimal points e.g. '50%'
Definition: '2,F,4,2,0,0,4,0,$,0,"ABBREV",0,,,0,0,15'
NodeLocation: 88,776,1
NodeSize: 56,24
WindState: 2,113,631,720,350
NumberFormat: 2,F,4,2,0,0,4,0,$,0,"ABBREV",0,,,0,0,15

Decision ACP_input_number
Title: Eg input number
Definition: 1200.22
NodeLocation: 224,776,1
NodeSize: 56,24
Aliases: FormNode ACP_New1620278147
NumberFormat: 2,F,4,2,0,0,4,0,$,0,"ABBREV",0,,,0,0,15

Decision ACP_Select_format
Title: Select format
Definition: Choice(Self,3,0)
NodeLocation: 224,720,1
NodeSize: 56,24
Aliases: FormNode ACP_New278100867
{!40300|DomainExpr: Discrete('$','%','.')}
OnChange: ACP_SetNumberFormat(Handle(ACP_input_number), self)

Function ACP_DiagState(m: Module Atom; x, y, w, h: Number)
Title: Set_DiagState(m, x, y, w, h)
Description: Locate a Diagram (module) with specified top left location x, y, width and height (pixels) in the application window.
Definition: Index fields := ['X', 'Y', 'W', 'H'];~
ACP_Set_att_field(DiagState, m, Array(fields, [x, y, w, h]), fields)
NodeLocation: 776,448,1
NodeSize: 120,16
NodeInfo: 1,1,1
WindState: 2,324,75,720,474

Function ACP_GetDiagState(diag: Handle)
Title: GetDiagState(o)
Description: Returns the DiagState of a Diagram, indexed by Window_state_fields
Definition: ACP_Get_att_field(DiagState, diag)
NodeLocation: 296,448,1
NodeSize: 120,16
NodeInfo: 1,1,1
WindState: 2,1108,96,720,350

Function ACP_GetResultWindSta(o: Handle)
Title: GetResultWindState(o)
Description: Returns the ValueState of  Object o, indexed by Window_state_fields, inclusing the location and size of the result window.
Definition: ACP_Get_att_field(ValueState, o)
NodeLocation: 296,528,1
NodeSize: 120,16
NodeInfo: 1,1,1
WindState: 2,98,82,720,350

Function ACP_GetNodeLocXYZ(v: Handle)
Title: GetNodeLocXYZ(v)
Description: Given an object v it returns its node location as xy values
Definition: ACP_Get_att_field(Nodelocation, v)
NodeLocation: 296,76,1
NodeSize: 120,16
NodeInfo: 1,1,1
WindState: 2,113,422,720,350

Function ACP_SetNodeLocXYZ(o: Handle; loc: Number [ACP_XYZ])
Title: SetNodeLocXYZ(o, loc)
Description: Set the location of node for object o to location (and z value) loc indexed by xyz.
Definition: ACP_Set_att_field(NodeLocation, o, loc, ACP_XYZ)
NodeLocation: 776,76,1
NodeSize: 120,16
NodeInfo: 1,1,1
WindState: 2,1265,492,733,434

Button ACP_Test_SetNodeLocX
Title: Test SetNodeLocXYZ
NodeLocation: 1008,76,1
NodeSize: 88,16
OnClick: ACP_SetNodeLocXYZ(Handle(ACP_SetNodloc_and_se), ACP_GetNodeLocXYZ(Handle(ACP_SetNodloc_and_se))+30)

Function ACP_NodeCorners(v: Handle)
Title: NodeCorners(v)
Description: Returns an array of the top left and bottom right corners of node for object v, ~
indexed by XY for the X and Y coords and LH for  top left (LH='Low') and bottom right corners (LH='High').
Definition: Local s := Ceil(ACP_GetNodeSize(v)/2);~
ACP_GetNodeLocXY(v) + IF ACP_low_high='Low' THEN -s ELSE s
NodeLocation: 296,248,1
NodeSize: 120,16
NodeInfo: 1,1,1
WindState: 2,669,359,857,270

Index ACP_low_high
Title: Low_high
Definition: ['Low','High']
NodeLocation: 80,248,1
NodeSize: 64,16

Function ACP_Find_Node_from_X(loc: [ACP_XY]; corners: [ACP_XY, ACP_low_high, nodes]; nodes: Index)
Title: Find_Node_from_XY(xy, corners, n)
Description: Given a screen location loc (indexed by xy) and corners of nodes (indexed by XY, LH, and nodes, return the first node from nodes that contains loc, ~
or Null if there is no match.
Definition: Slice(Subset(~
	Sum(corners[ACP_low_high='Low'] <= loc AND loc <= corners[ACP_low_high='High'], ACP_XY)=2), ~
	1, defval: Null)
NodeLocation: 296,336,1
NodeSize: 120,16
NodeInfo: 1,1,1
WindState: 2,1049,101,720,362

Function ACP_GetNodeLocXY(v: Handle)
Title: GetNodeLocXY(v)
Description: Return the center location of node v indexed by XY, where x and y are pixels from top left corner of the Diagram
Definition: ACP_Get_att_field(NodeLocation, v, ACP_XY)
NodeLocation: 296,120,1
NodeSize: 120,16
NodeInfo: 1,1,1
WindState: 2,783,870,720,350

Function ACP_GetNodeSize(v: Handle)
Title: GetNodeSize(v)
Description: Return the size of node v indexed by XY, where X and Y are its full width and height in pixels.~
It doubles the values in the Nodesize attribute, which are half the width and height.
Definition: ACP_Get_att_field(NodeSize, v)*2
NodeLocation: 296,168,1
NodeSize: 120,16
NodeInfo: 1,1,1
WindState: 2,1015,655,825,375

Variable ACP_GetLocXYZ
Title: eg GetLocXYZ
Definition: ACP_GetNodeLocXYZ(Handle(ACP_SetNodloc_and_se))
NodeLocation: 536,76,1
NodeSize: 80,16
ValueState: 2,1487,61,416,303,,MIDM

Variable ACP_GetLocXY
Title: eg GetLocXY
Definition: ACP_GetNodeLocXY(Handle(ACP_SetNodloc_and_se))
NodeLocation: 536,120,1
NodeSize: 80,16
ValueState: 2,1683,421,416,303,,MIDM

Variable ACP_GetLocSize
Title: eg GetLocSize
Definition: ACP_GetNodeSize(Handle(ACP_SetNodloc_and_se))
NodeLocation: 536,168,1
NodeSize: 80,16
ValueState: 2,1623,675,416,303,,MIDM

Function ACP_SetNodeSize(obj: Handle; sz: Number [ACP_XY])
Title: SetNodeSize(obj, sz)
Description: Set the size of the node of object obj to loc, indexed by xy, with full width and height in pixels.
Definition: ACP_Set_att_field(Nodesize, obj, Ceil(sz/2), ACP_XY)
NodeLocation: 776,168,1
NodeSize: 120,16
NodeInfo: 1,1,1
WindState: 2,889,253,733,434

Button ACP_Test_SetNodesize
Title: Test SetNodesize
NodeLocation: 1008,168,1
NodeSize: 88,16
OnClick: ACP_SetNodeSize(Handle(ACP_SetNodloc_and_se), ACP_GetNodeSize(Handle(ACP_SetNodloc_and_se))+16)

Function ACP_SetNodeLoc(o: Handle; loc: Number [ACP_XY]; z: =1)
Title: SetNodeLoc(o, loc)
Description: Set the location of node for object o to location loc indexed by xy.~
It sets z (depth value) (detaults to 1).
Definition: ACP_Set_att_field(NodeLocation, o, loc, ACP_XY)
NodeLocation: 776,120,1
NodeSize: 120,16
NodeInfo: 1,1,1
WindState: 2,869,318,733,434

Button ACP_Test_SetNodeLoc
Title: Test SetNodeLoc
NodeLocation: 1008,120,1
NodeSize: 88,16
OnClick: ACP_SetNodeLoc(Handle(ACP_SetNodloc_and_se), ACP_GetNodeLocXYZ(Handle(ACP_SetNodloc_and_se))-30)

Variable ACP_GetDiagState1
Title: eg GetDiagState
Units: hello
Description: hello
Definition: ACP_GetDiagState(ACP_Top_model)
NodeLocation: 536,448,1
NodeSize: 80,16
ValueState: 2,1786,847,416,303,,MIDM

Variable ACP_Result_windstate
Title: eg Result windstate
Definition: ACP_GetResultWindSta(Handle(ACP_result))
NodeLocation: 536,528,1
NodeSize: 80,16
WindState: 2,899,597,720,350
ValueState: 2,1381,283,459,248,,MIDM

Button ACP_Test_Set_diagSta
Title: Test Set_diagState
NodeLocation: 1008,448,1
NodeSize: 88,16
OnClick: ACP_DiagState(ACP_This_module,  10, 10, 400, 300)

Button ACP_Test_Set_DiagSiz
Title: Test Set_DiagSize
NodeLocation: 1008,489,1
NodeSize: 88,16
OnClick: Local xy := ACP_GetDiagSize((ACP_This_module))+10;~
ACP_Set_Diag_Size((ACP_This_module), xy, ACP_xy)

Variable ACP_This_module
Title: This module
Definition: Handle(ACP_Object_attribs_l)
NodeLocation: 1208,528,1
NodeSize: 80,16

Variable ACP_SetNodloc_and_se
Title: eg SetNodloc and setNodeSize
Definition: Array(ACP_Nodeinfo_fields, null)
NodeLocation: 536,32,1
NodeSize: 80,16
ValueState: 2,1514,0,315,453,,MIDM

Function ACP_Set_Diag_Size(m : object ; w, h: scalar)
Title: Set_Diag_Size(m, w, h)
Description: Changes the diagram size of module m to the indicated width w and height h.
Definition: ACP_Set_att_field(DiagState, m, ~
		Array(ACP_XY, [w, h]), ~
		Array(ACP_XY, ['W', 'H']))
NodeLocation: 776,488,1
NodeSize: 120,16
NodeInfo: 1,1,1
WindState: 2,146,623,659,312
NumberFormat: 2,I,4,2,0,0,4,0,$,0,"ABBREV",0,,,0,0

Function ACP_GetDiagSize(m: Module)
Title: GetDiagSize(m)
Description: Return the diagram size in pixels indexed by XY. ~
Returns 300 if Diagstate is not defined for this module.
Definition: Local  s := ACP_Get_att_field(DiagState, m, Array(ACP_XY, ['W', 'H']));~
IF s=Null THEN 300 ELSE s
NodeLocation: 296,488,1
NodeSize: 120,16
NodeInfo: 1,1,1
WindState: 2,511,79,720,350

Variable ACP_Get_diag_size1
Title: eg Get_diag_size()
Definition: ACP_GetDiagSize(ACP_Top_model)
NodeLocation: 536,488,1
NodeSize: 80,16
ValueState: 2,1018,863,416,145,,MIDM

Function ACP_SetDiagWidth(m: Module; w: Scalar)
Title: SetDiagWidth(m, w)
Description: Expand the diagram width of module m by w (or reduce it if w<0.
Definition: ACP_Set_att_field(DiagState, (ACP_This_module), w, 'W')
NodeLocation: 776,528,1
NodeSize: 120,16
NodeInfo: 1,1,1
WindState: 2,1618,515,720,350

Module ACP_attrib_access
Title: Old attrib access
Author: Max Henrion
Date: Thu, Mar 11, 2021 12:30 PM
NodeLocation: 80,552,1
NodeSize: 64,32
NodeInfo: 1,0
DiagState: 2,1229,484,543,194,17

Function ACP_Varlist_as_text(vl: Handle List)
Title: VarList_as_text(vl)
Description: Given vl as a list of variable identifiers (possibly zero length), it returns a text value listing the identifiers, separated by commas (or empty text).
Definition: IF SIze(vl) = 0 THEN ' ' ELSE BEGIN ~
     MetaIndex v := vl;~
     JoinText(Metavar o[] := v DO Identifier OF o, v , ', ')~
END
NodeLocation: 128,40,1
NodeSize: 88,16
WindState: 2,155,95,482,387

Variable ACP_Eg3
Title: Eg3
Definition: ACP_Varlist_as_text(Outputs OF  ACP_Selection_method)
NodeLocation: 296,40,1
NodeSize: 48,16
ValueState: 2,234,282,1040,303,0,MIDM

Function ACP_Attribastext(a: Text; o: Handle)
Title: AttribAsText(a, o)
Description: Returns attribute a of object o as text. ~
If o has not attribute a it returns empty text ''.~
It converts Contains, Inputs, Outputs, Aliases from list of variables to a comma-separated list as text. It converts Identifier, Original and IsIn to identifier as text.
Definition: Metavar v := (a OF o);~
IFONLY IsNull(v) THEN ''~
ELSE IFONLY  a='Original' OR a='Isin' OR a='Identifier' THEN v~
ELSE IFONLY  a = 'Domain' THEN ACP_List_from_val(v)~
ELSE  IFONLY  a = 'Contains' OR a = 'Aliases' OR a = 'Inputs' OR a = 'Outputs' THEN ACP_Varlist_as_text( v )~
ELSE IFONLY Istext(v) THEN v ELSE '?'
NodeLocation: 128,96,1
NodeSize: 92,16
WindState: 2,345,72,542,457

Function ACP_List_from_val(x)
Title: List_from_val(x)
Description: Given x is a list value, it returns it as text, e.g.~
'[1, 2, 4]'
Definition: If IsNull(x) Then null Else~
(~
   INDEX i := CopyIndex(x);~
   '['&JoinText(i, i, ', ') & ']'~
)
NodeLocation: 128,152,1
NodeSize: 92,16
WindState: 2,618,15,564,486

Variable ACP_Eg5
Title: Eg5
Definition: ACP_List_from_val(Domain OF ACP_Selection_method )
NodeLocation: 296,152,1
NodeSize: 48,16
ValueState: 2,120,130,416,303,0,MIDM

Variable ACP_Selection_method
Definition: 1
NodeLocation: 416,40,1
NodeSize: 48,24
WindState: 2,94,83,437,438
{!40300|DomainExpr: Discrete(1,2,3)}
Prev_attribute: 112,64,1

Close ACP_attrib_access

Button ACP_Test_SetDiagWidt
Title: Test SetDiagWidth
NodeLocation: 1008,528,1
NodeSize: 88,16
OnClick: ACP_SetDiagWidth((ACP_This_module), 300)

Index ACP_LocSize
Title: LocSize
Definition: ['Location','Size']
NodeLocation: 1200,592,1
NodeSize: 80,24

Variable ACP_NodeCorners1
Title: eg NodeCorners
Definition: INDEX nodes := ListOfHandles(ACP_GetLocSize,ACP_GetLocXY,ACP_Test_SetNodesize,ACP_SetNodeLocXYZ,ACP_Example_text_nod);~
ACP_NodeCorners(nodes)
NodeLocation: 536,248,1
NodeSize: 80,16
ValueState: 2,723,139,722,270,,MIDM
ReformVal: [ACP_low_high,ACP_XY]
Att_ResultSliceState: [lh,1,XY,1,Sys_LocalIndex('nodes'),1]

Function ACP_DiagramMax(m: Handle Atom; margin: = 0)
Title: DiagramMax(m)
Description: Returns the maximum x and y value (indexed by XY) of the bottom right corner of nodes in diagram m plus margin if specified.~
Used to resize diagram to show all nodes.
Definition: MetaIndex nodes := Contains OF (m);~
Max(ACP_GetNodeLocXY(nodes) + ACP_GetNodeSize(nodes)/2, nodes) + margin
NodeLocation: 296,288,1
NodeSize: 120,16
NodeInfo: 1,1,1
WindState: 2,570,569,977,547

Variable ACP_eg_DiagramMax
Title: eg DiagramMax
Definition: ACP_DiagramMax(ACP_Top_model)
NodeLocation: 536,288,1
NodeSize: 80,16
ValueState: 2,1938,25,462,868,,MIDM
ReformVal: [ACP_XY,Sys_LocalIndex('nodes')]

Variable ACP_show_hide_node
Title: eg show/hide node
Definition: CloudPlayerStyles OF Handle(ACP_Frame_setting_de)
NodeLocation: 1192,280,1
NodeSize: 64,24
NodeInfo: 1,,,,,,,,,,,0
DisplayInputs: Object Object, Object SysFunction, SysFunction Handle
AcpStyles: Node_drop_shadow: Yes~
Node_drop_shad: Yes

Variable ACP_ACPStyles1
Title: ACPStyles
Description: Handle to CloudPlayerStyles attribute to be replaced by ACPStyles when that becomes available.
Definition: Handle(CloudPlayerStyles)
NodeLocation: 1184,352,1
NodeSize: 80,24

Variable ACP_using_handle_to_
Title: using handle to attrib
Definition: ACP_ACPStyles1 OF  Handle(ACP_Object_attribs_l)
NodeLocation: 1184,408,1
NodeSize: 80,24
AcpStyles: this si the platform style!

Function ACP_Getnodeinfo(o: Handle Atomic)
Title: GetNodeInfo(o)
Description: Returns the nodeinfo of object o, as a vector indexed by NodeInfoFields.~
If o has no Nodeinfo (i.e. default), it returns the vector of default values.
Definition: ACP_Get_att_field(NodeInfo, o)
NodeLocation: 296,384,1
NodeSize: 120,16
NodeInfo: 1,1,1
WindState: 2,1388,92,568,528

Variable ACP_GetNodeInfo1
Title: Eg GetNodeInfo()
Definition: ACP_Getnodeinfo( handle(FrameNode))
NodeLocation: 536,384,1
NodeSize: 80,16
ValueState: 2,1567,91,658,556,0,MIDM

Function ACP_SetNodeInfoField(o: Handle Atomic; field: Text Atomic; v)
Title: SetNodeInfoField(o, field, v)
Description: Set NodeInfo field of object o to value v, leaving other fields as they are.~
field may be any value from Nodinfo_fields, including:~
'Input arrows','Output arrows','Label','Border','Fill color','Use custom font','Node field width','Bevel'
Definition: ACP_Set_att_field(NodeInfo, o, v, field)
NodeLocation: 776,384,1
NodeSize: 120,16
WindState: 2,351,644,892,504

Variable ACP_Default_nodeinfo
Title: Default nodeinfo Fields
Definition: Table(ACP_Nodeinfo_fields)(1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0)
NodeLocation: 88,80,1
NodeSize: 72,16
DefnState: 2,469,156,416,303,0,MIDM
ValueState: 2,777,81,872,303,0,MIDM

Button ACP_SetNodeInfoFie1
Title: eg SetNodeInfoField
NodeLocation: 1008,384,1
NodeSize: 88,16
OnClick: ACP_SetNodeInfoField(Handle(ACP_Example_text_nod), 'Corner radius', 32)

Function ACP_SetCornerRadius(o: Handle Atomic; r: = 0)
Title: SetCornerRadius(o, r)
Description: Set the corner radius for object o to r pixels. If r=0 (default), the node will be a rectangle. This only works for nodes whose default shape is rectangular, including Text, Frame, and Formnodes.
Definition: ACP_Set_att_field(NodeInfo, o, r, 'Corner radius')
NodeLocation: 776,248,1
NodeSize: 120,16
WindState: 2,1506,738,565,310

Button ACP_SetCornerRadiu1
Title: eg SetCornerRadius
NodeLocation: 1008,248,1
NodeSize: 88,16
OnClick: ACP_SetCornerRadius(Handle(ACP_Example_text_nod), 0)

{!50500|FrameNode ACP_Example_frame}
{!50500|Title: Example_frame}
{!50500|Description: Text in this example frame}
{!50500|NodeLocation: 1192,108,-1}
{!50500|NodeSize: 64,36}
{!50500|NodeInfo: 1,,,1,,,1}
{!50500|WindState: 2,98,82,720,350}
{!50500|NodeFont: Arial Black,15}
{!50500|AcpStyles: .2.2~
Show_uncertainty_view: Yes~
Show_table_graph_toggle: Yes~
Show_Description: 0.2.2.2~
Show_index_menus: Fly-in~
Show_graph_table_icon: Yes}
{!50500|ProactivelyEvaluate: 4}

Text ACP_Te744976515
Title: A text node
NodeLocation: 1192,184,-1
NodeSize: 64,32
NodeInfo: 1,,,,1,1,,,,,,,,,,,,

Chance ACP_result
Title: eg result
Definition: INDEX i := 1..10;~
10 + i^2 - 0.1*i^3~
* Normal(1,2, Over: i)
NodeLocation: 536,576,1
NodeSize: 80,16
ValueState: 2,804,810,416,343,1,XCDZ

Function ACP_SetNodeXYWH(o: Handle; locXYWH: Number [ACP_XYWH])
Title: SetNodeXYWH(o, loc)
Description: Set the location and size of node for object o to locXYWH, where X, Y are top left corners and W, H are complete (not half) the width and height of node.
Definition: ACP_Set_att_field(NodeLocation, o, locXYWH[ACP_XYWH=ACP_XY], ACP_XY);~
ACP_Set_att_field(NodeSize, o, ~
	Ceil(locXYWH[ACP_XYWH=Array(ACP_XY, ['W','H'])]/2), ACP_XY);
NodeLocation: 776,208,1
NodeSize: 120,16
NodeInfo: 1,1,1
WindState: 2,1626,37,733,434

Button ACP_Test_SetNodeLoc1
Title: Test SetNodeLoc
NodeLocation: 1008,208,1
NodeSize: 88,16
OnClick: ACP_SetNodeXYWH(Handle(ACP_SetNodloc_and_se), ACP_GetNodeLocXYZ(Handle(ACP_SetNodloc_and_se))-30)

Function ACP_GetNodeXYWH(o: Handle)
Title: GetNodeXYWH(o)
Description: Return the node location and size of object o indexed by XYWH, with X, Y at top left corner, width W and height H. 
Definition: Local loc := ACP_Get_att_field(NodeLocation, o, ACP_XY);~
Local sz := ACP_Get_att_field(NodeSize, o, ACP_XY);~
Concat(loc - sz, 2*sz, ACP_XY, ACP_XY, ACP_XYWH)
NodeLocation: 296,208,1
NodeSize: 120,16
NodeInfo: 1,1,1
WindState: 2,1553,378,741,433

Variable ACP_GetXYWH
Title: eg GetXYWH
Definition: ACP_GetNodeXYWH(Handle(ACP_SetNodloc_and_se))
NodeLocation: 536,208,1
NodeSize: 80,16
ValueState: 2,1661,143,416,303,,MIDM

Button ACP_test_ask
Title: test ask
NodeLocation: 640,744,1
NodeSize: 64,32
OnClick: ACP_res := AskMsgChoice('Select the file type for downloading the data: ', 'Download', optionlist: ACP_File_types, default: 'CSV')

Index ACP_File_types
Title: File types
Definition: ['XLS','CSV']
NodeLocation: 640,664,1
NodeSize: 64,16

FormNode ACP_New1620278147
Title: Eg input number
Definition: 0
NodeLocation: 408,760,1
NodeSize: 112,16
Original: ACP_input_number
{!40700|NextInTabOrder: Self}

FormNode ACP_New278100867
Title: Select format
Definition: 0
NodeLocation: 408,712,1
NodeSize: 112,16
Original: ACP_Select_format
{!40700|NextInTabOrder: Self}

Close ACP_Object_attribs_l

Library ACP_Get_and_set_atts
Title: Get and set attributes library
Description: Functions to get and set attributes of any object, including Get_attrib_field() and Set_attrib_field() that work with attributes with multiple fields, and let you get or set one, some, or all fields for the attribute.
Author: Max Henrion
Date: Sun, May 16, 2021 12:39 PM
NodeLocation: 96,168,1
NodeSize: 88,24
DiagState: 2,2,0,1213,607,23,,
DiagramColor: 55705,55705,55705
{!40300|ProactivelyEvaluate: 5}

Function ACP_Hide_node(n: Handle Atom; what: = 'Original')
Title: Hide_node(n)
Description: Hide node <n>. By default the original node n, unless you specify what: 'UserInputs' or 'UserOutputs', in which case it hides any user inputs or user outputs for node n.~
It works fine if n is a list or array of handles to nodes.
Definition: ChangeNodeVisibility(n, 'Hidden', what: what)
NodeLocation: 728,544,1
NodeSize: 120,24
NodeInfo: 1,1,1
WindState: 2,398,133,732,374
Recursive: 1

Button ACP_hide_node1
Title: eg hide node
NodeLocation: 904,544,1
NodeSize: 48,24
OnClick: ACP_Hide_node(Handle(ACP_show_hide_node))

Function ACP_Show_node(n: Handle Atom; show: = True; what: Text Atom = 'Original')
Title: Show_node(n)
Description: Show node n in its Diagram, or hide it if you set show: False. ~
It works fine if n is a list or array of handles to nodes.~
It applies to the original node n, unless you specify what: 'UserInputs' or 'UserOutputs', in which case it shows any user inputs or user outputs for node n.
Definition: ChangeNodeVisibility(n, ~
	IF show THEN 'Visible' ELSE 'Hidden', ~
	what: what )
NodeLocation: 320,544,1
NodeSize: 120,24
NodeInfo: 1,1,1
WindState: 2,369,452,854,617
Recursive: 1

Button ACP_Show_node1
Title: eg Show node
NodeLocation: 496,544,1
NodeSize: 48,24
OnClick: ACP_Show_node(Handle(ACP_show_hide_node))

Function ACP_attrib(att: Attribute; obj: Handle Atom; val)
Title: Set_attrib(att, obj, val)
Description: Set the attribute att of object obj to value val. If you specify index i, it assumes val is indexed by i and joins the values of val over i into a single text to assign att. Works if attribute and/or obj is an array. ~
~
It changes Reset_attribs so that any variables depending on Get_attrib() or Get_attrib_field() will automatically update after any call to to Set_attrib_field(), unlike direct changes to attributes (other than Definition or Check) that do not propagate changes to variables that depend on them.
Definition: ACP_Reset_attribs := NOT ACP_Reset_attribs;~
{ This variable triggers Get_attrib(att, obj) and hence all the functions that use it to recompute }~
att OF obj := val
NodeLocation: 872,40,1
NodeSize: 128,24
NodeInfo: 1,1,1
WindState: 2,847,301,733,622

Button ACP_Test_set_attrib
Title: Test set_attrib()
NodeLocation: 1104,44,1
NodeSize: 88,20
WindState: 2,1110,334,720,350
OnClick: ACP_Set_att(Description, Handle(ACP_Example_text_nod), 'New text here')

Function ACP_attrib1(att: Atom Attribute; obj: Handle Atom; defVal: = Null; formNode: = False)
Title: Get_attrib(att, obj, i)
Description: Return the attribute «att» of object «obj», normally as a text value,~
except if «att» of  «obj» is not defined it returns defVal (default Null)~
or if «att» is a list of objects (such as Inputs, Outputs, or Contains), it returns a set (reference to a list ) of objects (excluding «obj»).~
If formNode=True, it returns the attribute of the first formnode (user input or user output) for obj.~
~
It array abstracts if  «att» is an array of a ttributes and/or «obj» is an array of objects.~
~
Any call to Set_attrib() or Set_attrib_field() will cause all variables that uses Get_attrib() to recompute, triggered by Reset_attribs -- unlike any change to an attribute via the user interface or att OF Obj, which does not propagate changes (except for changes to Definition or CheckAttrib).
Definition: ACP_Reset_attribs;~
IF formNode THEN IF Aliases OF obj <> Null THEN obj := Slice(Aliases OF obj, 1);~
IF SetContains(\ACP_Attribs_w_object, att) THEN SetDifference(\(att OF obj), \([obj]))~
ELSE BEGIN Local r := (att OF obj);~
	IF r=Null THEN defVal~
	ELSE r~
END
NodeLocation: 448,40,1
NodeSize: 120,24
NodeInfo: 1,1,1
WindState: 2,978,419,1124,662
DisplayOutputs: Variable ACP_Get_Attrib_multi

Variable ACP_Reset_attribs
Title: Reset_attribs
Description: Set_attrib() changes this variable, which is an input to Get_attrib(), so that any call to Set_attrib() will cause any variables that use Get_attrib() to be invalidated and recomputed when necessary. This also applies to Set_attrib_field() and Get_attrib_field().~
This helps restore dependency maintenance (flow architecture), which otherwise does not work for attributes other than Definition and Check which are part of the standard flow architecture.
Definition: 0
NodeLocation: 656,40,1
NodeSize: 64,24
WindState: 2,655,372,720,350

Index ACP_Attribs_w_object
Title: Attribs w object list
Description: A list of attributes whose value is a list of objects. Get_att(att, obj) returns these attributes as a set (reference to a list of handles to the objects)
Definition: ListOfHandles(Inputs, Outputs, Contains, DisplayInputs, DisplayOutputs, Aliases)
NodeLocation: 88,40,1
NodeSize: 64,24
WindState: 2,98,82,720,350

Text ACP_Example_text_nod
Title: Example text
Description: New text here
NodeLocation: 280,472,-1
NodeSize: 64,24
NodeInfo: 1,,,,1,1,,,1,24,8,32,23,23,23,32,0,0
WindState: 2,98,82,720,350
NodeFont: Century Gothic,15

Function ACP_attrib_field(att: Attribute; obj: Handle Atom; val; field: Text Optional)
Title: Set_attrib_field(att, obj, val, field)
Description: Set «field» of attribute «att» of object «obj» to value «val» (leaving other fields as they were).  Or if you omit «field», it assumes that val is an array with all fields and field index corresponding to «att» (and flags an error if it is not). It returns the new attribute as text with fields separated by commas (as stored internally).~
~
You can see  the multi-field Attributes and their corresponding field indexes in Variable Field_indexes_by_att.~
~
You can specify «field» as a single field or subset of fields from the corresponding field index. For example~
    Set_attrib_field(DiagState, Handle(aModule), Array(XY, [100, 100], XY)~
Sets the top left corner of the Diagram window to x=100, y=100.~
~
It array-abstracts for multiple objects, but not multiple attributes with different indexes.~
~
It flags an error if «att» is not an attribute with multiple fields or if «field» is not an element from the attribute's field index.~
It flags an error if «field» does not match any element of «fields» (case sensitive.)~
~
It changes Reset_attribs so that any variables depending on Get_attrib() or Get_attrib_field() will automatically update after any call to to Set_attrib_field(), unlike direct changes to attributes (other than Definition or Check) that do not propagate changes to variables that depend on them.
Definition: LocalAlias fieldIndex := ACP_Field_indexes[ACP_Attribs_with_fie=att];~
IF IsNotSpecified(field) THEN BEGIN ~
	{ Without «field», assume it sets all fields and «val» should be indexed by the  fields index for att }~
	Local indexes := IndexesOF(val);~
	MsgBox('Index expected = '& (Handle(fieldIndex) = Slice(indexes, 1))&' and num indexes = '&Size(indexes), 0);~
	IF Size(indexes)=1 AND Handle(fieldIndex) = Slice(indexes, 1) { Val contains fieldIndex }~
	THEN ACP_attrib(att, obj, JoinText(val, fieldIndex, ',', default:''))~
	ELSE Error('If you omit parameter «field», parameter «val» should be a 1D vector indexed by '&Identifier OF fieldIndex&',', 'Error')~
	END~
ELSE BEGIN { Specified «field» }~
	Local a := ACP_attrib_field1(att, obj);~
	field := TextSentenceCase(field);~
	FOR f[] := field DO IF NOT SetContains(\fieldIndex, f)~
		THEN Error('Field "'& f & '" is not valid for attribute ' & Identifier OF att& ' of object '&Identifier OF obj, 'Error');~
	a := IF Size(field)=1 ~
			THEN (IF field=fieldIndex THEN val ELSE a)~
			ELSE BEGIN~
			INDEX fi := CopyIndex(field);~
				val := Slice(val, @fi);~
				val[fi = fieldIndex, defVal: a]~
			END;~
	ACP_attrib(att, obj, JoinText(a, fieldIndex, ',', default:''))~
	END
NodeLocation: 872,112,1
NodeSize: 128,24
NodeInfo: 1,1,1
WindState: 2,131,51,892,739

Button ACP_Test_set_attrib_
Title: Test set_attrib_field()
NodeLocation: 1104,108,1
NodeSize: 88,20
OnClick: ACP_test_set_attri1 := ACP_Set_att_field(NodeInfo, Handle(ACP_Example_text_nod), NodeInfo_od_Test_att)

Variable ACP_test_set_attri1
Title: test set attrib field result
Definition: '1,,,,1,1,,,1,24,8,32,23,23,23,32,0'
NodeLocation: 1104,160,1
NodeSize: 88,20
NodeInfo: 1,0,0,,,,,,1
ValueState: 2,1642,817,309,430,,MIDM

Index ACP_Attribs_with_fie
Att_PrevIndexValue: [NodeSize,NodeLocation,NodeInfo,DiagState,ValueState,NodeFont,NodeFontColor,NodeColor,NumberFormat,WindState,DefnState]
Title: Attribs with fields
Description: A list of object Attributes that contain multiple fields.
Definition: ListOfHandles(NodeSize,NodeLocation,NodeInfo,DiagState,ValueState,Nodefont,NodefontColor,NodeColor,NumberFormat,WindState, DefnState)
NodeLocation: 88,112,1
NodeSize: 64,24
MetaOnly: 1

Variable ACP_Field_indexes
Title: Field indexes for attribs with fields
Description: A handle to the corresponding Field index for each Attribute that contains multiple fields.~
~
Get_attrib_field(attrib, obj, fields) and Set_attrib_field(attrib, obj, val, fields) use the corresponding Field index when you omit fields as a parameter.  ~
~
If you want these functions to work for another attribute with multiple fields, you can add the attribute to Attributes with fields index, create an index of the fields, and add a handle to it in this table.
Definition: Table(ACP_Attribs_with_fie)(Handle(ACP_XY),Handle(ACP_XYZ),Handle(ACP_Nodeinfo_fields),Handle(ACP_DiagState_fields),Handle(ACP_Value_state_fiel),Handle(ACP_NodeFont_fields),Handle(ACP_RGB),Handle(ACP_RGB),Handle(ACP_Number_format_fi),Handle(ACP_WindState_fields),Handle(ACP_DefnState_fields))
NodeLocation: 240,112,1
NodeSize: 72,24
WindState: 2,465,184,812,530
DefnState: 2,560,328,416,303,0,DFNM
ValueState: 2,404,60,416,303,,MIDM

Button ACP_Test_set_attri2
Title: Test set_attrib_field('corner radius')
NodeLocation: 1104,208,1
NodeSize: 88,24
OnClick: ACP_test_set_attri1 := ACP_Set_att_field(NodeInfo, Handle(ACP_Example_text_nod), 24, 'corner radius')

Variable ACP_nodefont
Title: eg nodefont
Definition: Identifier OF self
NodeLocation: 280,408,1
NodeSize: 64,24
NodeInfo: 1,,,,,,1
ValueState: 2,1611,578,416,303,,MIDM
NodeFont: Arial Black,19

Index ACP_handles_to_objec
Att_PrevIndexValue: [ACP_variable,ACP_nodefont,ACP_Example_text_nod,ACP_Attrib_field_ind,ACP_Select_attrib_w_]
Title: Eg handles to objects
Definition: ListOfHandles(ACP_variable,ACP_nodefont,ACP_Example_text_nod,ACP_Attrib_field_ind,ACP_Select_attrib_w_)
NodeLocation: 448,408,1
NodeSize: 64,24
Aliases: Alias ACP_Al96266563
MetaOnly: 1

Function ACP_Set_att(att: Attribute Atom; obj: Handle Atom; val)
Title: Set_att(att, obj, val)
Description: Set the attribute «att» of object «obj», to value «val». ~
~
It array abstracts nicely if «att» is an array of attributes and/or «obj» is an array of objects.~
~
It changes Reset_attribs so that any variables depending on Get_attrib() or Get_attrib_field()  automatically update after any call to to Set_attrib(), unlike direct changes to attributes (other than Definition or Check attributes) that do not propagate changes to variables that depend on them.
Definition: ACP_Reset_attribs := NOT ACP_Reset_attribs;~
att OF obj := val
NodeLocation: 872,40,1
NodeSize: 128,24
NodeInfo: 1,1,1
WindState: 2,850,225,733,447

Function ACP_Get_att(att: Atom Attribute; obj: Handle Atom; defVal: = Null; formNode: = False)
Title: Get_att(att, obj)
Description: Return the attribute «att» of object «obj», normally as a text value --~
except if «att» of «obj» is not defined, it returns «defVal» (default Null), ~
or if «att» contains a list of objects (such as Inputs, Outputs, or Contains), ~
it returns a set (reference to a list ) of the objects (excluding «obj»).~
If formNode=True, it returns attribute «att» of the first formnode (user input or user output) for «obj».~
~
It array abstracts nicely if «att» is an array of attributes and/or «obj» is an array of objects.~
~
Any call to Set_attrib() or Set_attrib_field() will cause any variable that uses Get_attrib() to recompute, ~
triggered by Reset_attribs -- unlike any change to an attribute via the user interface or att OF Obj, ~
which does not propagate changes (except for Definition or CheckAttrib).
Definition: ACP_Reset_attribs;~
IF formNode THEN IF Aliases OF obj <> Null THEN obj := Slice(Aliases OF obj, 1);~
IF SetContains(\ACP_Attribs_w_object, att) THEN SetDifference(\(att OF obj), \([obj]))~
ELSE BEGIN Local r := (att OF obj);~
	IF r=Null THEN defVal~
	ELSE r~
END
NodeLocation: 448,40,1
NodeSize: 120,24
NodeInfo: 1,1,1
WindState: 2,421,151,876,662

Function ACP_Set_att_field(att: Attribute Atom; obj: Handle Atom; val; field: Text Optional)
Title: Set_att_field(att, obj, val, field)
Description: Set «field» of attribute «att» of object «obj» to value «val» (leaving other fields as they were).  Or if you omit «field», it assumes that val is an array with all fields and the attrib field index corresponding to «att». ~
It returns the new attribute as text with fields separated by commas (as stored internally).~
~
You can specify «field» as a single field or subset of fields from the corresponding field index, in which case it will leave the other fields unchanged. For example~
    Set_attrib_field(DiagState, Handle(aModule), Array(XY, [100, 100], XY)~
sets the top left corner of the Diagram window to x=100, y=100.~
~
It flags an error if «att» is not an attribute with multiple fields or if «field» is not an element from the attribute's field index (case sensitive.)~
~
You can see  the multi-field Attributes and their corresponding field indexes in Variable ACP_Field_indexes.~
~
It array abstracts for multiple objects «obj», but not for multiple attributes with different indexes.~
~
It changes Reset_attribs so that any variables depending on Get_attrib() or Get_attrib_field() will automatically update after any call to to Set_attrib_field(), unlike direct changes to attributes (other than Definition or Check) that do not propagate changes to variables that depend on them.
Definition: LocalAlias fieldIndex := ACP_Field_indexes[ACP_Attribs_with_fie=att];~
IF IsNotSpecified(field) THEN BEGIN ~
	{ Without «field», assume it sets all fields and «val» should be indexed by the  fields index for att }~
	Local indexes := IndexesOF(val);~
	MsgBox('Index expected = '& (Handle(fieldIndex) = Slice(indexes, 1))&' and num indexes = '&Size(indexes), 0);~
	IF Size(indexes)=1 AND Handle(fieldIndex) = Slice(indexes, 1) { Val contains fieldIndex }~
	THEN ACP_Set_att(att, obj, JoinText(val, fieldIndex, ',', default:''))~
	ELSE Error('If you omit parameter «field», parameter «val» should be a 1D vector indexed by '&Identifier OF fieldIndex&',', 'Error')~
	END~
ELSE BEGIN { Specified «field» }~
	Local a := ACP_Get_att_field(att, obj);~
	field := TextSentenceCase(field);~
	FOR f[] := field DO IF NOT SetContains(\fieldIndex, f)~
		THEN Error('Field "'& f & '" is not valid for attribute ' & Identifier OF att& ' of object '&Identifier OF obj, 'Error');~
	a := IF Size(field)=1 ~
			THEN (IF field=fieldIndex THEN val ELSE a)~
			ELSE BEGIN~
					INDEX fi := CopyIndex(field);~
					val := Slice(val, @fi);~
					val[fi = fieldIndex, defVal: a]~
				END;~
	ACP_Set_att(att, obj, JoinText(a, fieldIndex, ',', default:'', textForNull:''))~
	END
NodeLocation: 872,112,1
NodeSize: 128,24
NodeInfo: 1,1,1
WindState: 2,804,12,912,1062

Function ACP_Get_att_field(att: Atom Attribute; obj: Handle Atom; field: Text Optional)
Title: Get_att_field(att, obj, field)
Description: Assuming «att» is a multi-field attribute, if you omit «field», it returns the values in that attribute of object «obj» as an array indexed by the corresponding field index for «att». Otherwise you can specify «field» as one, some, or all elements of the field index for «att», to get that field( or fieldss) of the attribute.  For example:~
    INDEX XY := ['X', 'Y'];~
    Get_attrib_field(DiagState, Handle(aModule), XY)~
returns the X and Y elements of Diagstate -- i.e. top left corner of the Diagram window indexed by XY.~
~
It flags an error if «att» is not an attribute with multiple fields or if «field» is not an element from that attribute's field index. You can see the multi-field Attributes and their corresponding field indexes in Variable ACP_Field_indexes.~
 ~
It array abstracts for multiple objects «obj», but not for multiple attributes with different indexes.
Definition: IF NOT SetContains(\ACP_Attribs_with_fie, att)~
	THEN Error('Expecting Attribute '&Identifier OF att&' to be an attribute with multiple fields, which it is not,', 'Error');~
LocalAlias fields := ACP_Field_indexes[ACP_Attribs_with_fie=att];~
Local a := SplitText(ACP_Get_att(att, obj), ',',resultIndex: fields);~
a := ParseNumber(a, badVal: a);~
IF IsNotSpecified(field) THEN a~
	ELSE BEGIN~
		field := TextSentenceCase(field);~
		FOR f[] := field DO IF NOT SetContains(\fields, f)~
			THEN Error('Expecting "'& f & '" to be a Field of attribute ' & Identifier OF att&', which it is not.,', 'Error');~
		a[fields=field]~
	END
NodeLocation: 448,112,1
NodeSize: 120,24
NodeInfo: 1,1,1
WindState: 2,93,-10,825,773

Decision ACP_Select_attrib_w_
Title: Select attrib w fields
Definition: Choice(ACP_Attribs_with_fie,3,0)
NodeLocation: 264,272,1
NodeSize: 64,24
Aliases: FormNode ACP_Fo731000707

FormNode ACP_Fo731000707
Title: Select attrib w fields
Definition: 0
NodeLocation: 792,320,1
NodeSize: 168,16
NodeInfo: 1,,,,,,,154,,,,,,0
Original: ACP_Select_attrib_w_

Module ACP_Attrib_field_ind
Title: Attrib field indexes
Description: Indexes that identify fields used in built-in attributes.
Author: Max Henrion~
Lumina
Date: Wed, Sep 22, 2021 7:42 PM
NodeLocation: 88,176,1
NodeSize: 64,24
DiagState: 2,0,0,386,423,17

Index ACP_DiagState_fields
Title: DiagState fields
Definition: ['Version','X','Y','W','H','Arrows','Tabs','Button style']
NodeLocation: 120,80,1
NodeSize: 64,24
ValueState: 2,909,655,416,303,,MIDM

Index ACP_XYZ
Title: XYZ
Description: Index with fields 'X', 'Y', and 'Z', for example used by NodeLocation attribute.
Definition: Concat(ACP_XY, 'Z')
NodeLocation: 280,192,1
NodeSize: 64,24
WindState: 2,98,82,720,350

Index ACP_XY
Att_PrevIndexValue: ['X','Y']
Title: XY
Definition: ['X','Y']
NodeLocation: 120,192,1
NodeSize: 64,24
WindState: 2,105,534,720,350

Index ACP_Value_state_fiel
Title: Value state fields
Definition: ['Version','X','Y','W','H','Graph','Uncertainty view']
IndexVals: ['item 1']
NodeLocation: 280,80,1
NodeSize: 64,24
ValueState: 2,516,522,416,303,,MIDM

Index ACP_Nodeinfo_fields
Att_PrevIndexValue: ['Version','Showinputs','Showoutputs','Showlabel','Showborder','Fill','Use node font','Formwidth','Show bevel','Show form icon','Embed','Visibility','Justification','Control on left','Tab advance on enter','Vertical justifiy label','Vertical align button','Corner radius']
Title: NodeInfo Fields
Description: Fields of the NodeInfo attribute.~

Definition: ['Version','Showinputs','Showoutputs','Showlabel','Showborder','Fill','Use node font','Formwidth','Show bevel','Show form icon','Embed','Visibility','Justification','Control on left','Tab advance on enter','Vertical justifiy label','Vertical align button','Corner radius']
NodeLocation: 280,136,1
NodeSize: 64,24
WindState: 2,96,0,628,744
ValueState: 2,1480,265,436,488,,MIDM

Index ACP_RGB
Title: RGB
Description: Index for colors stored as Red, Green, and Blue, for example NodeColor or NodeFontcolor attributes.
Definition: ['R','G','B']
NodeLocation: 120,360,1
NodeSize: 64,24

Index ACP_NodeFont_fields
Title: NodeFont fields
Definition: ['Font','Font size']
IndexVals: ['item 1']
NodeLocation: 120,136,1
NodeSize: 64,24

Text ACP_Te51053187
Title: Attribute field indexes
NodeLocation: 204,212,-1
NodeSize: 156,188
NodeInfo: 1,,,,1,1

Index ACP_Number_format_fi
Title: Number format fields
Definition: ['i2','Formatcode','proxy','zeroes','separators','currency','Digits','trailingZeros','currencysymbol','currencyPlacement','datetemplate','fullPrecision','fullDateTemplate',' relReqForFullDateTemplate','datesAsNumbers','numbersAsDates','digitsForGeneralFmt']
NodeLocation: 120,248,1
NodeSize: 64,24
WindState: 2,491,167,673,397
ValueState: 2,716,230,324,437,,MIDM

Index ACP_XYWH
Title: XYWH
Description: Index with fields for top left corner (X and Y), width W, and height H, which may be used when getting or setting these values in DiagState, ValueState, or WindState.
Definition: ['X','Y','W','H']
NodeLocation: 280,248,1
NodeSize: 64,24
WindState: 2,727,531,720,350

Index ACP_WindState_fields
Title: WindState fields
Description: Fields of the WindState attribute
Definition: ['Version','X','Y','W','H']
NodeLocation: 120,304,1
NodeSize: 64,24
WindState: 2,378,549,720,261
ValueState: 2,516,522,416,303,,MIDM

Index ACP_DefnState_fields
Title: DefnState fields
Description: Fields of the WindState attribute
Definition: ['Version','X','Y','W','H','Unknown','View']
NodeLocation: 280,304,1
NodeSize: 64,24
WindState: 2,378,549,720,261
ValueState: 2,516,522,416,303,,MIDM

Alias ACP_Al96266563
Title: Eg handles to objects
Definition: 0
NodeLocation: 328,488,1
NodeSize: 80,24
Original: ACP_handles_to_objec

Close ACP_Attrib_field_ind

Text ACP_Te259320131
Title: Examples
NodeLocation: 580,328,-3
NodeSize: 404,176
NodeInfo: 1,,,,1,1

Decision ACP_Select_objects
Title: Select objects
Definition: Choice(ACP_handles_to_objec,0,eval:0)
NodeLocation: 448,336,1
NodeSize: 64,24
Aliases: FormNode ACP_Fo924641603

FormNode ACP_Fo924641603
Title: Select objects
Definition: 0
NodeLocation: 792,208,1
NodeSize: 168,16
NodeInfo: 1,,,,,,,184,,,,,,0
Original: ACP_Select_objects

Variable ACP_Get_Attrib_field
Title: eg Get_ Attrib_field()
Definition: ACP_Get_att_field( ACP_Select_attrib_w_, ACP_Select_objects)
NodeLocation: 448,272,1
NodeSize: 64,24
ValueState: 2,641,155,1076,522,,MIDM
Aliases: FormNode ACP_Fo1973217603
ReformVal: [ACP_XY,ACP_handles_to_objec]

FormNode ACP_Fo1973217603
Title: eg Attrib fields from object(s)
Definition: 1
NodeLocation: 848,352,1
NodeSize: 112,16
NodeInfo: 1,,,,,,,16,,,,,,0
Original: ACP_Get_Attrib_field

Index ACP_Text_attributes
Title: Text attributes
Definition: ListOfHandles(Class, Identifier, Units, Description, Definition)
NodeLocation: 80,240,1
NodeSize: 64,24

Decision ACP_Selected_attribs
Title: Selected attribs
Definition: MultiChoice(Self,1,3,10,14,15,19)
NodeLocation: 264,208,1
NodeSize: 64,24
Aliases: FormNode ACP_Fo1342368067
{!40300|DomainExpr: Concat(Concat(ACP_Text_attributes, ACP_Attribs_w_object), ACP_Attribs_with_fie)}

FormNode ACP_Fo1342368067
Title: Selected attribs
Definition: 0
NodeLocation: 792,240,1
NodeSize: 168,16
NodeInfo: 1,,,,,,,184,,,,,,0
Original: ACP_Selected_attribs

Variable ACP_variable
Title: eg variable
Definition: 100^2
NodeLocation: 280,344,1
NodeSize: 64,24

Variable ACP_Get_att1
Title: eg Get_att()
Definition: ACP_Get_att(ACP_Selected_attribs, ACP_Select_objects)
NodeLocation: 536,208,1
NodeSize: 64,24
ValueState: 2,895,73,838,198,,MIDM
Aliases: FormNode ACP_Fo1111681347

FormNode ACP_Fo1111681347
Title: eg Get_att()
Definition: 1
NodeLocation: 848,272,1
NodeSize: 112,16
NodeInfo: 1,,,,,,,16,,,,,,,,,,
Original: ACP_Get_att1

{!50500|ArrowClass ACP_Arrow375883075}
{!50500|Att_HeadNode: ACP_Get_att1}
{!50500|Att_TailNode: ACP_Get_att}
{!50500|Att_ArrowWayPoints: [Null,Null,41,0.23809523809523808,49,0.47619047619047616]}
{!50500|Att_ArrowProperties: 1}

{!50500|ArrowClass ACP_Arrow1902609731}
{!50500|Att_HeadNode: ACP_Get_Attrib_field}
{!50500|Att_TailNode: ACP_Get_att_field}
{!50500|Att_ArrowProperties: 1}

{!50500|ArrowClass ACP_Arrow1666680131}
{!50500|Att_HeadNode: ACP_Get_att1}
{!50500|Att_TailNode: ACP_Select_objects}
{!50500|Att_ArrowWayPoints: [-0.8951737173277154,Null,1,0.1875]}
{!50500|Att_ArrowProperties: 1}

{!50500|ArrowClass ACP_Arrow851428675}
{!50500|Att_HeadNode: ACP_handles_to_objec}
{!50500|Att_TailNode: ACP_Select_attrib_w_}
{!50500|Att_ArrowWayPoints: [Null,Null,0.4782608695652174,0.2777777777777778,0.6086956521739131,0.6111111111111112]}
{!50500|Att_ArrowProperties: 1}

{!50500|ArrowClass ACP_Arrow381666627}
{!50500|Att_HeadNode: ACP_handles_to_objec}
{!50500|Att_TailNode: ACP_Attrib_field_ind}
{!50500|Att_ArrowWayPoints: [Null,-153.90457060562727,0.2222222222222222,0.2,0.3111111111111111,0.5333333333333333,0.6666666666666666,0.5666666666666667,0.7777777777777778,0.7666666666666667]}
{!50500|Att_ArrowProperties: 1}

{!50500|ArrowClass ACP_Arrow276809027}
{!50500|Att_HeadNode: ACP_Select_attrib_w_}
{!50500|Att_TailNode: ACP_Attribs_with_fie}
{!50500|Att_ArrowWayPoints: [Null,Null,0.4090909090909091,0.3,0.5454545454545454,0.75]}
{!50500|Att_ArrowProperties: 1}

{!50500|ArrowClass ACP_Arrow1384105283}
{!50500|Att_HeadNode: ACP_Selected_attribs}
{!50500|Att_TailNode: ACP_Attribs_w_object}
{!50500|Att_ArrowWayPoints: [Null,-157.1663411041452,0.4090909090909091,0.23809523809523808,0.4090909090909091,0.5714285714285714]}
{!50500|Att_ArrowProperties: 1}

{!50500|ArrowClass ACP_Arrow1719649603}
{!50500|Att_HeadNode: ACP_Selected_attribs}
{!50500|Att_TailNode: ACP_Attribs_with_fie}
{!50500|Att_ArrowWayPoints: [Null,-172.87498389323082,0.4090909090909091,0.4166666666666667]}
{!50500|Att_ArrowProperties: 1}

Close ACP_Get_and_set_atts

Library ACP_Find_objects_in_
Title: Find objects in modules
Description: A library of functions to return lists of objects from modules.~
~
Copyright 2021 Lumina Decision Systems, Inc.
Author: Alex Graham
Date: Thu, Jun 22, 2006 11:43 AM
DefaultSize: 48,24
NodeLocation: 96,96,1
NodeSize: 88,24
DiagState: 2,34,169,1121,630,23,,
WindState: 2,241,291,673,408
FontStyle: Arial,15
OutlinerState: 2,274,34,450,532
{!40400|Att_clearTypeFonts: 1}

Decision ACP_Excluded_module
Title: Excluded module
Description: The identifier of module to be excluded from submodules(), when computing all the modules in this model. This is usually used to exclude this library.
Definition: Handle(ACP_Styles)
NodeLocation: 568,464,1
NodeSize: 100,20
WindState: 2,561,195,473,547
ValueState: 2,526,328,416,303,0,MIDM

Decision ACP_Node_order_by_mo
Title: Node order by module
Description: Specify how to order the listing of objects within each module:~
  Original order -- the order the objects were created~
  Alphabetic -- by identifier~
  Top to bottom  -- by node center as arranged in the diagram, and left to right for nodes aligned horizontally.~
  Left to right -- by node center as arranged in the diagram,  and top to bottom for nodes aligned vertically.
Definition: Choice(Self,1,0)
NodeLocation: 816,520,1
NodeSize: 100,20
WindState: 2,-15,240,524,536
ValueState: 2,536,546,416,303,0,MIDM
Aliases: FormNode ACP_New412318595
{!40300|DomainExpr: Discrete('Original order','Alphabetic','Top to bottom','Left to right',type:['text'])}

Decision ACP_Which_modules_to
Title: Which modules to list?
Description: Select which modules for which to generate the listing:~
  * Only the parent module containing 'Write model listing'~
  * The parent module and all its submodules~
  * All modules in this model~
In all cases, it excludes this module, 'Write model listing' from the listing.
Definition: Choice(Self,3,0)
NodeLocation: 812,216,1
NodeSize: 100,20
WindState: 2,991,617,501,380
Aliases: FormNode ACP_New1754495875
{!40300|DomainExpr: Discrete('Only parent module','Parent and its submodules','All modules in this model',type:['text'])}

Variable ACP_Selected_modules
Att_PrevIndexValue: [ACP_Styles,ACP_style_lib_detai1,ACP_Object_attribs_l,ACP_attrib_access,Undefined,ACP_Get_and_set_atts,ACP_Attrib_field_ind,Undefined,ACP_Find_objects_in_,ACP_Check_Object_Cla,ACP_Prefixer_library,ACP_IT_prefixer_deta,ACP_Module_reviewer,ACP_IT_and_alias_fun,ACP_Prefixer_functio,ACP_Style_lib_detail,ACP_Dashboard_sizes,Undefined,ACP_autocalc_by_Diag,Undefined,ACP_old_autocalc,ACP_autocalc_UI,Undefined,Undefined,Undefined,Undefined,Undefined,Undefined,Undefined,ACP_Top_styles,ACP_esoteric_styles,Undefined,ACP_Set_non_default_,ACP_styles_for_nodes,Undefined]
Title: Selected modules
Definition: Metavar parmod:= ACP_Parent_module( Handle(self) ) ;~
IF IsNull(parmod) THEN Error('Expecting a parent Module: You must add this library into the Model you want to modify.')~
ELSE BEGIN~
  Metavar topMod :=  IF ACP_Which_modules_to = 'All modules in this model' ~
                 THEN ACP_Top_model ~
                 ELSE ACP_Parent_module(parmod);~
   IF ACP_Which_modules_to = 'Only parent module' ~
                THEN ACP_Listofone(topMod) ~
                ELSE ACP_Submodules( topMod )~
END
NodeLocation: 568,216,1
NodeSize: 100,20
WindState: 2,805,278,506,606
ValueState: 2,423,340,299,372,0,MIDM
Aliases: Alias ACP_Al723978115
DisplayOutputs: Variable Indented_module_name

Function ACP_Submodules(m: Handle)
Title: Submodules(m)
Description: Returns a list of all the submodules (including m) of the module m, ~
excluding the module in Excluded_module, usually the name of this module library.
Definition: Metavar res := [m];~
Metavar c := contains of  m ;~
IF IsNull(c) THEN res~
ELSE BEGIN~
  Metavar v[] := c DO BEGIN~
     IF ACP_Isamodule( v) AND v<>ACP_Excluded_module~
          THEN res := Concat(res, ACP_Submodules(v)) ELSE 0;~
  END; ~
  copyindex( res )~
END~

NodeLocation: 336,104,1
NodeSize: 100,20
NodeInfo: 1,1,1
WindState: 2,255,85,800,547
Recursive: 1

Function ACP_Objectsinmod(m: Handle)
Title: ObjectsInMod(m)
Description: Returns a list of all the objects in Module m, excluding m, and not recursively to objects in submodules. If none, it returns an Empty list.
Definition: Metavar c := Contains OF m;~
IF IsNull(c) ~
THEN NULL ~
ELSE( ~
Metaindex ind := c;~
Metaindex i:= Subset(ind <>ACP_Excluded_module);~
i~
)~

NodeLocation: 336,466,1
NodeSize: 100,20
NodeInfo: 1,1,1
WindState: 2,601,195,875,526
DisplayOutputs: Function ACP_Summary_of_modul

Function ACP_Listofone(x)
Title: ListofOne(x)
Description: Returns a list containing the value of x as its only element.
Definition: [x]
NodeLocation: 568,48,1
NodeSize: 100,20
NodeInfo: 1,1,1
WindState: 2,243,335,476,224

Function ACP_Objectsbymodule(m: Handle)
Title: ObjectsByModule(m)
Description: Returns a list of all objects in module m, and its submodules, grouped by module.
Definition: Metavar res := [m];~
Metavar c := ACP_Objectsinmod(m);~
IFONLY c = ACP_Empty_list THEN res~
ELSE BEGIN~
  Metavar v[] := c DO ( ~
     IF ACP_Isamodule(v) AND v <> ACP_Excluded_module~
          THEN res := Concat(res, ACP_Objectsbymodule(v)) ~
          ELSE res := Concat(res, [v]); 0);~
  res~
END
NodeLocation: 336,156,1
NodeSize: 100,20
NodeInfo: 1,1,1
WindState: 2,614,172,738,536
Recursive: 1

Function ACP_Orderobjs(olist: Handle; method: Text)
Title: OrderObjs(olist, method)
Description: Given list of object identifiers v, it orders them according to method ~
  Original order -- order nodes were created~
  Alphabetic -- by module~
  Top to bottom  -- left to right for nodes at the same Y location.~
  Left to right -- top to bottom for nodes at same X location.
Definition: IF method =  'Original order' THEN CopyIndex(olist)~
ELSE IF method = 'Alphabetic' THEN SortIndex(olist)~
ELSE BEGIN~
   Metavar locs := ACP_Get_att_field(NodeLocation, (olist), ACP_XY);~
   VAR xy_ratio := (IF method = 'Top to bottom' THEN 0.05 ELSE 20);~
   IF method <>  'Left to right' AND method <> 'Top to bottom' ~
		THEN "Error: Unknown value "&method&" for 'Node order by module'"~
   ELSE SortIndex(locs[ACP_XY = 'X'] *xy_ratio + locs[ACP_XY = 'Y'])~
END
NodeLocation: 336,592,1
NodeSize: 100,20
NodeInfo: 1,1,1
WindState: 2,1496,306,960,864
{!40500|ParameterEnumeration: method~
	'Original order'| in which objects were defined~
	'Alphabetic'| by Identifier~
	'Top to bottom'| Node location from top to bottom (then left to right)~
	'Left to right'| Node location from left to right (then top to bottom)}

Index ACP_Objects_in_this_
Title: Objects in this module
Definition: ACP_Objectsinmod( ACP_handle_to_this_m)
NodeLocation: 1032,464,1
NodeSize: 64,24
ValueState: 2,232,242,305,488,0,MIDM

Variable ACP_Eg2
Title: Eg2
Definition: ACP_Orderobjs( ACP_Objects_in_this_,  method: ACP_Node_order_by_mo )
NodeLocation: 568,592,1
NodeSize: 100,20
ValueState: 2,195,791,708,367,0,MIDM
ReformVal: [0,ACP_Objects_in_this_]

Function ACP_Objs_ordered_by_(m: Handle; method: Text)
Title: Objs_Ordered_By_Mod(m, method)
Description: Returns a list of identifiers of all objects in module m, and its submodules, grouped by module, ordered within each module by specified method.~
~
It does not search Excluded_module, usually set to this library or a module containing all libraries.
Definition: Metavar res := [m];~
Metavar c := ACP_Objectsinmod(m);~
IFONLY c = ACP_Empty_list THEN res~
ELSE BEGIN~
  Metavar objs := ACP_Orderobjs(c, method);~
  Metavar o[] := objs Do BEGIN~
     IF ACP_Isamodule(o)~
     THEN(~
           IF o <> ACP_Excluded_module~
           THEN res := Concat(res, ACP_Objs_ordered_by_(o, method))~
           ELSE 0;~
     )~
     ELSE res := Concat(res, [o]);~
  END; ~
  res~
END
NodeLocation: 336,404,1
NodeSize: 100,20
NodeInfo: 1,1,1
WindState: 2,135,97,679,542
Recursive: 1
{!40500|ParameterEnumeration: method~
	'Original order'| in which objects were defined~
	'Alphabetic'| by Identifier~
	'Top to bottom'| Node location from top to bottom (then left to right)~
	'Left to right'| Node location from left to right (then top to bottom)}

Variable ACP_Eg1
Title: Eg1
Definition: ACP_Objs_ordered_by_( ACP_handle_to_this_m , ACP_Node_order_by_mo)
NodeLocation: 824,408,1
NodeSize: 100,20
ValueState: 2,699,6,368,801,0,MIDM

Variable ACP_Empty_list
Title: Empty list
Definition: 'empty list'
NodeLocation: 112,160,1
NodeSize: 72,24
WindState: 2,102,83,476,224
ValueState: 2,40,50,416,303,0,MIDM

Function ACP_Parent_module(o: Handle)
Title: Parent_module(o)
Description: Returns the identifier of the module containing object o.
Definition: Isin OF o
NodeLocation: 336,218,1
NodeSize: 100,20
NodeInfo: 1,1,1
WindState: 2,382,224,524,536

Variable ACP_handle_to_this_m
Title: eg handle to this module
Definition: Isin OF Self
NodeLocation: 816,464,1
NodeSize: 104,24
WindState: 2,94,85,476,224
ValueState: 2,360,370,416,303,0,MIDM

Variable ACP_Top_model
Title: Top model
Description: The main model (top level module) for this model.
Definition: VAR m := Handle(Self); ~
WHILE Not IsUndef(Isin OF m) DO m := ISIN OF m;~
m;
NodeLocation: 816,280,1
NodeSize: 104,24
ValueState: 2,766,360,416,303,0,MIDM

Function ACP_Indented_modules(m: Handle; nIndents: = 0; indentChar: = '>'; nLevels: = INF)
Title: Indented_modules(m)
Description: Returns a list of the titles of the submodules of module m (including m) and recursively downwards nLevels (defaults to unlimited levels), indented by nIndents spaces plus  indentChar to show the hierarchy.~
It excludes the module in ACP_Excluded_module (and any modules it contains).
Definition: VAR indent := (Index i := Sequence(1, nIndents, strict:False); Jointext(ACP_Indent_for_Modul, i));~
Metavar res := [indent & ACP_Indent_char &(Title OF m)];~
Metavar c := Contains of  m ;~
IF IsNull(c) THEN res~
ELSE BEGIN~
  Metavar v[] := c DO BEGIN ~
     IF ACP_Isamodule(v) AND v<>ACP_Excluded_module~
          THEN res := Concat(res, ACP_Indented_modules(v, nIndents+1)) ELSE 0;~
  END; ~
  res~
END~

NodeLocation: 336,342,1
NodeSize: 100,20
NodeInfo: 1,1,1
WindState: 2,693,354,735,605
Recursive: 1

Variable ACP_Test_indented_mo
Title: Test indented_modules
Definition: Var top := ACP_Top_model;~
INDEX i := ACP_Indented_modules(top);~
Array(i, ACP_Submodules(top))
NodeLocation: 568,344,1
NodeSize: 100,20
ValueState: 2,136,145,1001,742,0,MIDM

Module ACP_Check_Object_Cla
Title: Check Object Class
Author: Lumina
Date: Fri, Dec 18, 2015 5:19 PM
NodeLocation: 112,280,1
NodeSize: 72,24
DiagState: 2,1173,37,489,461,23

Function ACP_Submodules_unfil(m: Handle)
Title: Submodules_unfiled(m)
Description: A list of all the submodules (including m) of the module m, and recursively downwards, excluding any separately filed modules (Model, LinkLibrary, LinkModule), the module in Excluded_module (and any modules it contains). You may use the Excluded_module to exclude this module library or a module containing all libraries.
Definition: Metavar res := [m];~
Metavar c := contains of  m ;~
IF IsNull(c) THEN res~
ELSE BEGIN~
  Metavar v[] := c DO BEGIN ~
     IF ACP_IsanUnfiledModul(v) AND v<>ACP_Excluded_module~
          THEN res := Concat(res, ACP_Submodules_unfil(v)) ELSE 0;~
  END; ~
  res~
END~

NodeLocation: 296,328,1
NodeSize: 100,24
NodeInfo: 1,1,1
WindState: 2,494,476,754,617
Recursive: 1

Index ACP_Variable_classes
Title: Variable classes
Definition: ['Variable','Index','Decision','Chance','Objective','Constant','Constraint']
NodeLocation: 120,56,1
NodeSize: 64,24
WindState: 2,102,89,476,321

Function ACP_IsaVariable(o: Handle)
Title: IsaVariable(o)
Description: True if the class of object o is a Variable (including Chance, Decision, Index, Constant, Constraint), otherwise False
Definition: SetContains(\ACP_Variable_classes, Class OF o)
NodeLocation: 296,56,1
NodeSize: 100,24
WindState: 2,982,377,605,365
DisplayOutputs: Function ACP_Summary_of_modul

Index ACP_Filed_Module_cla
Title: Filed Module classes
Description: Classes of Object that are a kind of Module.
Definition: ['Model','LinkLibrary','LinkModule']
IndexVals: ['item 1']
NodeLocation: 120,192,1
NodeSize: 64,24

Function ACP_IsaFiledModule(o: Handle)
Title: IsaFiledModule(o)
Description: True if the class of object o is a separately Filed Module (Model, LinkModule, or LinkLibrary), otherwise False
Definition: Sum((Class OF o) = ACP_Filed_Module_cla, ACP_Filed_Module_cla)>0
NodeLocation: 296,192,1
NodeSize: 100,24
WindState: 2,982,377,605,365

Index ACP_Unfiled_Module_c
Title: Unfiled Module classes
Description: Classes of Object that are a kind of Module that is not separately filed, i.e. Module or Library (but not Model, LinkModule or LinkLibrary).
Definition: ['Module','Library']
IndexVals: ['item 1']
NodeLocation: 120,264,1
NodeSize: 64,24
WindState: 2,941,70,476,224

Function ACP_IsanUnfiledModul(o: Handle)
Title: IsanUnfiledModule(o)
Description: True if the class of object o is a Module (Module, or Library) that is not Filed Modules (Model, LinkModule, or LinkLibrary), otherwise False
Definition: Sum((Class OF o) = ACP_Unfiled_Module_c, ACP_Unfiled_Module_c)>0
NodeLocation: 296,264,1
NodeSize: 100,24
WindState: 2,138,574,605,365

Index ACP_Module_classes
Title: Module classes
Description: Classes of Object that are a kind of Module.
Definition: ['Form','Library','Model','Module','Linklibrary','Linkmodule']
NodeLocation: 120,128,1
NodeSize: 64,24

Function ACP_Isamodule(o: Handle)
Title: IsaModule(o)
Description: True if the class of object o is a Module (Model, Module, Form, Library, LinkModule, or LinkLibrary), otherwise False
Definition: SetContains(\ACP_Module_classes, Class OF o)
NodeLocation: 296,128,1
NodeSize: 100,24
WindState: 2,494,503,846,281
DisplayOutputs: Function ACP_Summary_of_modul

Close ACP_Check_Object_Cla

Constant ACP_Indent_for_Modul
Title: Indent for Module Hierarchy
Description: Indent, usually 4 spaces, used when displaying a module hierarchy with indentation to reflect the structure. 
Definition: '    '
NodeLocation: 112,344,1
NodeSize: 72,24

Variable ACP_Asl_Eg0
Title: Eg0
Definition: ACP_Objectsbymodule(ACP_Top_model)
NodeLocation: 812,152,1
NodeSize: 100,20
WindState: 2,190,125,503,342
ValueState: 2,526,59,623,868,0,MIDM

Variable ACP_Asl_Eg2
Title: Eg2
Definition: ACP_Orderobjs( ACP_Objects_in_this_,  ACP_Node_order_by_mo)
NodeLocation: 816,592,1
NodeSize: 100,20
WindState: 2,102,83,476,224
ValueState: 2,319,68,708,367,0,MIDM
ReformVal: [0,ACP_Objects_in_this_]

Variable ACP_Asl_Eg1
Title: Eg1
Definition: ACP_Objs_ordered_by_(ACP_handle_to_this_m , ACP_Node_order_by_mo)
NodeLocation: 560,408,1
NodeSize: 100,20
ValueState: 2,152,109,368,801,0,MIDM

Variable ACP_Asl_X
Title: x
Definition: ~
FOR v := ACP_Objectsinmod( ACP_handle_to_this_m ) DO Class OF v = 'Index'
NodeLocation: 568,522,1
NodeSize: 100,20
WindState: 2,102,83,476,224
ValueState: 2,101,491,416,303,0,MIDM

Function ACP_ObjectsinModule_(m: Handle; cl: Text)
Title: ObjectsinModule_Class(m, c)
Description: Returns a list of all the objects with Class cl in Module m, excluding m, and not recursively to objects in submodules. If none, it returns an Empty list.
Definition: {Try(...) call handles error that occurs when module doesn't have any node i.e. EW 16165}~
Try(Subset(FOR v := ACP_Objectsinmod( m ) DO Class OF v = cl), catch:[])
NodeLocation: 336,536,1
NodeSize: 104,24
NodeInfo: 1,1,1
WindState: 2,319,145,594,327

Function ACP_Submodules1(m: Module; includeM, subModules, includeLibraries, includeLinkfiles: = False)
Title: Submodules(m)
Description: Returns a set of the modules in module m,  ~
   includeM: Set true to include module or model m in the set returned.~
   subModules: Set true to include modules in submodules etc -- by default it includes only modules directly in m.~
   includeLibraries: Set true to include library modules.~
   includeLinkFiles: Set true to include linked modules and libraries -- i.e. in separate files.~
It does not return Excluded_modules (usually the parent library).
Definition: INDEX s := ~
IF includeLibraries ~
	THEN IF includeLinkFiles ~
		THEN #FindObjects(withinAny: m, class: Model, Module, LinkModule,~
			 Library, LinkLibrary, inclusive: includeM)~
		ELSE #FindObjects(withinAny: m, class: Model, Module, Library, ~
				inclusive: includeM)~
	ELSE IF includeLinkFiles ~
		THEN #FindObjects(withinAny: m, class: Model, Module, LinkModule, 	 	inclusive: includeM)~
		ELSE #FindObjects(withinAny: m, class: Model, Module, ~
				inclusive: includeM); ~
	~
IF NOT submodules THEN \Subset(Isin OF (s)=m OR (s)=m) ELSE s
NodeLocation: 328,48,1
NodeSize: 100,20
NodeInfo: 1,1,1
WindState: 2,1044,36,873,732

Variable ACP_submodules2
Title: eg submodules
Definition: ACP_Submodules1(Handle(ACP_Check_Object_Cla), includeM: False, subModules: False)
NodeLocation: 812,48,1
NodeSize: 100,20
ValueState: 2,1355,382,416,303,,MIDM

Constant ACP_Indent_char
Title: Indent char
Definition: '> '
NodeLocation: 112,400,1
NodeSize: 72,24

Variable ACP_Module_by_indent
Title: Module by indented module
Definition: Array(ACP_Indented_modul1, ACP_Submodules(ACP_Top_model))
NodeLocation: 1032,280,1
NodeSize: 64,24
ValueState: 2,136,145,1001,742,0,MIDM

Index ACP_Indented_modul1
Att_PrevIndexValue: ['> ACP Styles','    > ACP style lib details','        > Object attribs library','            > Old attrib access','        > Set corner radius','        > Get and set attributes library','            > Attrib field indexes','            > cccc old','        > Find objects in modules','            > Check Object Class','        > Prefixer library','            > Prefixer details','                > Module reviewer','                    > IO and alias functions','                > Prefixer functions','        > ACP Style lib details','            > Dashboard sizes','            > Test ACP_Style_set()','        > Set autocalc by Diagram or Variable','            > Autocalc internals','            > Not used','            > old autocalc UI','        > ACP styles in progress','            > Add and arrange nodes library','            > Make and copy objects','            > Add frames to diagrams','            > Show View in Frame','                > old','            > Frame and tall node styles','        > Top styles','    > Rare ACP styles','        > Debug nodeinfo issues','    > Set non-default styles','        > ACP styles for nodes details','            > Old Set result styles']
Title: Indented modules
Definition: ACP_Indented_modules(ACP_Top_model)
NodeLocation: 1032,192,1
NodeSize: 64,24
ValueState: 2,136,145,1001,742,0,MIDM

FormNode ACP_New1754495875
Title: Which modules to list?
Definition: 0
NodeLocation: 828,332,1
NodeSize: 132,12
Original: ACP_Which_modules_to

FormNode ACP_New412318595
Title: Node order by module
Definition: 0
NodeLocation: 860,360,1
NodeSize: 164,16
NodeInfo: 1,,,,,,,144
Original: ACP_Node_order_by_mo

Close ACP_Find_objects_in_

Library ACP_Prefixer_library
Title: Prefixer library
Description: Library to add a prefix to the identifiers of all objects in a selected module.  This helps avoid duplicate identifiers when a team is working on a large model, with each modeler working on a separate module.  You apply a different prefix for the identifiers in each major module to prevent duplicate. It also lets you create multiple copies of a module that you can use in the same model, with unique identifiers for variables in each copy.
Author: Max Henrion
Date: Mon, Mar 19, 2007 11:49 PM
NodeLocation: 312,32,1
NodeSize: 72,24
DiagState: 2,87,68,653,303,17
WindState: 2,179,257,789,366
{!40300|ProactivelyEvaluate: 5}

Module ACP_IT_prefixer_deta
Title: Prefixer details
Description: Details of the Prefixer, including key function libraries, Prefixer and Module reviewer libraries.
Author: Max Henrion
Date: Wed 24-Oct-07 1:55 AM
DefaultSize: 48,24
NodeLocation: 312,216,1
NodeSize: 56,24
DiagState: 2,462,115,598,346,23

Variable ACP_reset
Title: reset
Description: Change to regenerate the list of formal modules.
Definition: 1
NodeLocation: 376,40,1
NodeSize: 64,24
WindState: 2,381,533,652,399
ValueState: 2,0,-23,1024,640,0,MIDM
DisplayOutputs: Function Add_prefixes, Function G_remove_prefixes1

Library ACP_Module_reviewer
Title: Module reviewer
Description: Functions for reviewing modules, including identifying number and percentage of objects that contain descriptions.
Author: Lumina
Date: Tue, Dec 15, 2015 3:20 PM
NodeLocation: 80,224,1
NodeSize: 64,24
DiagState: 2,0,6,944,344,23
WindState: 2,102,89,476,224
{!40300|ProactivelyEvaluate: 5}

Index ACP_Module_review_fi
Att_PrevIndexValue: ['Identifier','Objects','Modules','No Description','IO nodes','IO no Description','No Title','No Units','No Definition','Incomplete vars']
Title: Module review fields
Definition: ['Identifier','Objects','Modules','No Description','IO nodes','IO no Description','No Title','No Units','No Definition','Incomplete vars']
IndexVals: ['item 1']
NodeLocation: 80,160,1
NodeSize: 56,24
DisplayOutputs: Function ACP_Summary_of_modul

Decision ACP_Select_module2
Title: Select module
Definition: Choice(ACP_Selected_modules,1,0,result:ACP_Selected_modules)
NodeLocation: 560,32,1
NodeSize: 64,24
WindState: 2,405,156,555,434
Aliases: Alias ACP_New76774275

Library ACP_IT_and_alias_fun
Title: IO and alias functions
Author: Lumina
Date: Tue, Dec 15, 2015 6:25 PM
NodeLocation: 328,32,0
NodeSize: 64,24
DiagState: 2,400,17,818,283,21
{!40300|ProactivelyEvaluate: 5}

Function ACP_IT_Alias_type(v: Handle)
Title: Alias_type(v)
Description: If v is a FormNode it returns 'User input' or 'User output' according to which type it is. If it is a regular Alias or other type of object, it returns its corresponding type.
Definition: IF TypeOf(v) = 'FormNode' THEN IF (Definition OF v) = '0' THEN 'User input' ELSE 'User output'~
ELSE TypeOf(v)
NodeLocation: 112,96,1
NodeSize: 96,16
WindState: 2,420,183,806,329

Variable ACP_Test_xx
Title: Test xx
Definition: 1
NodeLocation: 456,32,1
NodeSize: 48,24
ValueState: 2,424,433,416,303,1,MIDM
Aliases: FormNode ACP_New1486060419, FormNode ACP_New949189507, Alias ACP_New2022931331

Function ACP_IT_Aliases_of(v: Variable)
Title: Aliases_of(v)
Description: True of variable v has an input node.
Definition: (Aliases OF v)
NodeLocation: 112,32,1
NodeSize: 96,16
WindState: 2,627,419,496,296

Variable ACP_Test_Aliases_of
Title: Test Aliases_of()
Definition: ACP_IT_Aliases_of(ACP_Test_xx)
NodeLocation: 312,32,1
NodeSize: 64,24
ValueState: 2,1121,385,416,303,0,MIDM

Variable ACP_IT_Alias_type_te
Title: Alias type test
Definition: ACP_IT_Alias_type(ACP_Test_Aliases_of)
NodeLocation: 312,96,1
NodeSize: 64,24
ValueState: 2,741,123,416,303,0,MIDM

Function ACP_Has_User_IO_node(v: Object)
Title: Has_User_IO_node(v)
Description: True if variable v has a user input or user output node.
Definition: MetaVAR a := (Aliases OF v);~
IF IsNull(a) THEN 0~
ELSE Sum(Metavar i[] := a DO ACP_IT_Alias_type(i)='User input' OR ACP_IT_Alias_type(i) = 'User output')>0
NodeLocation: 112,160,1
NodeSize: 96,16
WindState: 2,595,80,557,425
DisplayOutputs: Function ACP_Summary_of_modul

Variable ACP_Test_Has_User_IO
Title: Test Has_User_IO
Definition: Metavar v[] := ACP_Objectsinmod(ACP_Select_module2) DO ACP_Has_User_IO_node(v)
NodeLocation: 312,160,1
NodeSize: 64,24
ValueState: 2,400,484,450,415,0,MIDM

Function ACP_Var_has_data1(v: Variable)
Title: Var_has_data(v)
Description: Returns true (1) if variable v contains data -- i.e. it is a scalar variable containing a literal number or text,~
or a Table whose only inputs are indexes (it does not contain expressions). ~
It returns False for a Index or Function.~
~
(It does not treat Determtable, ProbTable, Subtable or Multitable as Inputs)
Definition: VAR c := Class OF v;~
IF c = 'Index' OR c =  'Function' THEN 0~
ELSE IF Size(Inputs OF v) = 0 THEN 1~
ELSE IF TextUppercase(SelectText(TextTrim(Definition OF v), 1, 5)) <> 'TABLE' THEN 0~
ELSE Sum(For i := Inputs OF v DO (Class OF i) <> 'Index')=0
NodeLocation: 112,224,1
NodeSize: 96,16
WindState: 2,436,57,659,573

FormNode ACP_New1486060419
Title: xx
Definition: 0
NodeLocation: 604,24,1
NodeSize: 84,16
Original: ACP_Test_xx

FormNode ACP_New949189507
Title: xx
Definition: 1
NodeLocation: 604,64,1
NodeSize: 84,16
Original: ACP_Test_xx

Alias ACP_New2022931331
Title: xx
Definition: 1
NodeLocation: 752,32,1
NodeSize: 48,24
Original: ACP_Test_xx

Alias ACP_New76774275
Title: Select module
Definition: 1
NodeLocation: 528,160,1
NodeSize: 48,24
Original: ACP_Select_module2

Close ACP_IT_and_alias_fun

Decision ACP_Min_description_
Title: Min description length
Description: Any object with a description with fewer chars is treated as missing its description.
Definition: 40
NodeLocation: 80,96,1
NodeSize: 56,24
DisplayOutputs: Function ACP_Summary_of_modul

Function ACP_Summary_of_modul(m: Handle)
Title: Summary_of_module(m)
Description: Returns summary information for module m over Mod review fields.
Definition: VAR inv := ACP_Objectsinmod(m); ~
IF IT_Module_review_fie='Identifier' THEN Identifier OF m~
ELSE IF Size(inv) = 1 THEN IF Slice(inv, 1) = IT_Empty_list THEN 0 ELSE 1~
ELSE IF IT_Module_review_fie='Objects' THEN Size(inv)  ~
ELSE IF IT_Module_review_fie='IO nodes' THEN Sum(Metavar v[] := inv DO IT_Has_User_IO_node(v))~
ELSE IF IT_Module_review_fie='IO no Description' THEN Sum(Metavar v[] := inv DO (IT_Has_User_IO_node(v) AND TextLength(Description OF v)<IT_Min_description_l))~
ELSE IF IT_Module_review_fie='Modules' THEN Sum(Metavar o := inv DO ACP_Isamodule(o))~
ELSE IF IT_Module_review_fie='No Description' THEN Sum(Metavar v := inv DO TextLength(Description OF v)<IT_Min_description_l)~
ELSE IF IT_Module_review_fie='No Units' THEN Sum(Metavar o := inv DO (Units OF o)='' AND ACP_IsaVariable(o))~
ELSE IF IT_Module_review_fie='No Definition' THEN Sum(MetaIndex o := inv DO  (Definition OF o)='' AND NOT ACP_Isamodule(o))~
ELSE IF IT_Module_review_fie= 'Incomplete vars' THEN \Subset(Metavar v := inv DO TextLength(Description OF v)<IT_Min_description_l)~
ELSE 0
NodeLocation: 328,96,1
NodeSize: 144,24
WindState: 2,146,444,1013,699
DisplayInputs: Object Object, Object Function, Object Decision, Object Index, Function ACP_Objectsinmod, Function ACP_IsaVariable, Function ACP_Isamodule, Index ACP_Module_review_fi, Function ACP_Has_User_IO_node, Decision ACP_Min_description_

Function ACP_Summary_of_submo(m: Handle)
Title: Summary_of_submods(m)
Description: Returns summary information for module m over Mod review fields, recursively -- i.e. including contents of submodules etc.
Definition: MetaIndex inv := ACP_Submodules(m); ~
Metavar m1[] := inv DO ACP_Summary_of_modul(m1)
NodeLocation: 328,160,1
NodeSize: 144,24
WindState: 2,258,123,1013,699

Variable ACP_Test_summary_of1
Title: Test summary of module
Description: fdbfghfghdfghdfghdfgh
Definition: ACP_Summary_of_submo(ACP_Select_module2)
NodeLocation: 560,160,1
NodeSize: 64,24
ValueState: 2,242,424,1459,597,0,MIDM
Aliases: FormNode ACP_New1326676867
ReformVal: [ACP_Module_review_fi,Sys_LocalIndex('inv')]

Variable ACP_Numerical_module
Title: Mod review field is numerical?
Description: True (1) for each module summary field that contains a number.
Definition: Table(ACP_Module_review_fi)(0,1,1,1,1,0,0,1,1,0)
NodeLocation: 80,224,1
NodeSize: 80,24
WindState: 2,337,742,720,350

Function ACP_Summary_sum_modu(m: Handle)
Title: Summary_sum_modules(m)
Description: Returns summary information for module m over Mod review fields, recursively -- i.e. including contents of submodules etc.
Definition: MetaIndex inv := ACP_Submodules(m); ~
Sum(MetaVar m1[] := inv DO IF ACP_Numerical_module THEN ACP_Summary_of_modul(m1) ELSE 0, inv)
NodeLocation: 328,224,1
NodeSize: 144,24
WindState: 2,119,530,1013,358

Variable ACP_Summary_of_modu1
Title: Summary of modules
Description: fdbfghfghdfghdfghdfgh
Definition: ACP_Summary_sum_modu(Handle(ACP_Module_reviewer))
NodeLocation: 560,224,1
NodeSize: 64,24
WindState: 2,914,688,476,224
ValueState: 2,396,667,1176,265,0,MIDM
Aliases: FormNode ACP_New789805955
ReformVal: [ACP_Module_review_fi,Sys_LocalIndex('inv')]

Index ACP_Review_fields
Title: Review fields
Definition: ['Num Objects','% Descriptions','Link']
NodeLocation: 80,296,1
NodeSize: 56,24
WindState: 2,102,89,365,345

Variable ACP_IT__descriptions
Title: % descriptions by module
Description: Show the number of objects and percent with descriptions in each of the submodules of the selected formal module.
Definition: MetaIndex Modules := ACP_Indented_modules(ACP_Select_a_module1);~
VAR x := ACP_Summary_of_submo(ACP_Select_a_module1);~
(IF ACP_Review_fields='Link' THEN HandleFromIdentifier(x[ACP_Module_review_fi='Identifier'])~
ELSE IF ACP_Review_fields='Num Objects' THEN x[ACP_Module_review_fi='Objects'] ~
ELSE IF ACP_Review_fields='% Descriptions' THEN BEGIN~
	VAR xn := x[ACP_Module_review_fi='Objects'];~
       (IF xn=0 THEN 0 ELSE (xn - x[ACP_Module_review_fi='No Description'])/xn*100)&'%'~
	END~
ELSE NULL)[@.inv = @Modules]
NodeLocation: 328,296,1
NodeSize: 64,24
WindState: 2,217,144,1030,446
ValueState: 2,123,485,921,684,0,MIDM
Aliases: FormNode ACP_New1595112323
ReformVal: [ACP_Module_review_fi,Sys_LocalIndex('Modules')]
NumberFormat: 2,I,4,2,0,0,4,0,$,0,"ABBREV",0,,,0,0

FormNode ACP_New1326676867
Title: Test summary of module
Definition: 1
NodeLocation: 784,160,1
NodeSize: 144,16
Original: ACP_Test_summary_of1

FormNode ACP_New789805955
Title: Summary of modules
Definition: 1
NodeLocation: 784,224,1
NodeSize: 144,16
Original: ACP_Summary_of_modu1

Alias ACP_Al723978115
Title: Selected modules
Definition: 1
NodeLocation: 720,32,1
NodeSize: 64,24
Original: ACP_Selected_modules

Close ACP_Module_reviewer

Library ACP_Prefixer_functio
Title: Prefixer functions
Description: Functions used by the Prefixer to find, add, and remove prefixes from identifiers in a formal module
Author: Lumina
Date: Tue, Dec 15, 2015 3:20 PM
NodeLocation: 80,40,1
NodeSize: 64,24
DiagState: 2,118,424,869,381,21

Function ACP_Renameobj(o: Object; id: Text)
Title: RenameObj(o, id)
Description: Renames object o with a new identifier id.~
If id is already in use, it appends a number to it to make the new identifier unique.~
If Trace_renaming it shows a message box that mentions old and new identifiers.
Definition: VAR n := 0;  VAR len := Min([TextLength(id), 18]); ~
WHILE HandleFromIdentifier(id) <> Null AND n<100 DO id := SelectText(id, 1, len)&(n := n+1); { Create unique identifier }~
IF ACP_Trace_Renaming THEN MsgBox('Renaming '&Identifier o &' to '&id);~
Evaluatescript('Rename '&Identifier o &' '&id&'                     ')
NodeLocation: 264,288,1
NodeSize: 104,16
NodeInfo: 1,1,1
WindState: 2,302,98,781,470

Function ACP_Remove_prefix(o: Object)
Title: Remove_Prefix(o)
Description: Remove prefix from the identifier of object o. It assumes that the first one or two characters are a prefix if they are followed by underscore '_'.
Definition: VAR id := Identifier OF o;~
VAR n := FindInText('_', id);~
MsgBox('In remove prefix on object '&id&' we found underscore at char '&n);~
IF (n=2 OR n=3) THEN BEGIN~
	id := SelectText(Id, n+1);~
	IF NOT ACP_Isletter(SelectText(id, 1, 1)) THEN id := 'X' & id;~
	ACP_Renameobj(o, id)~
END
NodeLocation: 264,240,1
NodeSize: 104,16
NodeInfo: 1,1,1
WindState: 2,105,254,742,388

Function ACP_Prefix_module(m: Object; prefix: Text Atom; trace: = False)
Title: Prefix_module(m, prefix)
Description: Adds prefix with underscore (if they don't already have that prefix) to all objects in module m, recursively downwards to all contained modules and libraries, excluding separately filed modules (LinkModule, LinkLibrary, Model), and the Excluded_module and anything it contains.  Returns the number of objects to which it added a prefix (ignores those which already had that prefix).~
~
If trace it gives a message saying how many objects it added a prefix to. 
Definition: IF NOT ACP_IsaPrefix(prefix) THEN MsgBox("'"& prefix & "' is not a valid prefix. A prefix must be a letter, followed by an optional letter or digit.~
Please type a prefix into 'Prefix for this module'.", )~
ELSE BEGIN~
	VAR n := ACP_Addprefix(m, prefix);~
	MetaVar mods := ACP_Submodules_unfil(m);~
	FOR o := mods DO BEGIN~
 	  Metavar c := Contains OF o;~
	  IF NOT IsNull(c) THEN METAVAR j[] := c DO IF NOT ACP_IsaFiledModule(j) THEN n := n + ACP_Addprefix(j, prefix)~
	END;~
	IF trace THEN MsgBox("Added prefix '"&prefix & "_' to " & n & ' objects in module ' & (Identifier OF m));~
END
NodeLocation: 264,144,1
NodeSize: 104,16
NodeInfo: 1,1,1
WindState: 2,188,499,797,668

Function ACP_Remove_prefix_mo(m: Object)
Title: Remove_prefix_mod(m)
Description: Remove prefix from all objects in module m, and recursively downwards, excluding Excluded_module.
Definition: MetaVAR o[] := ACP_Submodules(m) DO ACP_Remove_prefix(o)
NodeLocation: 264,192,1
NodeSize: 104,16
NodeInfo: 1,1,1
WindState: 2,286,395,550,397

Function ACP_Isletter(c: Text)
Title: IsLetter(c)
Description: Returns true if c is a single letter character, otherwise false.
Definition: VAR n := Asc(TextUppercase(c));~
TextLength(c) = 1 AND n >= Asc('A') AND n <= Asc('Z')
NodeLocation: 544,239,1
NodeSize: 80,16
NodeInfo: 1,1,1
WindState: 2,615,169,476,224

Variable ACP_Isletter_tester
Title: Isletter tester
Definition: INDEX v :=['a', 'abc', 'A', '', '124', '_', 'A_', '$'];~
ACP_Isletter( v )
NodeLocation: 752,240,1
NodeSize: 96,16
ValueState: 2,40,50,416,303,0,MIDM

Function ACP_Isdigit(c: Text)
Title: IsDigit(c)
Description: Returns true if c is a single numerical digit, otherwise false.
Definition: VAR n := Asc(TextUppercase(c));~
TextLength(c) = 1 AND n >= Asc('0') AND n <= Asc('9')
NodeLocation: 544,191,1
NodeSize: 80,16
NodeInfo: 1,1,1
WindState: 2,615,169,609,340

Variable ACP_Isdigit_tester
Title: Isdigit tester
Definition: INDEX v :=['a', '0', 'A', '', '1', '_', '9', '99'];~
ACP_Isdigit( v )
NodeLocation: 752,192,1
NodeSize: 96,16
ValueState: 2,40,50,416,303,0,MIDM

Function ACP_Prefix_from_obj(o: Object)
Title: Prefix_from_obj(o)
Description: If the identifier of object o has a prefix, i.e. the first one or two characters followed by underscore '_', it returns those first one or two characters. If it does not have '_' as the 2nd to 4th character it returns an empty text.
Definition: VAR name := Identifier o;~
IF SelectText(name, 2, 2) = '_' THEN SelectText(name, 1, 1) ~
ELSE IF SelectText(name, 3, 3) = '_' THEN SelectText(Name, 1, 2) ~
ELSE IF SelectText(name, 4, 4) = '_' THEN SelectText(Name, 1, 3) ~
ELSE ''
NodeLocation: 264,32,1
NodeSize: 104,16
NodeInfo: 1,1,1
WindState: 2,731,381,679,493
DisplayOutputs: Variable ACP_Prefix_by_module

Function ACP_Addprefix(o: Object; prefix: Text)
Title: Addprefix(o, prefix)
Description: Add a prefix (a letter followed by 0 to 2 letters or numbers) followed by underscore "_" to the start of the identifier of object o.  If it already has a prefix, it replaces it with the new prefix. It removes any trailing characters that would otherwise make the identifier longer than 20 chars. ~
Returns 1 if it added a prefix, 0 if it didn't because it already had that prefix.~
~
If that would create an identifier that duplicates an existing identifier, it will fail -- i.e. do nothing except leave an error in typescript.
Definition: VAR id := Identifier OF o;~
VAR old_prefix := ACP_Prefix_from_obj(o); ~
IF old_prefix = prefix THEN 0~
ELSE BEGIN~
	id := prefix & '_' & SelectText(id,  IF old_prefix='' THEN 1 ELSE 2 + TextLength(old_prefix));~
	IF TextLength(id) > 20 THEN id := SelectText(id, 1, 20);~
	ACP_Renameobj(o, id);~
       1~
END
NodeLocation: 264,88,1
NodeSize: 104,16
NodeInfo: 1,1,1
WindState: 2,768,237,853,471

Variable ACP_A234567890123456
Title: Test variable
Definition: 99
NodeLocation: 600,32,1
NodeSize: 64,20
WindState: 2,1144,131,476,224

Variable ACP_Prefix_from_test
Title: Prefix from test
Description: dfgsdfgsdfgsdfgsdfgsdfgsdfgdfgsdfgsdfgsdfgsdfgsdfgsdfgsdfgsdfgsdfgsdfgsdfgsdfgsdfgsdfg
Definition: ACP_Prefix_from_obj(ACP_A234567890123456)
NodeLocation: 456,32,1
NodeSize: 64,20
WindState: 2,894,83,822,250
ValueState: 2,935,316,416,303,0,MIDM

Variable ACP_Trace_Renaming
Title: Trace Renaming
Description: Check to show a message box each time an object is renamed. Useful for tracing the operation of applying prefixes.
Definition: Checkbox(0)
NodeLocation: 80,288,1
NodeSize: 64,20
Aliases: FormNode ACP_New1863547779

Button ACP_test_Prefix__mod
Title: test Prefix_ module()
Description: Click to test Prefix_module()
NodeLocation: 464,92,1
NodeSize: 64,20
OnClick: ACP_Prefix_module(Handle(ACP_Prefixer_functio), 'Pre')

Function ACP_IsaPrefix(t: Text)
Title: IsaPrefix(t)
Description: Returns true if t is a valid prefix, i.e. is text starting with a letter, followed optionally by one or two letters or digits.
Definition: VAR n :=  TextLength(t);~
IF n>3 OR n=0 THEN FALSE~
ELSE IF NOT ACP_Isletter(SelectText(t, 1,1)) THEN FALSE~
ELSE IF n=1 THEN TRUE~
   ELSE BEGIN~
       VAR c2 := SelectText(t, 2, 2);~
       ACP_Isletter(c2) OR ACP_Isdigit(c2)~
END
NodeLocation: 544,144,1
NodeSize: 80,16
NodeInfo: 1,1,1
WindState: 2,664,231,615,437

Variable ACP_Test_Is_a_prefix
Title: Test Is_a_prefix
Definition: INDEX t := ['', '1', 'A', 'a1', 'A_', 'xxx', 'Xy', '1A', 'x'];~
ACP_IsaPrefix(t)
NodeLocation: 752,144,1
NodeSize: 96,16
ValueState: 2,421,193,416,303,0,MIDM

Variable ACP_Trace_prefix
Title: Trace prefix
Description: Check if you want to know how many objects have a prefix added in each module.
Definition: Checkbox(1)
NodeLocation: 80,144,1
NodeSize: 64,20

Button ACP_Rename_x
Title: Rename x
NodeLocation: 440,288,1
NodeSize: 48,24
OnClick: ACP_Renameobj(Pre_a, 'a')

Close ACP_Prefixer_functio

Index ACP_Modules1
Title: Modules
Description: Generates a list of all separately filed modules, which are considered as candidates for applying the Prefixer -- i.e. modules with class Model, LinkModule,or LinkLibrary. Click button "Update formal Modules" to recalculate this.
Definition: ACP_reset;  ~
ACP_Submodules1(ACP_Top_model)
NodeLocation: 232,96,1
NodeSize: 64,24
WindState: 2,235,734,688,436
ValueState: 2,1453,70,800,609,0,MIDM

Decision ACP_Select_a_module1
Title: Select a module
Description: Select a module (main model or separately filed module).~
You can apply the Prefixer to any separately filed module (Class LinkModule) including a separately filed library (Class LinkLibrary), or Model.
Definition: Choice(ACP_Indented_modul1,75,0,result:ACP_Module_by_indent)
NodeLocation: 376,136,1
NodeSize: 64,24
WindState: 2,431,369,634,324
Aliases: FormNode ACP_New521370499

Variable ACP_Summary_module_r
Title: Summary module review
Description: Sums for module and its submodules, the total number of objects, modules, and those missing descriptions, titles, units, definitions.
Definition: Metavar m[] :=  ACP_Select_a_module1 DO ACP_Summary_sum_modu(m)
NodeLocation: 376,296,1
NodeSize: 64,24
ValueState: 2,171,379,227,287,0,MIDM
ReformVal: [Null,ACP_Module_review_fi]

Variable ACP_Review_by_submod
Title: Review by submodule
Description: Review of module and submodules including number of objects, submodules, UI nodes, and variables missing descirptions, titles, units, definitions.
Definition: Metavar m[] :=  ACP_Select_a_module1 DO ACP_Summary_of_submo( m)
NodeLocation: 376,224,1
NodeSize: 64,24
ValueState: 2,22,555,1416,301,0,MIDM
ReformVal: [ACP_Module_review_fi,ACP_Modules1]

Variable ACP_Prefix_by_module
Title: Prefix by module
Description: Shows current prefix by module extracted from the identifier of the module itself.
Definition: IT_Prefix_from_obj(m)
NodeLocation: 216,40,1
NodeSize: 64,24
WindState: 2,520,603,476,224
ValueState: 2,85,459,433,354,0,MIDM
DisplayInputs: Object Object, Object Function, Function ACP_Prefix_from_obj

Variable ACP_Prefix_for_this_
Title: Prefix for this module
Description: Prefix for to apply to the selected module, extracted from the identifier for this module.  If it's empty or you want to change the prefix, you may type a new prefix into this field. It should be a letter, optionally followed by a second letter or digit.
Definition: 'ACP'
NodeLocation: 512,56,1
NodeSize: 64,24
WindState: 2,28,54,642,283
ValueState: 2,565,590,474,393,0,MIDM
Aliases: FormNode ACP_New1058241411

Close ACP_IT_prefixer_deta

Button ACP_IT_Apply_prefix
Title: Apply prefix
Description: Click to apply this prefix to the identifiers of all objects in the selected formal module. If they already have a prefix, it will leave them as is. If they have a different prefix, it will replace the prefix with this new one. It assumes that any separately filed modules (or libraries) that it contains are Formal modules, and it will not apply the prefix to them.
NodeLocation: 392,100,1
NodeSize: 64,20
WindState: 2,661,404,732,447
OnClick: METAVAR m[] := ACP_Select_a_module1~
DO ACP_Prefix_module(m, ACP_Prefix_for_this_)

Text ACP_IT_caveats
Description: Please use this to apply appropriate prefix to each formal module in Storage VET before uploading it for sharing to avoid name collisions.
NodeLocation: 328,96,-1
NodeSize: 320,88
WindState: 2,0,-23,1025,641

Button ACP_Update_module_li
Title: Update module list
Description: Click to refresh the list of separately filed modules, available to apply the Prefixer. You may want to refresh this list after you add a new formal module, after you change its identifier manually, or change the class of a module to be separately filed (a LinkModule or LinkLibrary). This updates the list of formal modules available to the Prefixers.
NodeLocation: 560,64,1
NodeSize: 64,24
WindState: 2,806,543,727,413
OnClick: ACP_reset := NOT ACP_reset

FormNode ACP_New1863547779
Title: Tracing_Rename
Definition: 0
NodeLocation: 552,104,1
NodeSize: 88,16
Original: ACP_Trace_Renaming

FormNode ACP_New521370499
Title: Select a module
Definition: 0
NodeLocation: 252,64,1
NodeSize: 228,16
NodeInfo: 1,,,,,,,280
Original: ACP_Select_a_module1

FormNode ACP_New1595112323
Title: Missing descriptions
Definition: 1
NodeLocation: 252,152,1
NodeSize: 228,16
Original: ACP_IT__descriptions

FormNode ACP_New1058241411
Title: Prefix for selected module
Definition: 0
NodeLocation: 172,96,1
NodeSize: 148,16
Original: ACP_Prefix_for_this_

Button ACP_ACP_prefix
Title: Add "ACP" prefix
Description: Click to add 'ACP_' as a prefix to the identifiers of all objects in the ACP Styles library, to prevent them from clashing with identifies in models that use this library.
NodeLocation: 116,212,1
NodeSize: 76,20
OnClick: ACP_Prefix_module(Handle(ACP_styles), 'ACP', trace: 1)

Button ACP_Pre_prefix_to_Pr
Title: Add "Pre" prefix to Prefixer library
Description: Click to add 'ACP_' as a prefix to the identifiers of all objects in the ACP Styles library, to prevent them from clashing with identifies in models that use this library.
NodeLocation: 116,264,1
NodeSize: 76,24
OnClick: ACP_Prefix_module(Handle(ACP_styles), 'ACP', trace: 1)

Close ACP_Prefixer_library

Picture ACP_CSV_Mar
Title: csv 
Description: Click to download data as a csv file (comma-separated values).
NodeLocation: 316,316,-2
NodeSize: 20,28
NodeInfo: 1,,,,1,1,1,,1
WindState: 2,390,132,720,350
Pict: (000000000000002C00180004EA04000089504E470D0A1A0A0000000D49484452000000180000002C08060000007F9C7843000000017352474200AECE1CE90000000467414D410000B18F0BFC6105000000097048597300000EC300000EC301C76FA8640000046F494441545847ED555B4C1C65149E17DB4A5192A6AD46D31A5F34F192A82F9AD107131F7CA91A63D33EF86660DA2A15BC63B92D2C041BA82E97B6C15668A91A5A2DD8569616D38642582C59ACB4B4828328420B96CB02BBCB65D9E5F39C7F66767796A517B3B52F7CC9C9CECC39FFF79DF39FF3FF2BE136E3CE0BCCCEF9D1F25B0F367E51817BB66661595206E2944CBC682D83FD974ECCF8E6F4C8E8B82981A6CB2A5EDBF515E2B7660B81BB4940CE29C509E7C5D8089CBDFC3B5EDDB5DF2C6029C5F1580ABCB224B0189604EE8C40607E1E73FE007C7E3F3C33B33873B11B1B8AF691009DE4441248CAC473D925A86DEB807B7A46C4717C2030AF3384B040609EC83D53D3E8ECEB476B570F1A2F7561CFA946BC905B8AB82D9AC00A127832AD1085C77E426367171C14F76B6F1F5C6E8F482E5CC624C00E16E8B9721569DFFC808DC595626B98FCC1943C2C27E2BB488045D624E7E2D9EC6251D91BB60AA4547E0767F71F54454070185820C019A80357F1D69E4358976245FC964CB1E706B961CBE89D2B59A964E1FEEDB9789D84DAA812FFF50418EC7479BCA87138F172C15EAC7E276701B961FC3D615B3635BC18FB1B9AF08F6BE2FA5B64C04F0D1B1E9F40F9C9B378DE5282049E9E2802F1D493A77614A1E0683DFAAF8D50A3FD3A43085105B80A1F8DA77A65089FD59CC4D3E99FE3DE08919544FEE8C73BF1C9D7B5E8A006CFF87C22FB4848ACCA19F3DE71830CB0082FE2C51F56D5E0918F766205F58245786BD6BF978FC4F26FD14267C44BA31ABEEFFCCC7CCC2BB5A97FE29CFA17CEF7FE8DC1B171D32CF3B39B46B6F952371422E349E2CCD726E760B3AD1275CE0B623445638D35443E3CE1C685BE01B411AFF466C9016C2AA942D297D5A86BEFA4936B3E995CD584D78B7A678798948728F397F276A3BAE91C46C62705793878479AE91F30F5600D369556415A9F6CC1DAED563C965684F2D30E4CCFFA4C5360943B3AE9466D6B3B522B8EE0E019070647C70459F8D63038C1A33F9FA7BFD432DCF76E1EA455493BC4343CFC4101763734638A052216315864D23B85A151175C931E8D5CF719E0757C371D76B4E3990C9BB8BB4C0265A79AE1A5BB47CC7284F137D138DDB83FD1627830AA5B2204E2E834AE4BCD477E6D037A06AFA17F640C0323AE5B365ED73B348CBDB4138F7F5A24EE2E21C0B7E3AAB72DD850B80F99877F44CEF7F5FFD9B28ED46173F1013C4013C7632DAD51D2E94ED16E483E4CABE91263E3CBEC56CD589BB0CD42F757169D970C484FBC6FA50A4227940F522C8CB99627A6433AD4D88ABCE3A7917B2CC6469C56FA8D7A17C5124B0237C4FF21A0C2A6C89024493359814DD5BD04D5AE40367CBADFAEFB559BB64E0E5FC07CB216ABD849C078311B9188589B997C31BF6C235A1DC1355A8C147C11112AEC8A4622B2A2EC0561384104B4783958B5693D819EE903D712157628E115CA32149B1D6AB89A9E844648F12236247803010DAADD26FA2407C542044152AAD2AEF7249C2FB845C112A30485606EA001A3D98685FB1669B29EA1D183C5FC064CC3A00F808E9B1B53531FCC7E0391CD35709B0F1AF02FFB076EE26C9056FE0000000049454E44AE426082)
NodeFont: Century Gothic,12
OnClick: Local result := WriteTextFile(Market_Potential_Tit[Market_Potential_Qua = Market_Potential_Qu1] & '.CSV', ~
	MakeCSV(Market_potential_Exp, Market_Indices, ~
		Market_potential_Exp.j, Market_Indices), ~
	warn: False);~
DownloadFileToClient(result)

Picture ACP_XLS_Mar
Title: xls
Description: Click to download data as an .xls file (Excel format).
NodeLocation: 364,316,-2
NodeSize: 20,28
NodeInfo: 1,,,,1,1,1,,1
WindState: 2,765,125,832,585
Pict: (000000000000002C00180004EA04000089504E470D0A1A0A0000000D49484452000000180000002C08060000007F9C7843000000017352474200AECE1CE90000000467414D410000B18F0BFC6105000000097048597300000EC300000EC301C76FA8640000046F494441545847ED955D4C1C5514C7E7C5B65294A469ABD1B4C6174DFC48D417CDE883890FBE548DB1691F7C33306D950A7E63F95A580836501D3EDA065BA1A56A68B5605B595A4C1B0A61B104ACB4B4828328420B968F0576978F65E1EF397776767766B7A4356B6A4CFFC9C9EECEDCFBFFDD73EEB97725FCCBBAF580B9793F5A7EE9C5C6CF2A70D7D62C2C4BCA409C9289E7ED6570FCD48559DF7C606474DD10A0E9B28657767D81F8ADD902702701E49C529C68BF181BC0D9CBBFE2E55DFBCD005B298EC712F0D26DC0F5741B706B000B8B8B98F72FC0E7F7C3333B8733177BB0A1681F01E8242712202913CF6497A0B6AD13EE9959318EC72F2C2C061C428A002C92B9677A065DFD0368EDEE45E3A56EEC39D588E7724B11B74507AC20C0E36985283CF6031ABBBAE1A4713FF7F5C3E5F688C585634C007EC180DE2B5791F6D577D8585C294AC3E6F7A7E4613919DF410086AC49CEC5D3D9C522B3D7D40AA4547E83F69EDF288B05E1612802C02BD006AFE28D3D87B02EC58EF82D99A2E686B911CBE83767B252C9C2BDDB73F12A81DA2813FF520016BF7479BCA871B6E3C582BD58FD564E84B911FC3C615B366D7831F63734E12FD7E4D22532E4A70D1B999844F9C9B378D6568204EE9E288078DA93277614A1E0683D06AE8DD246FB030E21450570163E6A4FEDCA303EA9398927D33FC5DD16C84A327FF8C39DF8E8CB5A74D206CFFA7C62F556494CE51573ED78830C318427F1E4F7AB6AF0D0073BB182F682215C9AF5EFE423B1FC6BB4D019F152AB86D79DBFB31FFB4A6DDAEF38A7FD81F37D7F62687CC2D4CBFCDD4D2DDB7CA9070A997127F1CAD726E760B35A89BAF60BA235C5C61A73C87C64D28D0BFD8368235FE9F59203D8545285A4CFAB51D7D14527D77C3239AB49AF17F5ED9DA2531EA095BF90B71BD54DE7303A3125CCC3C51569A67FC0D48335D8545A05697DB20D6BB7DBF1485A11CA4F3B3133E733758191EED8941BB5AD1D48AD388283679C181A1B1766E1A561F1028FFE789EFE52CB70CFDB79905625ED10DDF0E07B05D8DDD08C69065826B11832E59DC6F0980BAE298F6E1E786788E7F1DD74D8D981A732547177990065A79AE1A5BB47F4B225F899D8B840F0FE441BC38D51DD6201C4D1695C979A8FFCDA06F40E5DC3C0E83806475D371D3CAF6F78047BA9128F7E5C24EE2E01E0DB71D59B366C28DC87CCC3DF23E7DBFA7F1C5947EAB0B9F800EEA38EE3B696D628E974A7E837241FA6D5748971F06576B361CC4DD866A3FB2B8BCE4B06A4C7DEB55306A113CA072916C15ECB13D3211D6A6C45DEF1D3C83D16E3204F3B7D46BD8B62A9FF12C001459220490A7DBB71FD9F000E85269381AC42130F34A8321B4A5084632440A339B278160899DEE993833265E050F481B2AA4153657D92EECE6FCD004D359B07C39CA1A5448649B4C1164044C6D115B107C1955304172F642D11FD0E945007C9505407B4A54AC432CA24C244B00274690E15AA22430EC26450858332038CB4699051DF10233A20246B53E80A0358060461612509FF1D7C6F8DEB6410D935EC1198A4132332106D6ADA07C564CE8AD883D80AF81B63C380F91BA0B3260000000049454E44AE426082)
NodeFont: Century Gothic,12
OnClick: Local numOfColumns := Size(Market_Indices);~
Index excelcol := Excel_Columns;~
excelcol := excelcol[@excelcol=1..numOfColumns];~
Local firstCol := Slice(excelcol, 1);~
Local lastCol := Slice(excelcol, numOfColumns);~
~
Local rowLength := Size(Market_potential_Exp.j);~
Local rowOffset := rowLength + 1;~
LocalIndex rowIndex := 1..rowLength;~
SS_SetRange(This_spreadsheet, 'Sheet1!' & firstCol & '1:' & lastCol & '1', Market_columnArray, Market_columnIndex, Index_1);~
SS_SetRange(This_spreadsheet, 'Sheet1!' & firstCol & '2:' & lastCol & rowOffset, Market_potential_Exp, Market_Indices, Market_potential_Exp.j);~
~
Local filename := Market_Potential_Tit[Market_Potential_Qua = Market_Potential_Qu1] & '.XLS';~
~
{Save & Close XLSX file}~
SS_Close(This_spreadsheet, filename);~
SS_reset_files := NOT SS_reset_files;~
~
DownloadFileToClient(filename)

Module ACP_Style_lib_detail
Title: ACP Style lib details
Description: ACP Style library variables and functions.
Author: Max Henrion
Date: Mon, Jul 5, 2021 2:57 PM
NodeLocation: 96,32,1
NodeSize: 88,24
DiagState: 2,3,17,1151,699,23,,

Decision ACP_node_radius
Title: Set node corner radius to
Units: pixels
Description: Select the radius for rounded corners as the default for the node types selected  below. ~
It usually looks best with 8 to 16 pixels.~
Select 0 for square corners~
Select null to use the system default.
Definition: Choice(Self,1,0)
NodeLocation: 680,264,1
NodeSize: 80,20
WindState: 2,108,44,858,593
Aliases: Alias Al298739523, FormNode ACP_New1855159171
{!40300|DomainExpr: Discrete(0,4,8,12,16,20,24,Null,type:'number')}
OnChange: ACP_Set_att_field(Nodeinfo, ACP_obj_types_w_ra, self, 'Corner radius')
{!60005|Att_AttsToShow: Object Object, Object Attribute, Attribute OnChange}

Decision ACP_object_types
Title: for object types
Description: Select which types of object you want to set the default radius for rounded corners.
Definition: MultiChoice(Self,1,allowNone:0,returnList:1)
NodeLocation: 680,216,1
NodeSize: 80,20
WindState: 2,98,82,720,350
ValueState: 2,912,415,416,303,,MIDM
Aliases: Alias Al1372481347, FormNode ACP_New512981891
{!40300|DomainExpr: Discrete('Text','Framenode','User inputs and outputs','Button',type:'text')}
MetaOnly: 1
OnChange: ACP_Set_att_field(Nodeinfo, ACP_obj_types_w_ra, ACP_node_radius, 'Corner radius')

Variable ACP_is_running
Title: ACP is running?
Description: True if the model is running under ACP -- False if running in desktop Analytica (DTA) or ADE. Used to control features that work differently in ACP vs DTA.
Definition: SelectText(AnalyticaEdition, 1, 3) = "ACP"
NodeLocation: 104,608,1
NodeSize: 80,20
NodeInfo: 1,,,,,,,0,,,,,,0
WindState: 2,98,82,641,366

Constant ACP_Newline
Title: Newline
Definition: Chr(13)
NodeLocation: 104,424,1
NodeSize: 80,20

Module ACP_Dashboard_sizes
Title: Dashboard sizes
Author: Karen
Date: Fri, Dec 18, 2015 10:59 AM
NodeLocation: 472,56,1
NodeSize: 88,16
DiagState: 2,398,199,926,207,23,,
FontStyle: Arial,15

Index ACP_Screen_Resolutio
Att_PrevIndexValue: ['1920 x 1080','1600 x 900','1366 x 768','1280 x 1024','1280 x 800','1024 x 768']
Title: Screen Resolution
Units: pixels
Description: List of preset screen resolutions for minimum ACP diagram size
Definition: ['1920 x 1080','1600 x 900','1366 x 768','1280 x 1024','1280 x 800','1024 x 768']
NodeLocation: 96,32,1
NodeSize: 88,24
WindState: 2,98,82,684,500
{!60005|Att_AttsToShow: Object Object, Object Attribute, Attribute OnClick}

Constant ACP_Diagram_size_tab
Title: Diagram size table
Units: pixels
Description: Maximum ACP diagram size width and height by Resolution and ACP Navigation Style
Definition: Table(ACP_Screen_Resolutio,ACP_XY,ACP_Nav_style)(~
1905,1905,1905,1635,~
810,840,810,840,~
1585,1585,1585,1315,~
635,660,635,660,~
1350,1350,1350,1075,~
505,540,505,540,~
1265,1265,1265,990,~
755,785,755,785,~
1265,1265,1265,990,~
525,555,525,555,~
1010,1010,1010,735,~
490,520,490,520)
NodeLocation: 304,96,1
NodeSize: 88,24
WindState: 2,120,189,533,367
DefnState: 2,352,672,925,417,0,DFNM
ValueState: 2,536,538,416,303,0,MIDM
ReformDef: [ACP_XY,ACP_Screen_Resolutio]
ReformVal: [0,ACP_Screen_Resolutio]
Att_EditSliceState: [ACP_Nav_style,1,ACP_Screen_Resolutio,1,XY,1]

Index ACP_Dash_size_option
Title: Dash size options
Units: pixels
Description: List of preset screen resolutions
Definition: Concat(['Browser window','Fit main model','Fit all dashboards', 'Custom'], ACP_Screen_Resolutio)
NodeLocation: 96,168,1
NodeSize: 88,24
WindState: 2,936,269,632,512
ValueState: 2,1184,634,416,303,,MIDM

Function ACP_ResizeMinResolut()
Title: ResizeMinResolution()
Description: Resize the Diagram Window(s) to the selected minimum resolution (or for 'Custom' resolution to match size of Main Module diagram) for all modules that will become tabs for tab styles.
Definition: Local wh := ~
   IF ACP_Screen_size='Custom' ~
	THEN ACP_Get_att_field(DiagState, ACP_Top_model, ACP_XY)~
   ELSE ACP_Diagram_size_tab[ACP_Nav_style=ACP_Navi_style, ~
				ACP_Screen_Resolutio=ACP_Screen_size];~
ACP_Set_att_field(DiagState, (ACP_top_modules), wh, ACP_XY)
NodeLocation: 536,32,1
NodeSize: 104,24
NodeInfo: 1,1,1
WindState: 2,1112,287,795,571

Variable ACP_ResizeMin_res
Title: eg ResizeMin res
Definition: ACP_ResizeMinResolut()
NodeLocation: 768,32,1
NodeSize: 88,24
ValueState: 2,824,658,416,303,,MIDM

Function ACP_SetDashSize(wh: Text Atom; margin: = 0)
Title: ACP_SetDashSize(wh)
Description: Resize all Dashboards to the value wh from Dash_size_options.~
	Fit main model: Fit to enclose all nodes on the main model diagram. (First dashboard)~
	Fit all dashboards: Fit to enclose nodes on the largest dashboard.~
	Custom: Use the window size of the main model diagram.
Definition: ACP_style_set('Use_top_diagram_size', wh<>'Browser window');~
IF wh='Browser window' THEN ACP_dashboard_size := 'unlimited'~
ELSE BEGIN~
	Local dashSize:= ~
	   IF wh='Custom' ~
			THEN ACP_Get_att_field(DiagState, (ACP_Top_model), Array(ACP_XY, ['W', 'H']))~
		ELSE IF wh='Fit main model' ~
			THEN ACP_DiagramMax((ACP_Top_model), margin)~
		ELSE IF wh='Fit all dashboards' ~
			THEN Max(ACP_DiagramMax((ACP_top_modules), margin), ACP_top_modules)~
		ELSE ACP_Diagram_size_tab[ACP_Nav_style=ACP_Navi_style, ~
				ACP_Screen_Resolutio=ACP_Screen_size];~
	ACP_dashboard_size := JoinText(dashSize, ACP_XY, ' x ')&' ';~
	ACP_Set_att_field(DiagState, (ACP_top_modules), dashSize, Array(ACP_XY, ['W', 'H']))~
END
NodeLocation: 536,168,1
NodeSize: 104,24
NodeInfo: 1,1,1
WindState: 2,1109,4,760,622

Variable ACP_dashboard_size
Title: Dashboard size
Description: ACP dashboard (Diagram) size in pixels designed to fit the selected screen size.~
This is a bit smaller than the screen size to allow for the edges of the browser window, the browser tabs and menus at the top, and the area with logos across the bottom.
Definition: 'unlimited'
NodeLocation: 776,168,1
NodeSize: 88,24
ValueState: 2,109,900,416,303,,MIDM
Aliases: FormNode ACP_New1586723715

{!50500|ArrowClass ACP_Arrow147420035}
{!50500|Att_HeadNode: ACP_SetDashSize}
{!50500|Att_TailNode: ACP_Screen_Resolutio}
{!50500|Att_ArrowWayPoints: [Null,Null,0.1694915254237288,0.6470588235294118,0.6440677966101694,0.7647058823529411]}
{!50500|Att_ArrowProperties: 1}

Alias ACP_New1418951555
Title: Screen size
Definition: 1
NodeLocation: 304,168,1
NodeSize: 88,24
Original: ACP_Screen_size

Alias ACP_New882080643
Title: Top modules
Definition: 1
NodeLocation: 536,96,1
NodeSize: 88,24
Original: ACP_top_modules

{!50500|ArrowClass ACP_Arrow1340470851}
{!50500|Att_HeadNode: ACP_ResizeMinResolut}
{!50500|Att_TailNode: ACP_New1418951555}
{!50500|Att_ArrowWayPoints: [Null,163.68615281789423,0.4482758620689655,0.35294117647058826,0.5862068965517241,0.6470588235294118]}
{!50500|Att_ArrowProperties: 1}

{!50500|ArrowClass ACP_Arrow1008072259}
{!50500|Att_HeadNode: ACP_ResizeMinResolut}
{!50500|Att_TailNode: ACP_Diagram_size_tab}
{!50500|Att_ArrowWayPoints: [Null,167.52954124499544]}

Close ACP_Dashboard_sizes

Decision ACP_Outline_view
Title: Outline view on left
Description: Check the box to show an expandable Outline tree of modules on the left side of the ACP window. The Outline  makes it easy to navigate a model with a multilevel module hierarchy. By default, it appears for the Navigation style "Outline" (surprise!) and not for the other navigation styles. But you can use this option to show the Outline with any other style to help users navigate a large model. You don't need it for a small models, or when you want to hide  the details from ACP users.
Definition: Checkbox(0)
NodeLocation: 280,184,-5
NodeSize: 88,16
WindState: 2,698,99,655,653
Aliases: FormNode ACP_New781417347
AcpStyles: Show_outline: No
OnChange: ACP_style_set('Show_outline',  self);~
LocalAlias top := (ACP_Top_model);~
IF NOT ACP_is_running THEN ~
	IF self THEN ShowWindow(top, 'Outline')~
	ELSE CloseWindow(top, 'Outline');
{!60005|Att_AttsToShow: Object Object, Object Attribute, Attribute OnChange}

Decision ACP_Hide_Save_butn
Title: Hide "Save" button
Description: Check to hide the "Close" Button on top right of teal bar.~
~
This functionality may not have been actually implemented.  So no check box on the top level control panel for now.
Definition: Checkbox(0)
NodeLocation: 872,432,1
NodeSize: 80,16
WindState: 2,55,0,662,345
Aliases: FormNode ACP_New1184070531
OnChange: ACP_style_set('show_save_button',  NOT self)

Decision ACP_ToolbarTabs
Title: Toolbar tabs
Description: Check the box to display Toolbar tabs across the top of the window, including  tabs for Diagram, Object, Edit Table, Table, and Graph. This toolbar is similar to the desktop Analytica toolbar. It is only available when the Main style is "Outline".
Definition: Checkbox(0)
NodeLocation: 472,232,-5
NodeSize: 88,16
NodeInfo: 1,,,,,,,,,,,0
WindState: 2,476,175,638,508
Aliases: FormNode ACP_New1720941443
AcpStyles: show_tabs: No
OnChange: ACP_style_set('Show_tabs', self)~
{ACP_Show_node(Handle(ACP_ParentButtonChec), self, 'UserInputs');}~
{ACP_setTabs(ACP_Show_MsgBox_Swit)}

Decision ACP_Show_the_model_t
Title: Show the model title
Description: Show the model title in the teal bar across the top. Normally, you will want to leave this checked so end users know what model they are using.
Definition: Checkbox(1)
NodeLocation: 1056,104,5
NodeSize: 80,20
WindState: 2,1470,96,524,551
Aliases: FormNode ACP_New982743939
OnChange: ACP_style_set('Show_model_title', self)

Decision ACP_Shadows
Title: Shadows
Description: Check box to show a shadow behind each node in ACP (not supported in desktop Analytica).
Definition: Checkbox(0)
NodeLocation: 680,112,1
NodeSize: 80,20
WindState: 2,102,83,1077,439
ValueState: 2,838,688,416,303,0,MIDM
Aliases: FormNode ACP_New244546435
AcpStyles: node_drop_shadow: Yes
OnChange: ACP_style_set('Node_drop_shadow', ACP_Shadows);~
ACP_Show_node(ListOfHandles(ACP_Decision_exampl1, ACP_Variable_exampl1), self AND NOT ACP_is_running);~
IF self AND NOT ACP_Is_running THEN MsgBox('Node shadows will appear in ACP, but are not supported by desktop Analytica (except for the two nodes here!).', 0, 'Notice');
{!60005|Att_AttsToShow: Object Object, Object Attribute, Attribute OnChange}

Decision ACP_Bevels
Title: Bevels
Description: Check box to show a 3-D bevel around each node in ACP (not supported in desktop Analytica).
Definition: Checkbox(0)
NodeLocation: 680,64,1
NodeSize: 80,20
WindState: 2,567,93,799,552
Aliases: FormNode ACP_New1318288259
AcpStyles: Bevel_node_border: No
OnChange: ACP_style_set('Bevel_node_border', self);~
IF NOT ACP_is_running THEN BEGIN~
		Local vars := ListOfHandles(ACP_Decision_example, ACP_Variable_example);~
		ACP_Set_att_field(NodeInfo, vars, self, 'Show bevel');~
		IF self THEN MsgBox('Node bevels will appear in ACP, but not in desktop Analytica (except for the two nodes here!).', 0, 'Notice');~
		END;~

{!60005|Att_AttsToShow: Object Object, Object Attribute, Attribute AcpStyles, Attribute OnChange}

Decision ACP_Lumina_logo_
Title: Lumina logo?
Description: Hides the Lumina logo at the top of ACP.  Also hides the tabs.
Definition: Checkbox(0)
NodeLocation: 872,472,1
NodeSize: 80,16
WindState: 2,1239,100,476,448
OnChange: ACP_style_set('show_logo', self)

Function ACP_Clean_newlines(t: Text orNull)
Title: Clean_newlines(t)
Description: Removes any leading or trailing white space (new line, space, or tab characters from text t, and replaces any multiple new lines chars with a single new line.
Definition: Textreplace(Texttrim(t), "\r[\r\n]+",  ACP_Newline, all: True, re: True)
NodeLocation: 472,424,1
NodeSize: 104,16
NodeInfo: 1,1,1
WindState: 2,372,73,823,357
{!60005|Att_AttsToShow: Object Object, Object Attribute, Attribute ParameterEnumeration}

Text ACP_Te33
Title: ACP Navigation styles
NodeLocation: 296,184,-12
NodeSize: 288,176
NodeInfo: 1,,,,1,1
WindState: 2,105,89,476,224
NodeFont: Arial Black, 15
AcpStyles: Show_description:30

Text ACP_Te9
Title: Diagram node style
NodeLocation: 684,184,-11
NodeSize: 92,176
NodeInfo: 1,,,,1,1
WindState: 2,1274,740,476,224
NodeFont: Arial Black, 15
AcpStyles: Show_description:30

Decision ACP_Show_dash_title
Title: Dashboard title
Description: Check the box to display the module title at the top of each dashboard. ~
Only usable with "Outline" Navigation style.
Definition: Checkbox(0)
NodeLocation: 280,272,-3
NodeSize: 88,16
WindState: 2,467,452,650,637
Aliases: FormNode ACP_New445873027
OnChange: ACP_style_set('Show_diagram_title', self);

Decision ACP_Banner_logo_and_
Title: Banner logo and tabs
Description: Check to display the logo and toolbar tabs, along with "Close model" and "Save" buttons .
Definition: Checkbox(0)
NodeLocation: 872,512,1
NodeSize: 80,16
WindState: 2,519,-17,578,548
Aliases: FormNode ACP_New1519614851
Script: ~

OnChange: ACP_style_set('show_banner', self)

Decision ACP_Auto_calc
Title: Auto calc
Description: Check this box to calculate the result (table or graph) of any variable immediately when you can see it in user output, tall node, or frame node, and recalculate it immediately after changing an input that influences it. It works in ACP and desktop Analytica.~
~
This "Auto calc" behavior is different from the default "lazy evaluation" where Analytica calculates results only when you clicks a "calc" button, or otherwise asks to view a result table or graph.  By default, it applues to all mid and prob values in browse mode.  If you want it to apply for mid but not prob values, or to apply it only to some variables but not others, use 'Set variables for Autocalc'.
Definition: Checkbox(0)
NodeLocation: 872,280,2
NodeSize: 80,20
WindState: 2,170,204,656,539
Aliases: Alias ACP_New2090040195
OnChange: ACP_Set_Autocalc((ACP_Diags_with_User_), acMid:self, ~
	acIndex:self, acProb: self, acEditMode: 0)

Index ACP_Nav_style
Att_PrevIndexValue: ['Outline','Top_diagram_only','Top_tabs','Side_tabs']
Title: ACP Navigation styles
Description: ACP navigation styles~
Removed 'Two top tabs', 'Two side tabs' until they are working in ACP3.
Definition: ['Outline','Top_diagram_only','Top_tabs','Side_tabs']
NodeLocation: 96,56,1
NodeSize: 72,16
WindState: 2,964,216,647,477
ValueState: 2,240,251,416,303,0,MIDM

Decision ACP_Navi_style
Title: Navigation style
Description: Select a style for navigating through dashboards (modules) in ACP:~
	Outline: Display an expandable outline of the modules on the left.~
	Top diagram only: Create a simple Web application with the top diagram as a single dashboard, with no tabs or outline. ~
	Top tabs: Display top modules as tabs across the top.~
	Side tabs: Display top modules as tabs down the left side.~
~
The ordering of the tabs reflects the arrangement of the module nodes in the top model, from left to right, and then top to bottom.
Definition: Choice(ACP_Nav_style,3,0)
NodeLocation: 280,56,1
NodeSize: 88,16
WindState: 2,209,66,874,778
ValueState: 2,869,523,416,303,0,MIDM
Aliases: FormNode ACP_New1452505987
Script: ~

{!40300|DomainExpr: Discrete(['Outline','Top_diagram_only','Top_tabs','Side_tabs'],type:'all')}
AcpStyles: Navigation_style: Top_tabs
OnChange: ACP_style_set('Navigation_style', self);~
~
{ For Navigation style 'Outline', set Outline view and ToolbarTabs on, and show options to select Toolbar tabs }~
ACP_Outline_view := (self = 'Outline');~
ACP_ToolbarTabs := (self = 'Outline');~
ACP_Show_node(ListOfHandles(ACP_ToolbarTabs), ~
	self='Outline' OR self='Top_diagram_only', what: 'UserInputs');~
~
ACP_Show_node(Handle(ACP_Outline_view), ~
	self<>'Side_tabs' AND self<>'Outline', what: 'UserInputs');~
{ For top and side tab views, show selected controls }~
ACP_Show_node(ListOfHandles(ACP_Show_modules_as_, ACP_Tab_color), 	self='Top_tabs' OR self='Side_tabs', what: 'UserInputs');~

{!60005|Att_AttsToShow: Object Object, Object Attribute, Attribute OnChange}

Text ACP_Te30
Title: ACP style functions
NodeLocation: 296,528,-12
NodeSize: 288,160
NodeInfo: 1,,,,1,1
WindState: 2,1274,740,476,224
NodeFont: Arial Black, 15

Decision ACP_IncludTop_As_Tab
Title: Include top level diagram as tab
Description: Check box to include the top model diagram as the first tab for "Side tabs" or "Top tabs".~
This is set automatically if you select (or deselect) the first item in "Show modules as Tabs".~
~
For Two top tabs or Two side tabs,this is currently required.
Definition: Checkbox(0)
NodeLocation: 280,144,1
NodeSize: 88,16
NodeInfo: 1,,,,,,,,,,,0
WindState: 2,500,262,873,345
ValueState: 2,40,50,400,300,0,MIDM
Aliases: FormNode ACP_Fo753125251
AcpStyles: Use_top_diagram_size: No
OnChange: ACP_style_set('Show_As_Tab', self)

Decision ACP_ShowIONodeButton
Title: Input/Output node button text
Description: Uncheck this to show Result/Calc/Edit table buttons without the text label in ACP.
Definition: Checkbox(1)
NodeLocation: 680,160,1
NodeSize: 80,20
WindState: 2,814,164,998,537
OnChange: ACP_style_set('ShowIONodeButtonText', NOT ACP_ShowIONodeButton)

Decision ACP_Screen_size
Title: Screen size
Units: pixels
Description: Select the minimum resolution screen size (in pixels) that you expect that end users will use to run this model in ACP in a web browser.~
	Browser window: Use the browser window size. Show scroll-bars if the diagram is bigger.~
	Fit main model: Select smallest size that shows all nodes in the ~
		diagram for the main (top) model.~
	Fit all dashboards: Select the smallest size that will fit all nodes in diagrams for all ~
		modules selected as tabs (dashboards).~
	 Custom: Use the current window size for the diagram of the top model, ~
		whether it is smaller or larger than 'Fit main model'.~
You need to click 'Reset' any time you move nodes or change the window size of the top diagram, since these changes don't propagate automatically.~
~
In desktop Analytica, selecting the Dashboard size here will automatically resize all Diagrams to the selected size (the top diagram, and its submodules)
Definition: Choice(Self,1,0)
NodeLocation: 472,104,1
NodeSize: 88,16
WindState: 2,737,92,759,737
Aliases: Alias ACP_New1418951555, FormNode ACP_New915635075
{!40300|DomainExpr: ACP_Dash_size_option}
OnChange: ACP_SetDashSize(self, ACP_Margin)
{!60005|Att_AttsToShow: Object Object, Object Attribute, Attribute Value, Attribute Att_AxisOrKeyTitle, Attribute OnGraphDraw}
{!60005|Att_AttsToHide: Object Object, Object Attribute, Attribute Outputs}

Decision ACP_Hierarchy_bar_ac
Title: Hierarchy bar across the top
Description: Check to show hierarchy bread crumbs with  ancestor modules , and parent module and across the top of each Diagram.  ~
~
In desktop Analytica you can also set this option in the "Show module hierarchy" checkbox in Edit menu > Preferences... dialog box.
Definition: Checkbox(0)
NodeLocation: 280,232,1
NodeSize: 88,16
WindState: 2,445,119,747,676
Aliases: FormNode ACP_New1989376899
OnChange: showhier := self;~
ACP_Show_dash_title := False; { Don't show the Diagram title, which would duplicate and conflict with the hierarchy bar. }~
IF ACP_is_running THEN MsgBox("With Tabs (across the top or side) the hierarchy bar appears only in submodules of main tabs.", 0, 'Warning');

Function ACP_style_set(tag: Text Atom; val: atom = True; obj: Optional Handle Atom)
Title: ACP_style_set(tag, val)
Description: Set AcpStyles attribute of object obj (defaults to top model) to tag with value val.~
If val i= 1 (True) (default if val is omitted) or 0 (False), it translates it to "Yes" or "No".~
If val is '' (empty text) or 'Default' it removes the tag entirely from ACPStyles, if it's there (if obj is a variable, it will now use the model default.)~
Otherwise, it sets the tag to val. For example~
	ACP_setStyle('Navigation_style', 'Outline')~
results in ACPstyles of the top model containing:~
    Navigation_style: Outline~
~
{ Replaces Toggle_AWP_Flag(), Set_AWP_tag(), Remove_AWP_Flag() and other functions in the old ACP Style library. }
Definition: ACP_style_reset := NOT ACP_style_reset;~
IF IsNotSpecified(obj) THEN obj := ACP_Top_model;~
Local styles := AcpStyles OF obj;~
IF styles=Null THEN styles := ACP_Default_style_va;~
val := IF val=0 THEN 'No' ELSE IF val=1 THEN 'Yes' ELSE val;~
styles := IF val=ACP_Default_style_va OR val='Default' THEN TextReplace(styles, tag&':'&'\s*[\w-]+',~
				'', caseInsensitive:True, re: True) { Remove the tag }~
			ELSE IF FindInText(tag&':', styles, caseInsensitive:True) ~
				THEN TextReplace(styles, tag&':\s*[\w-]*', tag&': '&val, 		caseInsensitive:True, re: True) {Replace value }~
			ELSE TextTrim( styles & ACP_Newline & tag&': '&val); { Append tag }~
AcpStyles OF obj :=  ACP_Clean_newlines(styles)
NodeLocation: 472,488,1
NodeSize: 104,16
NodeInfo: 1,1,1
WindState: 2,466,40,715,771

Decision ACP_Balloon_on_mouse
Title: Balloon on mouse over node
Description: Check this box to show a balloon next to a node with its title and description (and sometimes more) when you move the mouse cursor over the node.
Definition: Checkbox(0)
NodeLocation: 680,440,1
NodeSize: 80,20
WindState: 2,91,339,558,313
OnChange: ACP_style_set('show_hover_balloon', self)

Decision ACP_Balloon_delay
Title: Balloon delay
Units: seconds
Description: Set the delay time from when you move mouse over a node and when the information balloon appears. This delay prevents balloons from wildly appearing and disappearing when you move the cursor quickly across a diagram.
Definition: Choice(ACP_Balloon_delay_ch,6,0)
NodeLocation: 680,536,1
NodeSize: 80,20
WindState: 2,326,488,596,368
Aliases: FormNode ACP_New177437571
OnChange: ACP_style_set('Hover_balloon_delay', self*1000)

Index ACP_Balloon_delay_ch
Att_PrevIndexValue: [0,0.1,0.2,0.3,0.4,0.5,0.6,0.8,1,1.2,1.5,2]
Title: balloon delay choices
Definition: [0,0.1,0.2,0.3,0.4,0.5,0.6,0.8,1,1.2,1.5,2]
NodeLocation: 680,488,1
NodeSize: 80,20
WindState: 2,94,83,476,454

Decision ACP_Identifier_in_ba
Title: Identifier in balloon
Description: Check this box to show the identifier in the balloon when you hover the cursor over each node. This is useful when reviewing definitions of variables, which use identifiers -- not so much for standard end users. ~
~
It doesn't show the identifier when it's the same as the title (with underscores replacing spaces).
Definition: Checkbox(0)
NodeLocation: 680,584,1
NodeSize: 80,20
WindState: 2,305,442,727,381
Aliases: FormNode ACP_New1251179395
OnChange: ACP_style_set('Show_id_in_balloon', self)

Decision ACP_Definition_in_ba
Title: Definition in balloon
Description: Check to show the Definition in the balloon when you move the mouse cursor over the node of a variable, input or output. Useful when reviewing model details -- not so much for normal end users.
Definition: Checkbox(0)
NodeLocation: 680,632,1
NodeSize: 80,20
WindState: 2,241,106,779,778
Aliases: FormNode ACP_New714308483
OnChange: ACP_style_set('Show_definition_in_balloon', self)

Text ACP_Te10
Title: Balloon Help
NodeLocation: 684,528,-13
NodeSize: 92,160
NodeInfo: 1,,,,1,1
NodeFont: Arial Black, 15

Decision ACP_Node_highlight_e
Title: Node highlight effect
Description: Select the effect for highlighting a nodes when you move the cursor over it:  ~
	Outline:  A simple gray rectangle around the node (Recommended)~
	Glow: A glowing colored halo.~
	None
Definition: Choice(Self,1,0)
NodeLocation: 1056,432,1
NodeSize: 80,16
WindState: 2,170,30,476,441
{!40300|DomainExpr: Discrete('Outline','Glow','None',type:'text')}
OnChange: ACP_style_set('Show_hover_highlight', self='Outline');~
{ACP_style_set('Glow_hover_highlight', self='Glow');}~

{!60005|Att_AttsToShow: Object Object, Object Attribute, Attribute OnChange}

Text ACP_Te2003366275
Title: Rarely used
NodeLocation: 1056,184,-11
NodeSize: 88,176
NodeInfo: 1,,,,1,1
WindState: 2,1274,740,476,224
NodeFont: Arial Black, 15
AcpStyles: Show_description:30

Index ACP_top_modules
Att_PrevIndexValue: [Nexant_Model_Templat,Model_Details,Other_Input,Other_Output,NYPA_specific_output,NYPA_Solar_Storage,Standard_SPIDER_Inte,NYPA_Aggregate_Outpu,ACP_Styles,NYPA_Dropdowns,NYPA_Energy_Efficien,Old_NYPA,NYPA_Solar_Storage1]
Title: Top modules
Description: Potential ACP dashboards, i.e. top model and modules in the top model ~
(but not submodules in those modules), ordered from left to right.~
You can select which ones to include as ACP tabs in "Show modules as tabs".~
If you open ACP_styles library by itself (not inside another model), it includes only itself.
Definition: ACP_model_Reset;~
IF ACP_Top_model=Handle(ACP_Styles) THEN CopyIndex([ACP_top_model])~
ELSE BEGIN~
	METAIndex mods := #FindObjects(Class: Model, Module, Library,LinkModule, LinkLibrary);~
	mods := Subset((ISIN OF (mods)) = ACP_Top_model);~
	mods := ACP_Orderobjs(mods, 'Left to right');~
	Concat(ACP_Top_model, mods)~
END
NodeLocation: 96,104,1
NodeSize: 72,16
WindState: 2,1035,65,720,350
ValueState: 2,283,423,473,300,0,MIDM
Aliases: Alias ACP_New882080643
MetaOnly: 1

Decision ACP_Show_modules_as_
Title: Show modules as tabs
Description: Select the modules that you want to appear as a tab in ACP. ~
They may include the main model and its immediate submodules.~
~
Ctrl+A to select all of them.
Definition: MultiChoice(ACP_top_modules,6,8,9,11,13,allowNone:0,returnList:1)
NodeLocation: 280,104,1
NodeSize: 88,16
WindState: 2,652,183,923,518
Aliases: FormNode ACP_New831748995
MetaOnly: 1
OnChange: ACP_style_set('show_as_tab', '', ACP_top_modules); { Remove from all since Show_as_Tab is default behavior. }~
Local notTabs := #SetDifference(\ACP_top_modules, \self);~
ACP_style_set('show_as_tab', False, notTabs); { Don't show deselected modules as tabs }~
~
ACP_IncludTop_As_Tab := SetContains(\self, ACP_Top_model); { Show Top_model as tab if selected }~
IF ACP_Hide_nontab_modu THEN ACP_Show_node(ACP_top_modules, NOT SetContains(\notTabs, ACP_top_modules))

Function ACP_style_get(tag: Text Atom; obj: Optional Handle Atom)
Title: ACP_style_get(tag, obj)
Description: Get AcpStyles attribute tag of object obj (defaults to top model)~
If tag value is 'yes' it returns 1 (True). If 'No' it returns 0 (False), otherwise it returns the tag value as a text.~
If ACPStyles is empty or tag is missing, it returns Null.
Definition: ACP_style_reset;~
IF IsNotSpecified(obj) THEN obj := ACP_Top_model;~
Local styles := AcpStyles OF obj;~
IF styles=Null THEN Null~
ELSE IF FindInText(tag, styles, caseInsensitive: True) = 0 THEN Null~
ELSE FindInText(tag&':\s*(\d+|[\w-]+)',styles, caseInsensitive: True, re: True, subpattern:1, return: 'S')
NodeLocation: 472,544,1
NodeSize: 104,16
NodeInfo: 1,1,1
WindState: 2,362,116,964,820

Variable ACP_test_ACP_style_g
Title: Eg test ACP_style_get
Definition: ACP_style_get('Navigation_style', ACP_Top_model)
NodeLocation: 472,600,1
NodeSize: 80,20
ValueState: 2,724,407,416,303,,MIDM

Variable ACP_style_reset
Title: ACP_style_reset
Description: To reset ACP_style_get() after any ACP_style_set() call,~
and to reset
Definition: 0
NodeLocation: 104,544,1
NodeSize: 80,20

Text ACP_Te1923076995
Title: Not yet implemented
NodeLocation: 872,528,-11
NodeSize: 88,160
NodeInfo: 1,,,,1,1
WindState: 2,1274,740,476,224
NodeFont: Arial Black, 15
AcpStyles: Show_description:30

Decision ACP_Hide_nontab_modu
Title: Hide nontab module nodes
Description: Check this box to hide top level module nodes that you have deselected in "Show modules as tabs" in desktop Analytica as well as ACP.
Definition: Checkbox(0)
NodeLocation: 472,312,1
NodeSize: 88,16
WindState: 2,461,246,720,350
Aliases: FormNode ACP_New110328707

Decision ACP_Default_index_me
Title: Index menus
Description: Select whether to show pivot index menus for graphs and tables as a default style for tables and graphs in Frame or Tall node. ~
   Yes: Always show the pivot index menus.~
   Fly-in: (default) Show the green pivot icon when you move the cursor over the result. 	~
		Click the icon to toggle showing the pivot index menus.~
   No: Don't show pivot index menus or the green pivot icon, but show slicer menus.~
   Not_even_slicers: Show nothing, not even slicer menus.~
~
This sets the default style, also shown in the Preview to the right.~
You can override these defaults for selected nodes using the options below.
Definition: Choice(Self,2,0)
NodeLocation: 872,160,1
NodeSize: 80,20
WindState: 2,812,136,779,648
Aliases: FormNode ACP_Fo387857219, FormNode ACP_New93551491
{!40300|DomainExpr: Discrete('Yes','Fly-in','No','Not_even_slicers',type:['text'])}
AcpStyles: Show_index_menus: Yes
OnChange: ACP_style_set('Show_index_menus', self);~
ACP_Preview_result;

Decision ACP_Default_Descript
Title: Description
Description: Select whether to show the Description of a result table or graph and what percent of the area (for a Tall or Frame node) to use. Select  0 to hide the Description.~
~
This sets the default style, also shown in the Preview to the right.~
You can override these defaults for selected nodes using the options below.
Definition: Choice(Self,4,0)
NodeLocation: 872,208,1
NodeSize: 80,20
WindState: 2,281,84,746,729
Aliases: FormNode ACP_Fo1461599043, FormNode ACP_New1167293315
NumberFormat: 2,I,4,0,0,0,4,0,$,0,"ABBREV",0,,,0,0,15,
{!40300|DomainExpr: Discrete(0,5,10,20,30,40,50,type:'all')}
OnChange: ACP_Preview_result;~
ACP_style_set('Show_description', self);
{!60005|Att_AttsToShow: Object Object, Object Attribute, Attribute OnChange}

Text ACP_Te2027486083
Title: Result styles
NodeLocation: 872,184,-11
NodeSize: 88,176
NodeInfo: 1,,,,1,1
WindState: 2,1274,740,476,224
NodeFont: Arial Black, 15
AcpStyles: Show_description:30

Decision ACP_Show_uncertainty
{!40300|Att_PrevDomainValue: ['No',0.1,0.2,0.3,0.4,0.5,0.6,0.8]}
Title: Uncertainty view
Description: Check to show the uncertainty view menu in result views to let users select Mid, Mean, PDF, Sample, and so on. Uncheck to hide it for models with no uncertainties (probabilistic values).~
~
This sets the default style, also shown in the Preview to the right.~
You can override these defaults for selected nodes using the options below.
Definition: Checkbox(0)
NodeLocation: 872,64,1
NodeSize: 80,20
WindState: 2,768,62,746,729
Aliases: FormNode ACP_Fo924728131, FormNode ACP_Fo1157168003
NumberFormat: 2,DB,4,0,0,0,4,0,$,0,"ABBREV",0,,,0,0,15,
{!40300|DomainExpr: Discrete()}
AcpStyles: Show_uncertainty_view: No
OnChange: ACP_Preview_result;~
ACP_style_set('Show_uncertainty_view', self)
{!60005|Att_AttsToShow: Object Object, Object Attribute, Attribute OnChange}

Decision ACP_graph_toggle_def
{!40300|Att_PrevDomainValue: ['No',0.1,0.2,0.3,0.4,0.5,0.6,0.8]}
Title: Graph/ Table toggle icon
Description: Check to show the icon in the top right of a Result that lets you toggle between Graph and Table view. ~
~
This sets the default style, also shown in the Preview to the right.~
You can override these defaults for selected nodes using the options below.
Definition: Checkbox(1)
NodeLocation: 872,112,1
NodeSize: 80,20
WindState: 2,442,264,746,729
Aliases: FormNode ACP_Fo1998469955, FormNode ACP_Fo620297091
NumberFormat: 2,DB,4,0,0,0,4,0,$,0,"ABBREV",0,,,0,0,15,
{!40300|DomainExpr: Discrete()}
AcpStyles: Show_graph_table_icon: Yes
OnChange: ACP_Preview_result;~
ACP_style_set('Show_graph_table_icon', self);
{!60005|Att_AttsToShow: Object Object, Object Attribute, Attribute OnChange}

Decision ACP_Tab_color
Title: Tab color
Description: Select the color for the ACP tabs:~
	Default: Unselected tabs are bluish white. The selected tab (module) uses the background color for its diagram.~
	Background: All tabs use their diagram background color, whether selected or not~
	Node: The selected Tab uses its diagram background color.The other tabs use the color of their Module node (not their diagram background). You can use this to change tab colors by modifying their node color in an Analytica function -- for example, to show which tabs (modules) the user has visited or completed.
Definition: Choice(Self,1,0)
NodeLocation: 472,272,1
NodeSize: 88,16
WindState: 2,623,8,720,529
Aliases: FormNode ACP_Fo1730858883
{!40300|DomainExpr: Discrete('Default','Background','Node',type:'text')}
AcpStyles: Tab_color: Null
OnChange: ACP_style_set('Tab_color', self)
{!60005|Att_AttsToShow: Object Object, Object Attribute, Attribute OnChange}

Constant ACP_Default_style_va
Title: ACP Default style val
Description: Value of ACP style that tells ACP to use the default style (it removes the style tag from ACPStyles)
Definition: ''
NodeLocation: 104,488,1
NodeSize: 80,20

Decision Show_result_titles
{!40300|Att_PrevDomainValue: ['No',0.1,0.2,0.3,0.4,0.5,0.6,0.8]}
Title: Show result titles
Description: Check to show the Title at the top of graph and table results (tall and frame nodes).~
~
This sets the default style for all results. You can override these defaults for selected nodes using the options in the "Set non-default styles" module.
Definition: Checkbox(1)
NodeLocation: 1056,56,1
NodeSize: 80,16
WindState: 2,1016,173,746,729
Aliases: FormNode ACP_Fo394256707, FormNode ACP_Fo253639491
NumberFormat: 2,DB,4,0,0,0,4,0,$,0,"ABBREV",0,,,0,0,15,
{!40300|DomainExpr: Discrete()}
OnChange: ACP_Preview_result;~
ACP_style_set('Show_title', self)
{!60005|Att_AttsToShow: Object Object, Object Attribute, Attribute OnChange}

Variable ACP_model_Reset
Title: ACP model Reset
Description: Reset ACP Styles variables to reflect changes in the parent model.
Definition: Checkbox(1)
NodeLocation: 96,216,1
NodeSize: 72,24
NodeInfo: 1,,,,,,,0,,,,,,0
WindState: 2,1053,55,736,411
Aliases: Alias ACP_Al1165224259, Alias Al301557571, FormNode ACP_New1368619907

Text ACP_Te1510852419
Title: Obsolete
NodeLocation: 1056,528,-11
NodeSize: 88,160
NodeInfo: 1,,,,1,1
WindState: 2,1274,740,476,224
NodeFont: Arial Black, 15
AcpStyles: Show_description:30

Decision ACP_URL_of_Help_page
Title: URL of Help page
Description: Specify URL for a Help page for this model (accessed from ? menu in ACP). Until this is implemented, you can add a URL link into the model user interface directly.
Definition: ''
NodeLocation: 872,552,1
NodeSize: 80,16
WindState: 2,519,-17,578,548
Script: ~

OnChange: ACP_style_set('show_banner', self)

Module ACP_Top_styles
Title: Top styles
Author: Max Henrion~
Lumina
Date: Mon, Oct 18, 2021 5:28 PM
NodeLocation: 472,184,1
NodeSize: 88,16
DiagState: 2,454,81,894,305,19,,

Variable ACP_obj_types_w_ra
Title: Obj types w radius
Description: Handles to parent Objects for which you can specify a corner radius.
Definition: DetermTable(ACP_object_types)(Handle(Text),Handle(FrameNode),Handle(FormNode),Handle(Button))
NodeLocation: 808,176,1
NodeSize: 72,24
DefnState: 2,77,525,416,303,0,DFNM
ValueState: 2,858,560,416,303,,MIDM

Variable ACP_Get_radius
Title: Get corner radius
Description: The maximum corner radius set for any selected object type (Text, Framenode, button or tall node.
Definition: Local x := Max(ACP_get_att_field(Nodeinfo, ACP_obj_types_w_ra, 'Corner radius'), ACP_object_types);~
IF IsNumber(x) THEN x ELSE 0
NodeLocation: 808,240,1
NodeSize: 72,24
WindState: 2,112,523,720,350
ValueState: 2,146,590,416,303,,MIDM

Variable ACP_Preview_styles
Title: Preview styles for results
Description: This example result (graph or table) illustrates the effect of the "Styles for result variables" that you select to in the controls to the left. These are the default styles for all results in this model. You can override these defaults for selected variables in "Set non-default styles" module.
Definition: 1/(1 + Exp(-(ACP_i1 -5)/@ACP_abc*2))+ ACP_k
NodeLocation: 808,96,1
NodeSize: 72,24
NodeInfo: 1,,,,,,,,,,,1
WindState: 2,371,196,762,572
ValueState: 2,1128,151,577,418,1,MIDM
Aliases: FormNode ACP_New2123594627, FormNode ACP_Fo636231747, Alias Al1324377923, FormNode ACP_preview_Tall_nod
ReformVal: [ACP_i1,ACP_abc]
Att_ResultSliceState: [ACP_k,1,ACP_abc,1,ACP_i1,1]
{!40300|ProactivelyEvaluate: 4}
{!40600|Att_ClusterIndex: ACP_i1}
{!60005|Att_AttsToShow: Object Object, Object Attribute, Attribute AcpStyles}

Index ACP_i1
Title: eg i
Definition: 1 .. 10
NodeLocation: 640,32,1
NodeSize: 72,24
Aliases: Alias Al787507011

Index ACP_abc
Title: eg abc
Definition: ['A','B','C']
NodeLocation: 808,32,1
NodeSize: 72,24
Aliases: Alias Al1861248835

Index ACP_k
Title: eg k
Definition: Sequence(0, 3, 1)
NodeLocation: 640,96,1
NodeSize: 72,24
Aliases: Alias Al519071555

Index ACP_model_styles
Att_PrevIndexValue: ['Navigation_style','show_tabs','Show_outline','Use_top_diagram_size','Screen size','Tab_color','node_drop_shadow','Bevel_node_border','Show_description','Show_index_menus','Show_uncertainty_view','Show_graph_table_icon']
Title: ACP model styles
Definition: ['Navigation_style','show_tabs','Show_outline','Use_top_diagram_size','Screen size','Tab_color','node_drop_shadow','Bevel_node_border','Show_description','Show_index_menus','Show_uncertainty_view','Show_graph_table_icon']
IndexVals: ['item 1']
NodeLocation: 112,152,1
NodeSize: 64,24
ValueState: 2,117,13,416,303,,MIDM

Variable ACP_Model_ACP_style_
Title: Model ACP style settings
Description: ACP style settings for this model.
Definition: Local x := ACP_Style_get(ACP_model_styles, (ACP_Top_model));~
x := TextSentenceCase(x);~
IF x=Null OR IsNumber(x) THEN x ~
ELSE IF ACP_style_type='Number' THEN ParseNumber(x, 0)~
ELSE IF ACP_style_type='Text' THEN x~
ELSE IF ACP_style_type='Boolean'~
	THEN IF x='Yes' THEN 1 ELSE IF x='No' THEN 0 ELSE x~
ELSE 0
NodeLocation: 264,32,1
NodeSize: 64,24
WindState: 2,727,443,720,350
ValueState: 2,1047,421,434,413,,MIDM

Variable ACP_User_inputs_by_A
Title: User input vars by ACP style
Description: Handle to each user input option variable for each ACP model style.
Definition: Table(ACP_model_styles)(Handle(ACP_Navi_style),Handle(ACP_ToolbarTabs),Handle(ACP_Outline_view),Handle(ACP_IncludTop_As_Tab),Handle(ACP_Screen_size),Handle(ACP_Tab_color),Handle(ACP_Shadows),Handle(ACP_Bevels),Handle(ACP_Default_Descript),Handle(ACP_Default_index_me),Handle(ACP_Show_uncertainty),Handle(ACP_graph_toggle_def))
NodeLocation: 264,96,1
NodeSize: 64,24
DefnState: 2,240,425,455,439,0,DFNM
ValueState: 2,170,119,416,303,,MIDM
ReformDef: [Undefined,ACP_model_styles]
{!40700|Att_CellFormat: CellEntry(0,0,0,0,1)}

Variable ACP_defaults_by_ACP_
Title: ACP defaults by ACP style
Description: Default values for ACP Styles used by ACP
Definition: Table(ACP_model_styles)('Outline',1,1,0,'Browser window','Default',0,0,0,'Fly-in',1,1)
NodeLocation: 264,208,1
NodeSize: 64,24
WindState: 2,1044,396,720,350
DefnState: 2,360,383,455,439,0,DFNM
ValueState: 2,308,466,416,303,,MIDM
ReformDef: [Undefined,ACP_model_styles]
{!40700|Att_CellFormat: CellFormats(CellEntry(0,0,0,0,1),CellEntry(1,0,0,0,0))}

Index ACP_Style_fields
Att_PrevIndexValue: ['User input vars','Type','ACP Defaults','Library defaults']
Title: ACP Style fields
Definition: ['User input vars','Type','ACP Defaults','Library defaults']
NodeLocation: 464,80,1
NodeSize: 64,24

Constant ACP_styles_info
Title: ACP styles info
Description: Information for each ACP Style, including the corresponding user input variable, the data type, the default value used in ACP, and the default value set in the ACP Styles library.
Definition: MultiTable(ACP_Style_fields)(ACP_User_inputs_by_A,ACP_style_type,ACP_defaults_by_ACP_,ACP_style_library_de)
NodeLocation: 464,152,1
NodeSize: 64,32
WindState: 2,1080,391,720,350
DefnState: 2,608,407,729,395,0,DFNM
ReformDef: [ACP_Style_fields,ACP_model_styles]

Variable ACP_style_type
Title: ACP style type
Description: Expected data type for each ACP model style.
Definition: Table(ACP_model_styles)('Text','Boolean','Boolean','Boolean','Text','Text','Boolean','Boolean','Number','Text','Boolean','Boolean')
NodeLocation: 264,152,1
NodeSize: 64,24
DefnState: 2,240,425,455,439,0,DFNM
ValueState: 2,170,119,416,303,,MIDM
ReformDef: [Undefined,ACP_model_styles]
{!40700|Att_CellFormat: CellFormats(CellEntry(0,0,0,0,1),CellEntry(0,0,1,0,0))}

Variable ACP_style_library_de
Title: ACP style library defaults
Description: Default values for ACP Styles set by the ACP styles library.
Definition: Table(ACP_model_styles)('Top_tabs',0,1,0,'Browser window','Default',1,0,10,'Fly-in',1,1)
NodeLocation: 264,264,1
NodeSize: 64,24
WindState: 2,1044,396,720,350
DefnState: 2,360,383,455,439,0,DFNM
ValueState: 2,308,466,416,303,,MIDM
ReformDef: [Undefined,ACP_model_styles]
{!40700|Att_CellFormat: CellFormats(CellEntry(0,0,0,0,1),CellEntry(1,0,0,0,0))}

Alias Al298739523
Title: Set node corner radius to
Definition: 1
NodeLocation: 640,240,1
NodeSize: 72,24
Original: ACP_node_radius

Alias Al1372481347
Title: for object types
Definition: 1
NodeLocation: 640,176,1
NodeSize: 72,24
Original: ACP_object_types

Close ACP_Top_styles

Close ACP_Style_lib_detail

Variable ACP_Style_lib_ready_
Title: ACP Style lib ready to import
Description: Set to true when ACP Style lib is running standalone (not embedded in a model) and ready to import into a model.~
~
When the ACP Style lib is imported into a model, the "ACP Style lib on load" button checks this variable. If it's true, it prompts the user for whether they want to use ACP style defaults from this library, or retain any existing defaults set for the model.~
It then resets this variable to False so it won't do it again the next time the model is loaded.
Definition: 0
NodeLocation: 848,32,1
NodeSize: 72,24
WindState: 2,685,192,720,350

Function ACP_Bitn(x, n: Number)
Title: ACP_Bitn(x, n)
Description: Returns the nth bit of integer x -- i.e. true (1) if x contains the nth power of 2.~
For example, Power2(1, 0)-> 1~
	Power2(0, 0)-> 0~
	Power2(3, 1)-> 1~
	Power2(4, 2)-> 1
Definition: Mod(Floor(x/2^n), 2)
NodeLocation: 96,312,1
NodeSize: 88,24

Module ACP_autocalc_by_Diag
Title: Set autocalc
Description: To view and set Autocalc status by Diagram or Output variable to override the Model default styles
Author: Alex Graham~
Lumina Decision Systems
Date: Thu, Oct 15, 2020 1:45 PM
DefaultSize: 64,24
NodeLocation: 632,312,1
NodeSize: 72,24
NodeInfo: 1,0,0
DiagState: 2,277,408,895,245,23,,
WindState: 2,162,418,720,350
DiagramColor: 65535,65535,65535
AcpStyles: show_as_tab: No
{!40300|ProactivelyEvaluate: 4}

Function ACP_Set_Autocalc(obj: Handle Atom; acMid, acProb, acIndex,  acEditMode, evalOnLoad: Atom = False )
Title: Set_Autocalc(obj, acmid, acIndex, acProb)
Description: Set object «obj» to Autocalc (aka "Proactively Evaluate") its mid value if «acMid» is True, prob value if «acProb» is True, Index value, «acIndex» is true, all only in Browse mode, unless «acEditMode» is True (all options in except «acMid» default to False). If «obj» is a variable, Autocalc means calculate it when it appears in a user output or Frame node, and recalculate it immediately after user changes any variable that influences it. If  «obj» is a Module, it calculates the user outputs when you open its diagram (dashboard) in DTA or ACP. If «obj»  is a Button or Picture, «evalOnLoad» = True causes it to calculate when the model is loaded (starts up).~
~
If all flags are 0 it sets ProactivelyEvaluate to Null, so that if«obj» is a variable or user output, it will use the default autocalc settings for its parent module.
Definition: ACP_model_Reset := NOT ACP_model_Reset;~
Local v :=  ProactivelyEvaluate OF obj;~
v := IF IsNumber(v) THEN v ELSE 0;~
Local start := BitAnd([v, BitNot(4+8+64)]);~
Local newFlags := BitOr([start, acIndex, acMid*4, acProb*8, evalOnLoad*32, acEditMode*64]);~
IF NOT ISNumber(newFlags) THEN MsgBox('In Set_Autocalc, newFlags = '&newFlags&', but it should be a number');~
ProactivelyEvaluate OF obj := IF newFlags=0 THEN Null ELSE newFlags
NodeLocation: 112,40,1
NodeSize: 104,24
NodeInfo: 1,1,1
WindState: 2,367,106,897,658

Decision ACP_Autocalc_default
Title: Autocalc
Description: Select default Autocalc behavior -- i.e. so that user output variables will be calculated automatically when you open a Diagram (or ACP dashboard) containing them.~
	None | Calculate them only when a user clicks [Calc] button or asks to view their result in a Frame node -- i.e. "lazy evaluation" which is Analytica's normal behavior.~
~
	Mid values | Automatically calculate the Mid (deterministic value) of output variables when you view Diagram (or ACP dashboard) containing them.~
~
	Mid and prob values | Automatically calculate the Mid and probabilistic value of output variables when you view Diagram (or ACP dashboard) containing them.~
This sets the default for Autocalc in the dashboards (top modules).~
You can override these defaults for selected modules or nodes using the options below.
Definition: Choice(ACP_Autocalc_optio1,1,0)
NodeLocation: 768,40,1
NodeSize: 88,24
WindState: 2,148,81,720,589
Aliases: FormNode ACP_New580090755, FormNode ACP_New160660355
OnChange: ACP_Set_Autocalc((ACP_top_modules),  ~
  acMid:  ACP_Autocalc_default <>'None',~
  acProb: ACP_Autocalc_default = 'Mid and prob values');
{!60005|Att_AttsToShow: Object Object, Object Attribute, Attribute OnChange}

Index ACP_Diags_with_User_
Att_PrevIndexValue: [Nodes_for_Illustrati,NYPA_specific_output,Mo2,Profiler_details,Sequential_Historic_,Deltas_from_Base_Per,Import_Auxiliary_Var,Data_Import,Import_Error_Checks,Categ_Index_Import,Seq_Index_Import,Output_Calcs,Forecast_Accuracy,Market_Share,Logit_Diagnostics,Logit_Calcs,Multi_Stage_Calibra2,PV_Objective,Stored_Decison_Data,Misc_Output,Solar_Energy_Product,Customer_Load,Utility_Bills_and_Bi,Equipment_Costs,Annual_Cost_of_Syste,Old_Cost_Ratio_Calcs,Monthly_Payback_Logi,Manually_Input_PPA,Technical_Potential,Facility_Level_Area_,Rate_Values_by_Perio,Rate_Saving_Details,Rates_to_View,NYSERDA_Value_Stack,Daily_Profile_Logic,Building_Stocks,EV_Stock_Initializat,EV_Misc,EV_Adoption_Logic,Market_Share_Calcula,Vehicle_Choice_Logi1,Multi_Stage_Calibra1,EV_Objective,Stored_Decision_Data,Storage_Optimizati10,Misc6,Storage_Opt_Diagnos2,DOE_Load_Profiles,Misc_Output1,Storage_Opt_Diagnost,Outputs_for_E_Source,Filter_USURDB_Data1,System_Analysis,Storage_Adoption,Market_Share2,Multi_Stage_Calibra3,BESS_Objective,Stored_Decison_Data1]
Title: Diags with User outputs or Framenodes
Description: All diagrams that contain user outputs.
Definition: ACP_model_Reset;~
Unique(ISIN OF (ACP_User_output_and_))
NodeLocation: 112,184,1
NodeSize: 88,32
WindState: 2,699,76,720,350
ValueState: 2,1105,387,597,369,,MIDM
MetaOnly: 1

Index ACP_Autocalc_options
Att_PrevIndexValue: ['Default','None','Mid values','Mid and prob values']
Title: Autocalc options + default
Definition: Concat('Default', ACP_Autocalc_optio1)
NodeLocation: 560,112,1
NodeSize: 88,24
ValueState: 2,1223,516,416,303,,MIDM
Aliases: Alias ACP_Al694502979

Function ACP_Autocalc_status(o: Handle Atom)
Title: Get_Autocalc_status(o)
Description: Returns the autocalc status (from Autocalc options) corresponding to the ProactivelyEvaluate attribute for object o.
Definition: ACP_model_Reset;~
Local ac := ProactivelyEvaluate OF (o);~
Slice(ACP_Autocalc_options, ~
	IF ac=Null THEN 1~
	ELSE IF ACP_Bitn(ac, 3) THEN 4~
	ELSE IF ACP_Bitn(ac, 2) THEN 3~
	ELSE 2)
NodeLocation: 336,112,1
NodeSize: 104,24
NodeInfo: 1,1,1
WindState: 2,997,94,720,538

Function ACP_Set_Autocalc_st(o: Handle Atom; status: Text)
Title: Set_Autocalc_status(o)
Description: Set the autocalc status (from Autocalc options) corresponding to the ProactivelyEvaluate attribute for object o.
Definition: IF status = 'Default' THEN ACP_Set_Autocalc(o, 0)~
ELSE ACP_Set_Autocalc(o, ~
	acMid: status<>'None',~
	acProb: status='Mid and prob values')
NodeLocation: 336,40,1
NodeSize: 104,24
NodeInfo: 1,1,1
WindState: 2,952,105,720,466

Index ACP_Autocalc_optio1
Att_PrevIndexValue: ['None','Mid values','Mid and prob values']
Title: Autocalc options
Definition: ['None','Mid values','Mid and prob values']
NodeLocation: 560,40,1
NodeSize: 88,24
ReformVal: [Undefined,Self]

Module ACP_old_autocalc
Title: ACP old autocalc
Author: Max Henrion
Date: Wed, Jul 7, 2021 11:39 PM
NodeLocation: 320,192,1
NodeSize: 64,24
NodeInfo: 1,0
DiagState: 2,0,0,1297,757,23,,

Index ACP_Output_vars
Att_PrevIndexValue: []
Title: Output vars
Definition: LocalAlias m := ACP_Select_a_diagram;~
IF m=Null THEN [] ELSE ACP_User_outputs_in_(m)
NodeLocation: 760,496,1
NodeSize: 80,24
ValueState: 2,967,250,510,302,0,MIDM
MetaOnly: 1

Decision ACP_User_output
Title: User output
Description: Select a user output variable from the selected diagram.
Definition: Choice(ACP_Output_vars,1,0)
NodeLocation: 760,568,1
NodeSize: 80,24
WindState: 2,564,457,720,350
ValueState: 2,1041,955,416,303,,MIDM
Aliases: FormNode ACP_New43219843
OnChange: ACP_Autocalc_for_thi := ACP_Autocalc_status(self)

Decision ACP_Select_a_diagram
Title: Select a diagram
Description: Select one of Diagrams that may override the model default autocalc status.
Definition: Choice(ACP_Diagrams_that_ov,1,0,0)
NodeLocation: 760,424,1
NodeSize: 80,24
NodeInfo: 1,,,,,,,,,,,0
WindState: 2,1044,521,778,524
ValueState: 2,1700,151,416,303,,MIDM
Aliases: FormNode ACP_New1553169283, FormNode ACP_New1653832579
OnChange: ACP_Autocalc_for_thi := IF Self-Null THEN 'Default'~
 	ELSE ACP_Autocalc_status(self)

Function ACP_User_outputs_in_(m : module)
Title: User_outputs_in_ module(m)
Description: A list of the user outputs (Formnodes with Value 1) in module m (and not its submodules).
Definition: #SetIntersection([FindObjects(class: Formnode, attribute: Fixeddef, value:1),~
					 \(Contains of m)])
NodeLocation: 552,496,1
NodeSize: 88,24
NodeInfo: 1,,1
WindState: 2,276,525,889,436

Decision ACP_Diagrams_that_ov
Att_PrevIndexValue: []
Title: Diagrams that override model default
Description: Select those diagrams for which you want to override the model default Autocalc status for some or all variables.  You can select none, one, some, or all Diagrams (ctrl+A).~
~
Those not selected use the Autocalc model default.
Definition: MultiChoice(ACP_Diags_with_User_,allowNone:1,returnList:1)
NodeLocation: 760,352,1
NodeSize: 80,24
WindState: 2,1344,402,720,350
Aliases: FormNode ACP_New1116961667
OnChange: ACP_Set_Autocalc_st((ACP_Diagrams_that_ov), ACP_Autocalc_default)

Button ACP_all_user_outputs
Title: Set all user outputs to Autocalc
NodeLocation: 560,648,1
NodeSize: 88,24
WindState: 2,792,518,720,350
OnClick: ACP_Set_Autocalc((ACP_Diags_with_User_), 1, 1, 0)

Button ACP_Initialize_to_ca
Title: Initialize to calc on load
NodeLocation: 760,648,1
NodeSize: 88,24
WindState: 2,1015,68,720,350
OnClick: ACP_Set_Autocalc(Handle(ACP_Init_show_in_fra),  acMid:1, evalOnLoad: 0)

Variable ACP_Autocalc_by_di1
Title: Autocalc by diags w outputs
Definition: ACP_Get_att(ProactivelyEvaluate, (ACP_Diags_with_User_))
NodeLocation: 264,32,1
NodeSize: 88,24
ValueState: 2,598,565,470,612,,MIDM

Decision ACP_Autocalc_for_thi
Title: Autocalc for this user output
Description: Select the autocalc status you want for this user output.
Definition: Null
NodeLocation: 1192,496,1
NodeSize: 88,24
WindState: 2,794,129,720,350
Aliases: FormNode ACP_New311655299
OnChange: ACP_Set_Autocalc_st((ACP_User_output), self)

Variable ACP_Autocalc_status_
Title: Autocalc status by diagram
Description: The default autocalc status by diagram.  ~
Selected diagrams may contain variables that override their default status.
Definition: ACP_Autocalc_status(ACP_Diags_with_User_)
NodeLocation: 984,360,1
NodeSize: 88,24
WindState: 2,1303,188,720,350
ValueState: 2,1080,66,516,218,,MIDM
Aliases: FormNode ACP_New1922268035
AcpStyles: Show_uncertainty_view: Yes~
Show_table_graph_toggle: Yes~
.2.2~
Show_Description: 0.2.2.2.2~
Show_index_menus: Fly-in~
Show_graph_table_icon: Yes

Variable ACP_Autocalc_statu2
Title: Autocalc status for vars in this diag
Definition: ACP_Autocalc_status(ACP_Output_vars)
NodeLocation: 984,496,1
NodeSize: 88,24
ValueState: 2,626,349,416,303,0,MIDM
Aliases: FormNode ACP_New848526211
AcpStyles: Show_uncertainty_view: Yes~
Show_table_graph_toggle: Yes~
.2.2~
Show_Description: 0.2.2.2.2.2.2~
Show_index_menus: Fly-in~
Show_graph_table_icon: Yes

Decision ACP_Autocalc_defdiag
Title: Default autocalc for this diagram
Description: Select the default autocalc status you want for variables in this Diagram.
Definition: Choice(ACP_Autocalc_options,2,0)
NodeLocation: 1080,176,1
NodeSize: 88,24
WindState: 2,98,82,720,350
Aliases: FormNode ACP_New1385397123
OnChange: ACP_Set_Autocalc_st((ACP_Select_a_diagram), self)

Decision ACP_Autocalc_also_in
Title: Autocalc also in Edit mode
Definition: Checkbox(0)
NodeLocation: 1080,240,1
NodeSize: 88,24

Decision ACP_prob_comps
Title: prob computations
Description: Check if you want to set Autocalc (Proactive evaluation) for the probabilistic value of User outputs as well as Mid (deterministic values).  If probabalistic values take a long time to compute, It's usually best to leave this unchecked 
Definition: Checkbox(0)
NodeLocation: 472,216,1
NodeSize: 64,24
WindState: 2,98,82,774,619
Aliases: FormNode ACP_New747862915
OnChange: ACP_SaveProactFlags()

Decision ACP_Configure
Title: Configure
Description: What level to configure the proactive calculation at.
Definition: Choice(Self,2,0)
NodeLocation: 88,96,1
NodeSize: 64,24
Aliases: FormNode ACP_New1821604739
{!40300|DomainExpr: Discrete('Module level','Variable','Output node only',type:['text'])}
OnChange: ACP_Set_Checkboxes()

Decision ACP_mid_computations
Title: mid computations
Definition: Checkbox(0)
NodeLocation: 472,160,1
NodeSize: 64,24
OnChange: ACP_SaveProactFlags()

Decision ACP_Autocalc_in_edit
Title: Autocalc in edit mode
Description: Check if you want to set Autocalc (Proactive evaluation) for User outputs in Edit mode as well as Browse mode.
Definition: Checkbox(0)
NodeLocation: 472,272,1
NodeSize: 64,24
WindState: 2,367,458,720,350
Aliases: FormNode ACP_New479427459
OnChange: ACP_SaveProactFlags()

Function ACP_Set_Checkboxes()
Title: Set Proactive Checkboxes
Definition: ACP_mid_computations := BitAnd([ACP_src_flags,4])>0;~
ACP_prob_comps := BitAnd([ACP_src_flags,8])>0;~
ACP_Autocalc_in_edit := BitAnd([ACP_src_flags,64])>0;~
ChangeNodeVisibility(Handle(ACP_User_output), if ACP_Configure='Module level' then 'Hidden' else 'Visible',what:'UserInputs')
NodeLocation: 296,216,1
NodeSize: 64,24
WindState: 2,435,181,927,575

Variable ACP_Proactive_src
Title: Proactive src
Definition: DetermTable(ACP_Configure)(ACP_Select_a_diagram,original of (ACP_User_output),ACP_User_output)
NodeLocation: 248,96,1
NodeSize: 64,24
DefnState: 2,193,435,769,303,0,DFNM
ValueState: 2,968,162,416,303,,MIDM

Variable ACP_src_flags
Title: src flags
Definition: Local v :=  ProactivelyEvaluate of (ACP_Proactive_src);~
if IsNumber(v) then v else 0
NodeLocation: 400,96,1
NodeSize: 64,24
WindState: 2,759,55,720,350
ValueState: 2,45,598,416,303,,MIDM
NumberFormat: 2,B,6,2,0,0,6,0,$,0,"ABBREV",0,,,0,0,15

Function ACP_SaveProactFlags()
Title: Save proactive flags
Definition: Local start := BitAnd([ACP_src_flags,BitNot(4+8+64)]);~
Local newFlags := BitOr([ start, ACP_mid_computations*4, ACP_prob_comps*8, ACP_Autocalc_in_edit*64 ]);~
ProactivelyEvaluate of (ACP_Proactive_src) := if newFlags=0 then null else newFlags
NodeLocation: 744,184,1
NodeSize: 64,24
WindState: 2,685,533,894,532

Button ACP_Proactive_sync
Title: Proactive sync
Description: This button synchs the checkboxes with the currently selected configuration, diagram & variable.~
Its purpose is to synch these when the library is first loaded
NodeLocation: 96,40,1
NodeSize: 64,24
{!40300|ProactivelyEvaluate: 32}
OnClick: ACP_Set_Checkboxes()

{!50500|ArrowClass ACP_Arrow628413059}
{!50500|Att_HeadNode: ACP_SaveProactFlags}
{!50500|Att_TailNode: ACP_Proactive_src}
{!50500|Att_ArrowWayPoints: [Null,Null,0.4444444444444444,-56]}
{!50500|Att_ArrowProperties: 1}

Decision ACP_Select_Autocalc
Title: Set Autocalc
Description: Apply Autocalc  -- i.e. Proactively evaluate User outputs when user views Module containing them
Definition: Choice(Self,1,0)
NodeLocation: 880,176,1
NodeSize: 64,24
WindState: 2,448,407,1176,762
Aliases: FormNode ACP_New1016298371
{!40300|DomainExpr: Discrete('for all user outputs','for no user outputs','for selected diagrams')}
OnChange: IF self='for all user outputs' THEN BEGIN~
		ACP_Hide_node(Handle(ACP_Diagrams_that_ov), what: 'UserInputs');~
		ACP_Set_Autocalc(ACP_Diags_with_User_, 1, ACP_prob_comps, ACP_Autocalc_in_edit)~
	END~
ELSE IF self='for no user outputs' THEN BEGIN~
		ACP_Hide_node(Handle(ACP_Diagrams_that_ov), what: 'UserInputs');~
		ACP_Set_Autocalc(ACP_Diags_with_User_, 0,0,0)~
	END~
ELSE IF self='for selected diagrams' THEN BEGIN~
		ACP_Show_node(Handle(ACP_Diagrams_that_ov), what: 'UserInputs');~
		Definition OF ACP_Diagrams_that_ov := 'MultiChoice('&Handle(ACP_Diags_with_User_)&', allowNone:True)'; {Select <None> diagrams }~
		ACP_Set_Autocalc(ACP_Diagrams_that_ov, 1, ACP_prob_comps, ACP_Autocalc_in_edit)~
	END

Decision ACP_prob_comps1
Title: prob computations
Description: Check if you want to set Autocalc (Proactive evaluation) for the probabilistic value of User outputs as well as Mid (deterministic values).  If probabalistic values take a long time to compute, It's usually best to leave this unchecked 
Definition: Checkbox(0)
NodeLocation: 880,232,1
NodeSize: 64,24
OnChange: ACP_SaveProactFlags()

Decision ACP_Autocalc_in_ed1
Title: Autocalc in edit mode
Description: Check if you want to set Autocalc (Proactive evaluation) for User outputs in Edit mode as well as Browse mode.
Definition: Checkbox(0)
NodeLocation: 880,288,1
NodeSize: 64,24
WindState: 2,367,458,720,350
OnChange: ACP_SaveProactFlags()

Text ACP_Te146049277
Title: Autocalc by Diagram
NodeLocation: 248,488,-1
NodeSize: 192,104
NodeInfo: 1,,,,1,1
NodeColor: 65535,63895,52427

Button ACP_Refresh_options
Title: Refresh
Description: Click to refresh the list of diagrams. You should do this after any
NodeLocation: 310,394,1
NodeSize: 38,10
WindState: 2,1183,67,720,350
OnClick: InvalidateResult(ACP_Diags_with_User_)

Button ACP_Open1
Title: Open
NodeLocation: 440,424,1
NodeSize: 44,20
OnClick: Local d :=ACP_Select_a_diagram;~
ShowWindow(d, 'Diagram')

FormNode ACP_New747862915
Title: prob computations
Definition: 0
NodeLocation: 148,540,1
NodeSize: 84,12
Original: ACP_prob_comps

FormNode ACP_New1821604739
Title: Configure for
Definition: 0
NodeLocation: 200,460,1
NodeSize: 128,12
NodeInfo: 1,,,,,,,152,,,,,,0
Original: ACP_Configure

FormNode ACP_New479427459
Title: Proactive in edit mode
Definition: 0
NodeLocation: 148,564,1
NodeSize: 84,12
Original: ACP_Autocalc_in_edit

FormNode ACP_New1553169283
Title: Which diagram
Definition: 0
NodeLocation: 204,424,1
NodeSize: 140,16
NodeInfo: 1,,,,,,,118,,,,,,0
Original: ACP_Select_a_diagram

FormNode ACP_New1016298371
Title: Autocalc status
Definition: 0
NodeLocation: 232,512,1
NodeSize: 168,16
NodeInfo: 1,,,,,,,204
Original: ACP_Select_Autocalc

Alias ACP_New2090040195
Title: Auto calc
Definition: 1
NodeLocation: 264,320,2
NodeSize: 88,24
Original: ACP_Auto_calc

Module ACP_autocalc_UI
Title: old autocalc UI
Author: Max Henrion~
Lumina
Date: Wed, Sep 22, 2021 7:42 PM
NodeLocation: 984,424,1
NodeSize: 64,24
DiagState: 2,0,0,1334,819,17

Text ACP_Te1428869763
Title: Autocalc
Description: Normally, you have to click [Calc] button for a user output or ask to see a result in another way before Analytica calculates a variable.  ~
~
"Autocalc" means  that Analytica will automatically calculate the value of every user output when you view its tab dashboard in ACP or parent Diagram in desktop Analytica. This is an alternative to the default method, where the user must click on each User output to compute its value. With Autocalc set each visible user output recalculates immediately when the user changes any input that affects it.  ~
~
Autocalc is sometimes called "Proactive Evaluation" as an alternative to Analytica's default "Lazy Evaluation". It works well  for simple models that don't take long to evaluate. For user outputs that take more than a few seconds to evaluate, it's usually best to leave Autocalc off, especially if an end user may want to modify several inputs before looking at the result.
NodeLocation: 348,568,-1
NodeSize: 300,152
NodeInfo: 1,,,,1,1

Button ACP_all_output_vars_
Title: Set all output vars to model default autocalc
Description: Click to reset all user output variables (including tall nodes) to the default Autocalc settings.
NodeLocation: 532,92,1
NodeSize: 100,20
OnClick: Definition OF ACP_Diagrams_that_ov := 'MultiChoice(Diags_with_User_outp,,allowNone:1,returnList:1)'

Button ACP_Open_diagram1
Title: Open diagram
NodeLocation: 532,204,1
NodeSize: 100,20
OnClick: ShowWindow(ACP_Select_a_diagram,  'Diagram')

Button ACP_Reset_all_output
Title: Reset all output vars to diagram default
Description: Click to reset all user output variables (including tall nodes) to the default Autocalc settings.
NodeLocation: 532,292,1
NodeSize: 100,20
OnClick: ACP_Set_Autocalc_st(ACP_Output_vars, 'Default')

Text ACP_Te609805187
Title: Set Autocalc to override model default
NodeLocation: 348,216,-1
NodeSize: 300,192
NodeInfo: 1,,,,1,1

FormNode ACP_New43219843
Title: Output to configure
Definition: 0
NodeLocation: 348,344,3
NodeSize: 292,16
NodeInfo: 1,,,,,,,276,,,,,,,,,,
Original: ACP_User_output

FormNode ACP_New1116961667
Title: Select diagrams
Definition: 0
NodeLocation: 348,136,1
NodeSize: 292,16
NodeInfo: 1,,,,,,,276,,,,1
Original: ACP_Diagrams_that_ov

FormNode ACP_New580090755
Title: Autocalc for
Definition: 0
NodeLocation: 348,56,1
NodeSize: 292,16
NodeInfo: 1,,,,,,,276,,,,,,,
Original: ACP_Autocalc_default

FormNode ACP_New1653832579
Title: Select a diagram
Definition: 0
NodeLocation: 348,168,1
NodeSize: 292,16
NodeInfo: 1,,,,,,,276,,,,,,,
Original: ACP_Select_a_diagram

FormNode ACP_New311655299
Title: Default auto calc for this diagram
Definition: 0
NodeLocation: 348,376,1
NodeSize: 292,16
NodeInfo: 1,,,,,,,276,,,,,,,,,,
Original: ACP_Autocalc_for_thi

FormNode ACP_New1385397123
Title: Default status for this diagram
Definition: 0
NodeLocation: 348,248,1
NodeSize: 292,16
NodeInfo: 1,,,,,,,276,,,,,,,
Original: ACP_Autocalc_defdiag

FormNode ACP_New848526211
Title: Autocalc status for vars in this diag
Definition: 1
NodeLocation: 948,552,1
NodeSize: 292,168
NodeInfo: 1,,,,1,1,,276
NodeColor: 58982,58982,58982
Original: ACP_Autocalc_statu2

FormNode ACP_New1922268035
Title: Autocalc status by diag
Definition: 1
NodeLocation: 948,200,1
NodeSize: 292,176
NodeInfo: 1,,,,1,1,,276
NodeColor: 58982,58982,58982
Original: ACP_Autocalc_status_

Button ACP_assign_none_to_m
Title: assign none to multichoce
NodeLocation: 1024,180,1
NodeSize: 64,28
OnClick: ACP_Diagrams_that_ov := 'None'

Close ACP_autocalc_UI

Close ACP_old_autocalc

Alias ACP_Al1165224259
Title: ACP Styles Lib Reset
Definition: 1
NodeLocation: 112,112,1
NodeSize: 88,24
Original: ACP_model_Reset

Close ACP_autocalc_by_Diag

Button ACP_Set_ACP_styles_a
Title: Set  model ACP styles to Lib settings
Description: Click to apply the ACP styles set in this library as the defaults for this model.
NodeLocation: 472,160,1
NodeSize: 72,24
WindState: 2,278,2,917,668
OnClick: IF NOT ACP_is_running THEN Msgbox('These styles do not apply in desktop Analytica. You will need to upload the model to ACP to see their effects.', 0, 'Warning');~
ACP_style_set('Navigation_style',ACP_Navi_style);~
{ Set "Show modules as tabs" to <All> }~
Definition OF ACP_Show_modules_as_ := 'MultiChoice(ACP_top_modules,allowNone:0,returnList:1)';~
ACP_style_set('Tab_color', ACP_Tab_color);~
ACP_style_set('Show_outline', ACP_Outline_view);~
ACP_style_set('Show_tabs',ACP_ToolbarTabs);~
ACP_SetDashSize(ACP_Screen_size, ACP_Margin);~
~
ACP_style_set('Node_drop_shadow', ACP_Shadows);~
ACP_style_set('Bevel_node_border', ACP_Bevels);~
ACP_Set_att_field(Nodeinfo, ACP_obj_types_w_ra, ACP_node_radius, 'Corner radius');~
~
ACP_style_set('Show_title', Show_result_titles);~
ACP_style_set('Show_uncertainty_view', ACP_Show_uncertainty);~
ACP_style_set('Show_graph_table_icon', ACP_graph_toggle_def);~
ACP_style_set('Show_description', ACP_Default_Descript);~
ACP_style_set('Show_index_menus', ACP_Default_index_me);~
~
ACP_Set_Autocalc((ACP_top_modules),  ~
  acMid:  ACP_Autocalc_default <>'None',~
  acProb: ACP_Autocalc_default = 'Mid and prob values');

Button ACP_Run_on_import
Title: Run on import
Description: This button is set to run automically when the model is loaded.~
The only reason to click it is to test it.~
If ACP_Style_lib_alone (and the ACP_styles is not running alone)  it assumes that the ACP Style library is being imported into a model, and it sets the ACP Style model defaults.
NodeLocation: 668,32,1
NodeSize: 76,24
WindState: 2,429,58,990,674
{!40300|ProactivelyEvaluate: 32}
OnClick: IF ACP_Style_lib_ready_ AND ACP_Top_model<>Handle(ACP_Styles) THEN BEGIN~
	IF Sys_DomainSelfIndex THEN Sys_DomainSelfIndex:=False;~
	{ Switch off this ancient legacy preference, which is incompatible with Multichoice}~
	{ACP_Reinit_formnode_; } { Clean up a common problem with form node defaults }~
	ACP_Reset_changes; { Reflect latest changes in the model }~
	Local noACPStyles := ACP_Get_att(ACPStyles, ACP_Top_model)=Null;~
	IF Msgbox((IF noACPStyles~
		THEN 'This model has no ACP Styles set. Would you like to use the standard ACP defaults (Outline, Tool tabs)? [yes]'~
		ELSE 'This model already has some ACP Styles set. Would you like to retain them? [yes]') & ACP_Newline~
		& 'Or would you prefer to use the recommended defaults (Tabs across the top, node shadows, descriptions in results) [No]'~
		& ACP_Newline & 'Either way you can modify them later with this ACP Styles library.',~
		buttons: 4 + 32, title: 'Standard ACP settings?')=6 { Yes }~
	THEN (IF noACPStyles THEN ACP_Set_ACP_defaults ~
			ELSE (MsgBox('OK. We will update the ACP Style library settings to match those in this model.', 1, 	~
					'Confirmation'));~
				ACP_Set_user_inputs_)~
	ELSE BEGIN { Reset model default styles with those set in this library }~
		ACP_Set_att(ACPstyles, (ACP_Top_model), Null); {Delete any previous ACP styles from the model} ~
	   ACP_Set_ACP_styles_a; { Set defaults from this ACP Styles library }~
	END;~
	ACP_Style_lib_ready_ := False; { Set so that this won't run again the next time the parent model is loaded.}~
END;~


Button ACP_Reinit_formnode_
Title: Reinit formnode nodeinfo
Description: Click to reinitialize the NodeInfo for the default Formnode (user inputs and outputs), Framenode, Text node, and Button.  This fixes a problem due to a former bug in the ACP Styles Lib that sometimes causes user input choice menus to take the full width of the node, and buttons in user outputs to be in the middle instead of left or right of the node.
NodeLocation: 472,232,1
NodeSize: 72,24
WindState: 2,79,522,720,350
OnClick: Nodeinfo OF Handle(Formnode) := '1,0,0,,0,0,,,,0,,,0';~
Nodeinfo OF Handle(Framenode) := '1,0,0,0,,,,,,,,,0';~
Nodeinfo OF Handle(Text) := '1,0,0,,0,0,,,,,,,0';~
Nodeinfo OF Handle(button) := '1,0,0,1,1,1,0,,1,0,0,0,,,0';

Button ACP_Set_ACP_defaults
Title: Set ACP defaults
Description: Click to set ACP style defaults to those set in ACP3 -- i.e. when there are no explicit settings in ACP styles of the top Model.
NodeLocation: 472,96,1
NodeSize: 72,24
WindState: 2,410,129,720,350
OnClick: IF NOT ACP_is_running THEN Msgbox('These styles do not apply in desktop Analytica. You will need to upload the model to ACP to see their effects.', 0, 'Warning');~
~
ACP_Navi_style := 'Outline';~
ACP_Outline_view := True;~
ACP_Show_dash_title := False;~
ACP_ToolbarTabs := True;~
ACP_Tab_color := 'Default';~
ACP_Screen_size := 'Browser window';~
ACP_Shadows := False;~
ACP_Bevels := False;~
ACP_Show_uncertainty := True;~
ACP_graph_toggle_def := True;~
ACP_Default_Descript := 20;~
ACP_Default_index_me := 'Fly-in';~
~
{Show the Intro}~
ACP_styles_Intro~


Button ACP_Set_user_inputs_
Title: ACP Set lib inputs to model settings
Description: Click to set user inputs in ACP styles lib to the model-level ACP Styles in this model.
NodeLocation: 668,160,1
NodeSize: 76,28
WindState: 2,594,104,847,554
OnClick: ACP_style_reset := NOT ACP_style_reset;~
FOR s := ACP_model_styles DO BEGIN~
	LocalAlias acps := ACP_User_inputs_by_A[ACP_model_styles=s];~
	Local x := ACP_Model_ACP_style_[ACP_model_styles=s];~
	{MsgBox('In ACP_Set_user_inputs_, acps = '&Handle(acps)&' and x = '&x);}~
	ACP_Set_choice_check(Handle(acps), ~
		IF x=Null THEN ACP_defaults_by_ACP_[ACP_model_styles=s] ELSE x)~
	END;~
ACP_Set_choice_check(Handle(ACP_node_radius), ACP_Get_radius);

Button ACP_Make_ready_for_i
Title: Make ready for import
Description: Click to make this ACP Styles library ready to import into another model.~
Normally, you should do this when running this library stand-alone, rather than embedded within a model.  You may also click "Set ACP style defaults" if you want to make sure it uses the standard defaults.~
~
This button sets ACP_Style_lib_alone. When someone imports this library into another model, it will then trigger setting the ACP style model defaults for that model.
NodeLocation: 472,32,1
NodeSize: 72,24
WindState: 2,705,252,720,350
OnClick: ACP_Style_lib_ready_ := True;~
ACP_styles_Intro;~
Definition OF ACP_object_types := 'MultiChoice(Self,1,2,3,allowNone:0,returnList:1)';~
ACP_Set_Autocalc(Handle(ACP_Run_on_import), evalOnLoad: 1);~
ACP_Reset := NOT ACP_Reset;  ~
{set "Run on import" button to evaluate on loading }

Button ACP_Init_on_load
Title: Initialize On Model Load
Description: Click to initialize selected ACP Styles when you load a model using the ACP Style library.
NodeLocation: 668,88,1
NodeSize: 76,24
WindState: 2,481,473,855,388
{!40300|ProactivelyEvaluate: 32}
OnClick: ACP_show_node(ListOfHandles(ACP_Decision_exampl1, ACP_Variable_exampl1), ACP_Shadows AND NOT ACP_is_running);

Function ACP_Set_choice_check(var: Handle Atom; val: Atom; domainVals: Optional)
Title: ACP_Set_choice_check(var, val)
Description: If var is a variable containing a Choice, it checks if val is in its domain and if it is, assigns val as the new value of var.~
If var is a variable containing a Checkbox, and val is 1 or 0, it assigns 1 or 0 as the new value of var.~
If val is not in the domain (or 0 or 1 for a Checkbox) it gives a warning and does not do the assignment.
Definition: LocalAlias uiVar := var;~
Local def := Definition OF uiVar;~
IF SelectText(def, 1, 7)='Choice(' THEN~
	IF Setcontains(\(IF IsNotSpecified(domainVals) THEN Domain OF uiVar~
		ELSE domainVals), val)~
	THEN uiVar := val~
	ELSE MsgBox(val & ' is not a valid option for user input "'&Title OF uiVar&'"', 1+48, 'Warning')~
ELSE IF SelectText(def, 1, 9)='Checkbox(' THEN BEGIN~
	IF val=0 OR val=1 ~
	THEN uiVar := val~
	ELSE MsgBox(val & ' is not a valid option for user input '&Title OF uiVar, 1+48, 'Warning')~
	END~
ELSE MsgBox('Variable '&Title OF uiVar&' is not the kind of variable to which you can assign a value like '&val, 1+48, 'Warning')
NodeLocation: 144,376,1
NodeSize: 136,24
WindState: 2,851,251,765,624

Button test_ACP_set_choice_
Title: test ACP_set_choice_check
NodeLocation: 468,376,1
NodeSize: 76,24
OnClick: ACP_Set_choice_check(Handle(ACP_Default_Descript), 50)

Module ACP_styles_for_nodes
Title: ACP styles for nodes details
Description: Click to change identifiers of Frame nodes to X_frame, where X is the first 10 chars of the identifier of the parent module for each frame.
Author: Max Henrion
Date: Wed, Jul 7, 2021 11:39 PM
NodeLocation: 312,240,1
NodeSize: 72,24
DiagState: 2,150,27,1100,542,19,,
WindState: 2,98,82,720,350

Index ACP_Frame_nodes
Att_PrevIndexValue: []
Title: ACP Frame nodes
Description: All Frame nodes in the model.~
Excludes those in ACP_styles
Definition: ACP_model_Reset;~
#SetDifference(FindObjects(Class: FrameNode), ~
	FindObjects(Class: FrameNode, within: Handle(ACP_Styles)))
NodeLocation: 112,96,1
NodeSize: 72,24
WindState: 2,971,434,720,350
ValueState: 2,225,280,296,385,0,MIDM
Aliases: Alias Al1198090051
MetaOnly: 1

Index ACP_User_output_and_
Att_PrevIndexValue: [Output_1,Output_2,Output_5,Output_4,Output_6,NYPA_Enabled_PV_Ado1,NYPA_Enabled_PV_Ado2,PV_Potential_by_Type,NYPA_Enabled_Storag1,NYPA_Enabled_Storag2,Nodes_to_change,Colored_nodes_to_fix,Uncolored_Nodes,Left_to_Review,Performance_profiles,EV_Cumul_MW_Impact,Cumulative_EV_Delta,Last_Import_Time,Raw_Imported_Data,Format_Import_Data,Check_Index_Errors,Check_DataType_Error,Raw_Categ_Index_Data,Format_CategInd_Data,Raw_Seq_Index_Data,Format_Seq_Ind_Data,Cumulative_Actual_In,Compare_Prior_Fcsts,LRMS_by_PV_Time,Mkt_Share_Example,Market_Share_Illustr,Market_Share_Functio,Failed_Spat_ID_PV,Sim_vs_Act_PV_System,Sim_vs_Act_PV_Rate,R_2_Applied,All_Stored_Coeffs_PV,Stored_Coeff_for_PV_,Installs_by_Type,Cumulative_PV_Instal,Pct_Load_Met_bySolar,PrePost_Load_by_OpYr,Scaled_Ann_Net_Load,PrePost_Load_Solar,FirstYr_Bill_by_Vint,FirstYr_Bill_Compare,Value_of_generation,Installed_Cost_Input,Equipment_Cost_Resul,Cost_of_Elect_Ratio,Simple_Payback_Time,CostOf_Elect_Compare,Tot_Price_Aft_Incent,Manual_PPA_Rates_by_,Simple_LCOE_vs_Value,PV_Stock_Basis_by_Se,Technical_PV_Potenti,Load_vs_PV_Potential,Total_PV_kW_DC_poten,Potential_divided_by,PV_Tech_Potential_Pe,Total_PV_MW_DC_Poten,Building_Count_from1,Customer_Load1,Rate_Data_TOU_Sched,Electric_Rates2,Flat_Demand_Schedule,Rate_Name_to_Save,Demand_TOU_Sched,Energy_TOU_Schedule,View_Saved_Rates,View_Existing_Rates,Discrete_Rate,Compare9,Period_of_Rate,Electric_Rate_8760,Saved_Daily_Profiles,Saved_Day_Counts,Bldg_Stock_by_Time,Vehicle_Stk_Share_Ac,Tech_Share_Veh_Stock,Share_New_Veh_Sales,Aggreg_New_Veh_Sales,Cumul_EV_Stock_byTec,PHEV_Market_Share,Vehicle_Stock_Share1,Market_Share1,EV_Mkt_Share,Tornado__EV_Mkt_Shar,Vehicle__Utility_,Logit_Attrib_Ratios1,Logit_Equiv_Cost1,Logit_Attrib_Utilit1,Veh_Tech_Mkt_Share1,Vehicle_Logit_MktSh1,Failed_Spat_ID_EV,Simulated_EV_Stock,Sim_vs_Act_EV_Stock,Sim_vs_Act_EV_Sales,Sim_vs_Act_EV_Stock_,R2_Stock_Delta,R2_Thresh_Failure_EV,EV_Decision_Values,All_Stored_Coefficie,Stored_Coeff_for_EV_,Lev_Utility_Bill,Current_BESS_Sector,Flows_by_Opt_Hour,Dispatch_Flows2,Rates_for_Dispatch2,Battery_Charge_Disp2,Building_Loads,BESS_Shr_ResHousing,Dispatch_Flows,Cumul_BESS_Adoption,Electric_Rates3,PV_Generation,Compare_BESS_Potenti,LRMS_by_BESS_Time,Payback_Accept_Curv1,BESS_Payback_Time,Failed_Spat_ID_BESS,Sim_vs_Act_BESS_Cap,Sim_vs_Act_BESS_Rate,R2_Applied_BESS,All_Stored_Coeffs_P1,Stored_Coef_for_BESS]
Title: User output and Frame nodes
Description: User output nodes and Frame nodes, excluding those in ACP_styles library.~

Definition: ACP_model_Reset;~
#Setunion([\ACP_User_output_node, \ACP_Frame_nodes])
NodeLocation: 296,96,1
NodeSize: 72,24
WindState: 2,976,417,720,350
ValueState: 2,1036,152,488,493,0,MIDM
MetaOnly: 1

Variable ACP_Styles_by_node
Title: Styles by node
Description: Node style settings for each frame node and tall node.  ~
Use the controls on the top left to reset them all to the same default.~
Use the controls on the bottom left to set selected objects to other options.
Definition: ACP_style_get(ACP_tag_by_style, ACP_User_output_and_)
NodeLocation: 488,32,1
NodeSize: 72,24
ValueState: 2,1331,61,471,427,0,MIDM
ReformVal: [ACP_Node_styles,ACP_User_output_and_]
AcpStyles: Show_uncertainty_view: Yes~
Show_table_graph_toggle: Yes~
Show_index_menus: No~
Show_Description: 0.2.2

Decision ACP_Objects_w_non_de
Title: Objects w nondefault styles
Description: Select any objects for which you want to specify non-default result table or graph styles. You can then select their styles from "Set result styles by node" just below.
Definition: MultiChoice(ACP_User_output_and_,,allowNone:1,returnList:1)
NodeLocation: 488,96,1
NodeSize: 72,24
WindState: 2,373,311,720,350
ValueState: 2,1105,63,416,303,0,MIDM
Aliases: FormNode ACP_Fo805914179, FormNode ACP_Fo1201976899, FormNode ACP_New1771273091
MetaOnly: 1

Index ACP_Node_styles
Att_PrevIndexValue: ['Uncertainty view','Graph/table icon','Description','Index']
Title: Node styles
Definition: ['Uncertainty view','Graph/table icon','Description','Index']
IndexVals: ['item 1']
NodeLocation: 112,32,1
NodeSize: 72,24

Variable ACP_tag_by_style
Title: Tag by node style
Description: ACP style tag for each Node style
Definition: Table(ACP_Node_styles)('Show_uncertainty_view','Show_graph_table_icon','Show_Description','Show_index_menus')
NodeLocation: 304,32,1
NodeSize: 72,24
DefnState: 2,1284,448,416,303,0,DFNM
ValueState: 2,292,298,416,303,,MIDM

Index ACP_Index_menu_optio
Att_PrevIndexValue: ['Default','No','Fly-in','Yes']
Title: Index menu options w def
Definition: ['Default','No','Fly-in','Yes']
NodeLocation: 296,408,1
NodeSize: 88,24

Index ACP_Descrip_opts_w_d
Att_PrevIndexValue: ['Default','No',10,20,30,40,50,60,80]
Title: Descrip options w default
Description: Options for description style for tall and frame nodes, with 'Default' meaning use the model default.
Definition: ['Default','No',10,20,30,40,50,60,80]
IndexVals: ['item 1']
NodeLocation: 296,464,1
NodeSize: 88,24
WindState: 2,98,82,720,350
ValueState: 2,276,282,416,303,,MIDM
NumberFormat: 2,I,4,0,0,0,4,0,$,0,"ABBREV",0,,,0,0,15,

Decision ACP_styles_by_node1
Title: Set styles by node
Description: Select the "Show index" and "Description" style for each Frame or Tall node.~
"Default" means use the model default styles.
Definition: Table(ACP_User_output_and_,ACP_Node_styles)(~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0),~
Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0))
NodeLocation: 488,336,1
NodeSize: 72,24
WindState: 2,290,234,750,487
DefnState: 2,839,151,831,431,0,DFNM
ValueState: 2,100,106,886,460,0,MIDM
ReformDef: [ACP_Node_styles,ACP_User_output_and_]
ReformVal: [ACP_Node_styles,ACP_User_output_and_]
TableCellDefault: ACP_vals_for_Set_sty
OnChange: ACP_style_set(ACP_tag_by_style, ACP_styles_by_node2, (ACP_Objects_w_non_de) )
{!50000|Att_ColumnWidths: [,ACP_Node_styles,\([,,97,])]}
{!60005|Att_AttsToShow: Object Object, Object Attribute, Attribute OnChange}

Variable ACP_vals_for_Set_sty
Title: Def vals for Set styles by node
Definition: Table(ACP_Node_styles)(Choice(ACP_Default_yes_no,1,0),Choice(ACP_Default_yes_no,1,0),Choice(ACP_Descrip_opts_w_d,1,0),Choice(ACP_Index_menu_optio,1,0))
NodeLocation: 296,336,1
NodeSize: 72,24
DefnState: 2,440,459,861,303,0,DFNM
ReformDef: [Null,ACP_Node_styles]

Decision ACP_styles_by_node2
Title: Set styles by node
Description: Select the desired ACP style for each Frame or Tall node.~
"Default" means use the default style set for this model.
Definition: Subtable(ACP_styles_by_node1[ACP_User_output_and_=ACP_Objects_w_non_de])
NodeLocation: 488,240,1
NodeSize: 72,24
WindState: 2,82,72,718,555
DefnState: 2,566,180,703,449,0,DFNM
ValueState: 2,596,602,517,289,,MIDM
Aliases: FormNode ACP_Fo1656047171
ReformDef: [ACP_Node_styles,ACP_Objects_w_non_de]
ReformVal: [ACP_Node_styles,ACP_Objects_w_non_de]
NumberFormat: 2,G,4,0,0,0,4,0,$,0,"ABBREV",0,,,0,0,15,

Variable ACP_node_styles1
Title: ACP node styles
Definition: ACP_style_get(ACP_tag_by_style, ACP_User_output_and_)
NodeLocation: 608,160,1
NodeSize: 72,24
ValueState: 2,1063,494,761,186,0,MIDM
ReformVal: [ACP_Node_styles,ACP_User_output_and_]

FormNode ACP_Fo805914179
Title: Objects w non default styles
Definition: 0
NodeLocation: 708,408,1
NodeSize: 268,16
NodeInfo: 1,,,,,,,299,,,,,,0
Original: ACP_Objects_w_non_de

Decision ACP_User_outputs_w_n
Title: User outputs w non default Autocalc
Description: Select one or more user output variables for which you want to specify non-default Autocalc options. You can then use "Set Autocalc by node" just below to select your prefered Autocalc options for those variables
Definition: MultiChoice(ACP_User_output_node,,allowNone:1,returnList:1)
NodeLocation: 688,96,1
NodeSize: 72,24
WindState: 2,497,230,720,350
ValueState: 2,1535,161,416,303,,MIDM
Aliases: FormNode ACP_Fo1217742403
MetaOnly: 1
{!60005|Att_AttsToHide: Object Object, Object Attribute, Attribute OptDimensions}

Decision ACP_Autocalc_by_node
Title: Autocalc by node
Description: Select the "Show index" and "Description" style for each Frame or Tall node.~
"Default" means use the model default styles.
Definition: Table(ACP_User_output_node)(Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0),Choice(ACP_Autocalc_options,1,0))
NodeLocation: 688,336,1
NodeSize: 72,24
WindState: 2,841,377,750,487
DefnState: 2,339,185,1026,417,0,DFNM
ValueState: 2,100,106,886,460,0,MIDM
ReformDef: [ACP_Node_styles,ACP_User_output_and_]
ReformVal: [ACP_Node_styles,ACP_User_output_and_]
TableCellDefault: ACP_Default_Autocalc
OnChange: ACP_Set_Autocalc_st(ACP_User_outputs_w_n,  ~
	IF ACP_Autocalc_by_no1='Default' THEN 'None' ELSE ACP_Autocalc_by_no1)
{!60005|Att_AttsToShow: Object Object, Object Attribute, Attribute OnChange}

Decision ACP_Autocalc_by_no1
Title: Set Autocalc by node
Description: Select the "Show index" and "Description" style for each Frame or Tall node.~
"Default" means use the model default styles.
Definition: Subtable(ACP_Autocalc_by_node[ACP_User_output_node=ACP_User_outputs_w_n])
NodeLocation: 688,240,1
NodeSize: 72,24
WindState: 2,82,72,720,350
DefnState: 2,858,111,552,449,0,DFNM
ValueState: 2,1274,627,517,289,0,MIDM
Aliases: FormNode ACP_Fo2023048771
ReformDef: [ACP_Node_styles,ACP_User_outputs_w_n]
ReformVal: [ACP_Node_styles,ACP_User_outputs_w_n]
NumberFormat: 2,%,4,0,0,0,4,0,$,0,"ABBREV",0,,,0,0,15
AcpStyles: Show_Description: 0.2.2~
Show_uncertainty_view: Yes~
Show_table_graph_toggle: Yes~
Show_index_menus: Fly-in~
Show_graph_table_icon: Yes

Index ACP_User_output_node
Att_PrevIndexValue: [Output_1,Output_2,Output_5,Output_4,Output_6,NYPA_Enabled_PV_Ado1,NYPA_Enabled_PV_Ado2,PV_Potential_by_Type,NYPA_Enabled_Storag1,NYPA_Enabled_Storag2,Nodes_to_change,Colored_nodes_to_fix,Uncolored_Nodes,Left_to_Review,Performance_profiles,EV_Cumul_MW_Impact,Cumulative_EV_Delta,Last_Import_Time,Raw_Imported_Data,Format_Import_Data,Check_Index_Errors,Check_DataType_Error,Raw_Categ_Index_Data,Format_CategInd_Data,Raw_Seq_Index_Data,Format_Seq_Ind_Data,Cumulative_Actual_In,Compare_Prior_Fcsts,LRMS_by_PV_Time,Mkt_Share_Example,Market_Share_Illustr,Market_Share_Functio,Failed_Spat_ID_PV,Sim_vs_Act_PV_System,Sim_vs_Act_PV_Rate,R_2_Applied,All_Stored_Coeffs_PV,Stored_Coeff_for_PV_,Installs_by_Type,Cumulative_PV_Instal,Pct_Load_Met_bySolar,PrePost_Load_by_OpYr,Scaled_Ann_Net_Load,PrePost_Load_Solar,FirstYr_Bill_by_Vint,FirstYr_Bill_Compare,Value_of_generation,Installed_Cost_Input,Equipment_Cost_Resul,Cost_of_Elect_Ratio,Simple_Payback_Time,CostOf_Elect_Compare,Tot_Price_Aft_Incent,Manual_PPA_Rates_by_,Simple_LCOE_vs_Value,PV_Stock_Basis_by_Se,Technical_PV_Potenti,Load_vs_PV_Potential,Total_PV_kW_DC_poten,Potential_divided_by,PV_Tech_Potential_Pe,Total_PV_MW_DC_Poten,Building_Count_from1,Customer_Load1,Rate_Data_TOU_Sched,Electric_Rates2,Flat_Demand_Schedule,Rate_Name_to_Save,Demand_TOU_Sched,Energy_TOU_Schedule,View_Saved_Rates,View_Existing_Rates,Discrete_Rate,Compare9,Period_of_Rate,Electric_Rate_8760,Saved_Daily_Profiles,Saved_Day_Counts,Bldg_Stock_by_Time,Vehicle_Stk_Share_Ac,Tech_Share_Veh_Stock,Share_New_Veh_Sales,Aggreg_New_Veh_Sales,Cumul_EV_Stock_byTec,PHEV_Market_Share,Vehicle_Stock_Share1,Market_Share1,EV_Mkt_Share,Tornado__EV_Mkt_Shar,Vehicle__Utility_,Logit_Attrib_Ratios1,Logit_Equiv_Cost1,Logit_Attrib_Utilit1,Veh_Tech_Mkt_Share1,Vehicle_Logit_MktSh1,Failed_Spat_ID_EV,Simulated_EV_Stock,Sim_vs_Act_EV_Stock,Sim_vs_Act_EV_Sales,Sim_vs_Act_EV_Stock_,R2_Stock_Delta,R2_Thresh_Failure_EV,EV_Decision_Values,All_Stored_Coefficie,Stored_Coeff_for_EV_,Lev_Utility_Bill,Current_BESS_Sector,Flows_by_Opt_Hour,Dispatch_Flows2,Rates_for_Dispatch2,Battery_Charge_Disp2,Building_Loads,BESS_Shr_ResHousing,Dispatch_Flows,Cumul_BESS_Adoption,Electric_Rates3,PV_Generation,Compare_BESS_Potenti,LRMS_by_BESS_Time,Payback_Accept_Curv1,BESS_Payback_Time,Failed_Spat_ID_BESS,Sim_vs_Act_BESS_Cap,Sim_vs_Act_BESS_Rate,R2_Applied_BESS,All_Stored_Coeffs_P1,Stored_Coef_for_BESS]
Title: User output nodes
Description: All variables that have user outputs (including tall nodes),~
excluding those in the ACP_styles library.
Definition: ACP_model_Reset;~
#SetDifference(FindObjects(hasUserOutput:True), FindObjects(hasUserOutput: True, within: Handle(ACP_Styles)))
NodeLocation: 864,240,1
NodeSize: 72,24
WindState: 2,590,176,720,350
ValueState: 2,534,228,421,516,0,MIDM
MetaOnly: 1

Alias ACP_Al694502979
Title: Autocalc options + default
Definition: 1
NodeLocation: 864,336,1
NodeSize: 72,24
Original: ACP_Autocalc_options

Button ACP_all_variables_to
Title: Set all variables to default
NodeLocation: 488,468,1
NodeSize: 80,20

Button ACP_Revert_styles_to
Title: Revert styles to defaults
NodeLocation: 300,192,1
NodeSize: 76,24
OnClick: ACP_User_output_and_ := [];~
Definition OF ACP_User_output_and_ := 'Concat(Concat(Unique(Original OF (ACP_Tall_nodes)), ACP_Frame_nodes1),~
   ListOfHandles( Cost_summary))'

FormNode ACP_Fo1201976899
Title: Objects w non default styles
Definition: 0
NodeLocation: 804,24,1
NodeSize: 204,16
NodeInfo: 1,,,,,,,168,,,,,,0
Original: ACP_Objects_w_non_de

Index ACP_Default_yes_no
Att_PrevIndexValue: ['Default','Yes','No']
Title: Default yes no
Definition: ['Default','Yes','No']
NodeLocation: 296,272,1
NodeSize: 72,24

Index ACP_User_outputs
Title: User outputs
Description: All Frame nodes in the model.~
Excludes those in ACP_styles
Definition: ACP_model_Reset;~
#SetDifference(FindObjects(Class: FrameNode), ~
	FindObjects(Class: FrameNode, within: Handle(ACP_Styles)))
NodeLocation: 112,160,1
NodeSize: 72,24
ValueState: 2,231,455,302,270,0,MIDM
MetaOnly: 1

Variable ACP_Default_Autocalc
Title: Default Autocalcs
Description: Default menu for use in Autocalc by node
Definition: Choice(ACP_Autocalc_options, 1, 0)
NodeLocation: 880,464,1
NodeSize: 56,24

Variable ACP_Default_Autoca1
Title: Default Autocalc option
Description: Default option set for Autocalc in ACP Styles.
Definition: ACP_Autocalc_default
NodeLocation: 736,464,1
NodeSize: 72,24
Aliases: FormNode ACP_Fo938359619

Button ACP_styles_for_nonde
Title: Set styles for nondefault nodes
NodeLocation: 1016,340,1
NodeSize: 56,36
OnClick: ACP_style_set(ACP_tag_by_style, ACP_styles_by_node2, (ACP_Objects_w_non_de) )

Alias Al301557571
Title: ACP model Reset
Definition: 1
NodeLocation: 112,240,1
NodeSize: 72,24
Original: ACP_model_Reset

Module ACP_not_in_use
Title: ACP not in use
Author: Max Henrion~
Lumina
Date: Fri, Oct 22, 2021 5:29 PM
NodeLocation: 112,304,1
NodeSize: 72,24
DiagState: 2,889,44,515,392,23,,

Index ACP_vars_with_User_O
Title: All vars with User Outputs
Description: All user output nodes from the model.
Definition: ACP_model_Reset;~
#FindObjects(hasUserOutput:True)
NodeLocation: 352,320,1
NodeSize: 88,24
WindState: 2,742,387,720,350
ValueState: 2,1729,236,433,744,,MIDM
MetaOnly: 1

Index ACP_Dashboards
Title: ACP Dashboards
Description: A list of handles to all modules that are ACP Dashboards.~
Include main model if Show_As_Tab_Checkbox is checked.~
Include its submodules for all Navigation styles except 'Top diagram only'~
Include subsubmodules for 'Two side tabs' or 'Two top tabs'~
~
Exclude submodules that contain 'Show_Object: no' in ACP Styles.
Definition: INDEX mods := IF ACP_Navi_style = 'Top diagram only' OR ACP_IncludTop_As_Tab ~
			THEN [ACP_Top_model] ~
			ELSE [];~
IF ACP_Navi_style <> 'Top diagram only' ~
	THEN mods := Concat(mods, ACP_ObjectsinModule_( ACP_Top_model, 'Module'));~
IF ACP_Navi_style = 'Two top tabs' OR ACP_Navi_style = 'Two side tabs' { Include 2nd level modules }~
	THEN FOR m[] := mods DO mods := Concat(mods, ACP_ObjectsinModule_(m, 'Module'));~
~
/*Original definition caused sub modules within the styles library to be changed to the top diagram size, so filter out ACP_ in the id */~
       mods := Subset(NOT FindInText("ACP_", identifier of (mods)));~
~
Subset(NOT FindInText('Show_Object: no', if (AcpStyles OF (mods) = null) then "" else (AcpStyles of (mods)), caseInsensitive:True))~

NodeLocation: 136,112,1
NodeSize: 88,24
DiagState: 2,0,0,1254,793,17
WindState: 2,959,91,889,606
ValueState: 2,427,3,361,284,,MIDM

Index ACP_Tall_nodes
Title: All Tall nodes
Description: Tall nodes excluding those in ACP Styles.~
A tall node is a Formnode (input or output) with height > ACP_Tall_node_min
Definition: ACP_model_Reset;~
MetaIndex formNodes := #SetDifference(FindObjects(Class: FormNode), FindObjects(Class: FormNode, within: Handle(ACP_Styles)));~
Subset(ACP_Get_att_field(Nodesize, (formNodes), 'Y')>ACP_Tall_node_min_he)
NodeLocation: 352,112,1
NodeSize: 88,24
WindState: 2,74,464,720,350
ValueState: 2,927,506,651,309,0,MIDM
MetaOnly: 1

Constant ACP_Tall_node_min_he
Title: Tall node min height
Definition: 40
NodeLocation: 352,48,1
NodeSize: 88,24

Index ACP_User_Inputs
Title: All User Inputs
Description: All user output nodes from the model.
Definition: ACP_model_Reset;~
#FindObjects('0', class: FormNode,  Attribute: Definition)
NodeLocation: 352,256,1
NodeSize: 88,24
WindState: 2,742,387,720,350
ValueState: 2,1149,204,583,705,,MIDM
MetaOnly: 1

Index ACP_Form_nodes
Title: Form nodes
Definition: ACP_model_Reset;~
#FindObjects(Class: FormNode,  Attribute: Definition)
NodeLocation: 352,176,1
NodeSize: 88,24
WindState: 2,1120,162,720,350

Decision ACP_set_index_menu
Title: Show index menus
Description: Select whether to show index menus for graphs and tables in this Frame or Tall node.~
The default is "Fly-in menu" which means that it shows the index menus when you move the cursor over the icon on top right.
Definition: Choice(Self,2,0)
NodeLocation: 136,232,1
NodeSize: 72,24
WindState: 2,1267,-6,720,568
{!40300|DomainExpr: Discrete('No','Fly-in','Yes',type:['text'])}
OnChange: ACP_style_set('Show_index_menus', self, (ACP_Objects_w_non_de) )

Decision ACP_Show_Descripti1
Title: Show Description
Description: Select how much of a result (in a Frame or tall node) to use to show the Description of the variable as a percent of its height. ~
Or select 'No' not to show the Description at all.
Definition: Choice(Self,1,0)
NodeLocation: 136,176,1
NodeSize: 72,24
WindState: 2,1300,527,746,729
ValueState: 2,120,88,416,303,,MIDM
NumberFormat: 2,%,4,0,0,0,4,0,$,0,"ABBREV",0,,,0,0,15
{!40300|DomainExpr: Discrete('No',10%,20%,30%,40%,50%,60%,80%,type:'all')}
OnChange: ACP_style_set('Show_description', ~
	IF self='No' OR self=0 THEN '' ELSE (self*100), ~
	(ACP_Objects_w_non_de));

Index ACP_Variables_in_Das
Title: Variables in Dashboards
Definition: ACP_Objectsinmod(ACP_Dashboards )
NodeLocation: 136,48,1
NodeSize: 88,24

Button ACP_Clarify_Frame_no
Title: Clarify Frame node identifiers
NodeLocation: 140,308,1
NodeSize: 60,36

Close ACP_not_in_use

Close ACP_styles_for_nodes

Module ACP_styles_in_progre
Title: ACP styles in progress
Author: Max Henrion~
Lumina
Date: Tue, Oct 5, 2021 7:47 PM
DefaultSize: 64,32
NodeLocation: 312,168,1
NodeSize: 72,24
DiagState: 2,0,0,579,271,17

Library ACP_and_arrange_node
Title: Add and arrange nodes library
Description: Functions to create and arrange buttons as tabs down the left side, each of which opens a module diagram to its right.
Author: Lumina Decision Systems, Inc.
Date: Wed, Sep 25, 2019 3:38 PM
NodeLocation: 136,120,1
NodeSize: 88,24
DiagState: 2,436,0,1152,732,17
WindState: 2,442,600,720,350
{!40300|ProactivelyEvaluate: 5}

Variable ACP_Nodes_to_arrange
Title: Nodes to arrange
Description: A list of the tab buttons, used by stackNodes to arrange them.
Definition: ListOfHandles(ACP_Node_start_x,ACP_Node_start_y,ACP_Node_height,ACP_Node_width ,ACP_Node_Gap,ACP_Diagram_height,ACP_Diagram_width,ACP_left_width,ACP_Margin)
NodeLocation: 480,48,1
NodeSize: 48,24
WindState: 2,1517,38,720,350
ValueState: 2,1065,470,416,303,,MIDM

Decision ACP_Node_start_x
Title: Node start x
Definition: 600
NodeLocation: 632,40,1
NodeSize: 60,20

Decision ACP_Node_height
Title: Node height
Definition: 40
NodeLocation: 904,40,1
NodeSize: 60,20

Function ACP_Arrange_Nodes(nodes: List Object; m: Module; width, height: Number;  as: = 'Row'; gap, x, y: = 0; maxX, maxY: = INF)
Title: Arrange_Nodes(nodes, mod, width, height)
Description: Arrange the nodes (a list of handles to objects) as an equally spaced row, column, or array where~
parameters:~
  m: Module (diagram) to contain these nodes~
  as:~
	'Row' as a horizontal row (default). It wraps to more rows(s) to prevent exceeding ~
		maxWidth if specified.~
	'Column' as a vertical column. It wraps to more column(s) to prevent exceeding ~
		maxHeight if specified.~
  width, height: The full width and height of each node.~
  gap: Horizontal and vertical gap between nodes. (default 0 -- i.e. the nodes touch.)~
  x, y: Top left corner of the first node. (default 0 -- i.e. top left of Diagram).~
  maxX: If as='Row' it wraps to a new row to prevent nodes appearing beyond maxX.~
  maxY If as='Column' it wraps to start a new column to prevent nodes appearing beyond maxY.~
	~
All quantities are in pixels from top left of the Diagram window.	~
  with specified width and height (default leave nodes at their existing width and height)~
 vertical stack each with size width and height, with the first top left corner at startX, startY, and specified gap between adjacent nodes. (In pixels)~
For buttons used as tabs, it often looks good to have startX = - 5 so that the left edge of the rounded button is invisible.
Definition: Local w := Ceil(width/2); ~
Local h := Ceil(height/2);~
Local lx := x + w; ~
Local ly := y + h;~
FOR i := 1..Size(nodes) DO BEGIN~
	Local n := Slice(nodes, i);~
	IF NOT IsNotSpecified(m) THEN IsIn OF n := m;~
	NodeSize OF n := w&','&h;~
	NodeLocation OF n :=  lx & ',' & ly & ',' &',1';~
	IF as='Row' THEN BEGIN~
		lx := lx + 2*w + gap;~
		IF lx + w > maxX THEN (lx := x + w; ly := ly + 2*h + gap);~
		END	~
	ELSE BEGIN~
		ly := ly + 2*h + gap;~
		IF ly + h > maxY THEN (ly := y + h; lx := lx + 2*w + gap);~
		END~
END
NodeLocation: 144,48,1
NodeSize: 136,24
WindState: 2,667,155,876,905

Button ACP_Arrange_nodes_te
Title: Arrange nodes test
Description: Click to arrange the 
NodeLocation: 360,52,1
NodeSize: 64,28
WindState: 2,1123,578,720,350
OnClick: Local xy1 := ACP_GetNodeLocXY(Handle(ACP_Node_start_x));~
ACP_Arrange_Nodes(ACP_Nodes_to_arrange, Handle(ACP_and_arrange_node), ~
	width:ACP_Node_width, height:ACP_Node_height, ~
	as: 'Row', gap: ACP_Margin,  ~
	x: xy1[ACP_XY='X']-ACP_Node_width/2,  y: xy1[ACP_XY='Y'] - ACP_Node_height/2,~
	maxX:ACP_Diagram_width, maxY:ACP_Diagram_height)

Button ACP_UI_diags_loc_and
Title: Set UI diags loc and size to first one
Description: Click to arrange all the UI tab Diagram windows to have the same size and location~
as the first one.
NodeLocation: 276,452,1
NodeSize: 68,36
WindState: 2,98,83,720,350
OnClick: Local d1xywh := ACP_Get_att_field(Diagstate, Slice(ACP_List_of_UIO_node, 1), ACP_XYWH);~
ACP_Set_att_field(Diagstate, ACP_List_of_UIO_node, d1xywh, ACP_XYWH)

Index ACP_List_of_UIO_node
Title: List of UIO nodes
Description: List of user interface modules. "Arrange diagrams" button puts all these diagrams in the top left corner of application window and makes them the same size as the first one, which should be the main model.
Definition: ListOfHandles(ACP_Diagram_width, ACP_Diagram_height, ACP_Fo1955822467, ACP_New546536323)
NodeLocation: 632,272,1
NodeSize: 64,24
WindState: 2,1679,486,720,350
ValueState: 2,1109,710,416,303,,MIDM

Decision ACP_Node_start_y
Title: Node start y
Definition: 200
NodeLocation: 768,40,1
NodeSize: 60,20

Decision ACP_Node_width
Title: Node width
Definition: 120
NodeLocation: 632,96,1
NodeSize: 60,20

Function ACP_SetTabOrder(diag: Module; vars: Handle List)
Title: SetTabOrder(diag, vars)
Description: Sets the tabbing order for a set of user inputs and outputs (vars) in the diagram for module diag. It sets the form node (user input or output) for the first node as the first in the Tabbing order, where  you go when you press Tab before any node is selected.
Definition: Local node1 := ACP_Aliasofvar(Slice(vars, 1), diag);~
FOR i := 2..Size(vars) DO BEGIN~
	Local node2 := ACP_Aliasofvar(Slice(vars, i), diag);~
	ACP_Set_att(NextinTabOrder, node1, node2);~
	node1 := node2~
END~

NodeLocation: 152,368,1
NodeSize: 136,24
WindState: 2,140,195,934,460

Variable ACP_Nodes_in_UI
Title: Nodes in UI
Definition: ListOfHandles(ACP_Node_Gap,ACP_Diagram_height,ACP_Diagram_width)
NodeLocation: 816,248,1
NodeSize: 64,32

Button ACP_Arrange_tabs1
Title: Arrange tabs
Description: Click to arrange the 
NodeLocation: 352,116,1
NodeSize: 56,20
WindState: 2,411,190,720,350
OnClick: ACP_Arrange_Nodes(ACP_Nodes_to_arrange, Handle(ACP_and_arrange_node), 'Rows',  ACP_Node_width, ACP_Node_height, ACP_Node_Gap, ACP_Node_start_x, ACP_Node_start_y )

Decision ACP_Node_Gap
Title: Node Gap
Definition: 8
NodeLocation: 768,96,1
NodeSize: 60,20

Decision ACP_Diagram_height
Title: Diagram height
Definition: 894
NodeLocation: 904,96,1
NodeSize: 60,20
WindState: 2,98,82,720,350
Aliases: FormNode ACP_New1083407235

Decision ACP_Diagram_width
Title: Diagram width
Definition: 1000
NodeLocation: 632,152,1
NodeSize: 60,20
Aliases: FormNode ACP_New546536323

Function ACP_Arrange_result_w(diags: List Handle; x, y, width, height: Number)
Title: Arrange_result_windows(vars, x, y, width, height)
Description: Arranges diags (a list of handles to modules) so that they have the same location (top left corner) at x, y and the same width and height (pixels).
Definition: Local dstate := '2,' & x & ',' & y & ',' & width & ',' & height &',17';~
LocalAlias d := diags DO BEGIN~
	DiagState OF d := dstate;~
	ShowWindow(d, 'Diagram');~
END;~
{CloseWindow(m, 'Diagram');~
DiagState OF m := '2,0,0,' & width& ',' & height &',17';~
ShowWindow(m, 'Diagram');}
NodeLocation: 152,184,1
NodeSize: 136,24
WindState: 2,278,343,720,474

Variable ACP_Diagstate_of_UI_
Title: Diagstate of UI modules
Definition: ACP_GetDiagState( (ACP_List_of_UIO_node))
NodeLocation: 488,424,1
NodeSize: 56,24
ValueState: 2,898,16,902,303,,MIDM
ReformVal: [ACP_DiagState_fields,ACP_List_of_UIO_node]

FormNode ACP_Fo1955822467
Title: Node Gap
Definition: 1
NodeLocation: 428,304,1
NodeSize: 108,16

Function ACP_Add_frame(diag: Module; frameID: Text Optional; otitle: =''; UI_width: Number Optional; margin: = ACP_Node_Gap)
Title: ACP_Add_frame(diag, w, h, diag_w, diag_h, margin)
Description: Add a Frame node with identifier «frameID» to fill the right side of the diagram of module «diag» with a «margin» pixels between the frame node and the top, right, bottom of the diagram and between its left edge and rightmost existing node.
Definition: 0{LocalAlias fr := CreateNewObject(Framenode, inModule: diag, ~
	title: otitle,~
	identifier: IF IsNotSpecified(frameID) THEN 'Frame_'&identifier OF diag ELSE frameID);~
ACP_set_att_field(NodeLocation, fr, Array(ACP_XYZ,  ~
		[margin + UI_width/2, margin + height-~
SetSize(fr, Array(XYZ, [margin + UI_width/2, margin + height-~
}
NodeLocation: 152,240,1
NodeSize: 136,24
WindState: 2,56,227,915,350

Decision ACP_left_width
Title: UI left width
Description: Width of text node on the left for ACP models
Definition: 400
NodeLocation: 768,152,1
NodeSize: 60,20
WindState: 2,98,82,720,350

Decision ACP_Margin
Title: Margin
Description: Margin around nodes in a diagram.
Definition: 8
NodeLocation: 904,152,1
NodeSize: 60,20

Function ACP_Arrange_res_wind(var1: Handle; vars: List of Handle)
Title: Arrange_Result_windows(list)
Description: Set the location and size of the Result window for each variable in vars to be the same as var1. Useful for  arranging them to be over the same Frame as in ACP.
Definition: LocalAlias v := (vars) DO ValueState OF v := ValueState OF (var1)
NodeLocation: 144,120,1
NodeSize: 136,24
WindState: 2,306,215,720,350

FormNode ACP_Fo1544411261
Title: Node Gap
Definition: 1
NodeLocation: 428,336,1
NodeSize: 108,16
Original: ACP_New546536323

FormNode ACP_New1083407235
Title: Diagram height
Definition: 891
NodeLocation: 428,272,1
NodeSize: 108,16
Original: ACP_Diagram_height

FormNode ACP_New546536323
Title: Diagram width
Definition: 1262
NodeLocation: 428,240,1
NodeSize: 108,16
Aliases: FormNode ACP_Fo1544411261
Original: ACP_Diagram_width
{!40700|NextInTabOrder: Self}

Close ACP_and_arrange_node

Library ACP_Make_and_copy_ob
Title: Make and copy objects
Description: Functions, buttons, and prototype variables and user inputs for creating Risk diagrams. Under development. For now, we create new Risk diagrams by manual copying an existing module.
Author: Max Henrion
Date: Fri, Oct 4, 2019 3:06 PM
NodeLocation: 136,48,1
NodeSize: 88,24
DiagState: 2,331,65,1347,578,19,,

Index ACP_Risk_quantities
Title: Risk quantities
Description: The chance variables used to estimate Risk, including those in Primary and secondary loss modules.
Definition: ACP_Objs_in_module(oClass: Handle(Chance), submodules:True)
NodeLocation: 504,408,1
NodeSize: 64,24
WindState: 2,654,463,720,350
ValueState: 2,187,192,573,737,,MIDM
MetaOnly: 1

Button ACP_copy_object1
Title: eg copy_object
NodeLocation: 704,288,1
NodeSize: 80,24
OnClick: ACP_Copy_object(ListOfHandles(Low1), dx:100)

Button ACP_Make_user_inputs
Title: Make user inputs
NodeLocation: 504,280,1
NodeSize: 80,24
OnClick: ACP_Copy_user_input(User_input_params, New_orig_params, Handle(ACP_Parent_example_3), Location_of_paramete)

Function ACP_Copy_user_input(userInput, orig: Atom Handle; parent: Handle Atom; dxy: Number [ACP_XY])
Title: Copy_user_input(userInput, orig, parent, dxy)
Description: Make a new user input that is a copy of userInput, with the same node size, ~
and location dx, dy pixels from the parent object.
Definition: LocalAlias newObj := CreateNewObject(Class OF userInput, IsIN OF parent, original: orig);~
FOR a := ACP_User_input_attri DO a OF newObj := a OF userInput;~
ACP_Set_att_field(NodeLocation, Handle(newObj), 	~
	ACP_Get_att_field(NodeLocation, orig, ACP_XY) + dxy);~
Handle(newObj)
NodeLocation: 296,280,1
NodeSize: 120,24
WindState: 2,1326,183,826,483

Index ACP_User_input_attri
Title: User input attribs
Units: test
Definition: ['NodeSize','NodeInfo']
IndexVals: ['item 1']
NodeLocation: 96,280,1
NodeSize: 56,24
WindState: 2,98,82,720,350

Function ACP_Copy_paramS_U_In(param, ui_node, parent: Atom Handle; dxy: Number [ACP_XY])
Title: Copy parameters and user inputs
Description: Given an original risk quantity variable and user input node for it, it generates a copy of both, with the param node dx to the right of the original param, and the ui_node located relative to parent.
Definition: Local newParam := ACP_Copy_object(param, dx: 200, orig: Handle(parent));~
Local newUI := ACP_Copy_user_input(ui_node, newparam, Handle(parent), dxy);~
Handle(newParam)
NodeLocation: 296,344,1
NodeSize: 120,24
WindState: 2,354,789,828,448

Button ACP_Make_user_inpu1
Title: Make user inputs
NodeLocation: 504,344,1
NodeSize: 80,24
OnClick: result_of_user_input := Copy_paramS_U_In(User_input_params, New_orig_params, Handle(Parent_example_3), Location_of_paramete)

Chance ACP_Parent_example_3
Title: Parent example 3
Definition: 0
NodeLocation: 152,488,1
NodeSize: 64,32

FormNode ACP_State252935043
NodeLocation: 288,488,1
NodeSize: 64,16
Original: State1

FormNode ACP_Low252935043
NodeLocation: 288,512,1
NodeSize: 64,16
Original: Low1

FormNode ACP_Mid252935043
NodeLocation: 288,536,1
NodeSize: 64,16
Original: Mid1

FormNode ACP_High252935043
NodeLocation: 288,560,1
NodeSize: 64,16
Original: High1

FormNode ACP_State1326676867
NodeLocation: 288,488,1
NodeSize: 64,16
Original: State1

FormNode ACP_Low1326676867
NodeLocation: 288,512,1
NodeSize: 64,16
Original: Low1

FormNode ACP_Mid1326676867
NodeLocation: 288,536,1
NodeSize: 64,16
Original: Mid1

FormNode ACP_High1326676867
NodeLocation: 288,560,1
NodeSize: 64,16
Original: High1

Variable ACP_Va2
Definition: 0
NodeLocation: 592,104,1
NodeSize: 16,16
NodeInfo: 1,,,0

Function ACP_Aliasofvar(v: Handle Atom; m: Module)
Title: Aliasofvar(v, mod)
Description: Returns the alias (usually to a user input or output node) in module m of variable v. Gives a warning if v has no alias in module m.
Definition: IF Class OF v = 'Button' THEN v~
ELSE BEGIN ~
	Local a := Aliases OF v;~
	Local i := 1;~
	WHILE i<= Size(a) AND ISIN OF Slice(a, i)<>m DO i:=i+1;~
	IF i>Size(a) THEN Error('Object "'&Identifier OF v~
	&'" has no aliases in module '&Identifier OF m)~
	ELSE Slice(a, i)~
END
NodeLocation: 176,32,1
NodeSize: 136,24
WindState: 2,935,325,720,402

Function ACP_Copy_object(obj: Atom Handle;  id, oTitle: text Optional; dx, dy: = 0; orig: Handle Optional)
Title: Copy_object(obj, id, oTitle, dx, dy)
Description: Return a handle to a new object that is a copy of object obj, with the same class, title, units, definition, node location, size and color. and the same parent module, unless you specify a different parent.
Definition: LocalAlias newObj := CreateNewObject(Class OF obj, IsIN OF obj, ~
	IF IsNotSpecified(oTitle) THEN Title OF obj ELSE oTitle);~
FOR a := ACP_Attribs_to_copy DO a OF newObj := a OF obj;~
~
IF NOT (dx=0 AND dy=0) ~
	THEN ACP_Set_att_field(NodeLocation, Handle(newObj), 	~
	ACP_Get_att_field(NodeLocation, Handle(obj)) + Array(ACP_XYZ, [dx, dy, 0]));~
Handle(newObj)
NodeLocation: 200,216,1
NodeSize: 152,16
WindState: 2,463,251,861,561

Index ACP_Attribs_to_copy
Title: Attribs to copy
Units: test
Definition: ['Title','Units','Description','Definition','Onchange','NodeLocation','NodeSize','NodeInfo','NodeColor']
NodeLocation: 448,80,1
NodeSize: 64,24
WindState: 2,98,82,720,350

Button ACP_copy_object2
Title: eg copy_object
NodeLocation: 448,216,1
NodeSize: 80,20
OnClick: ACP_Copy_object((Example_objects), dx:100)

Function ACP_Objs_in_module(m: Module Optional; oClass: Optional; submodules: = False)
Title: Objs_in_module(m, oClass)
Description: Returns all the objects in module m (by default, the module containing the variable that uses this function). If you specify class, it returns only the objects of that class.~
If you set submodules=True it also returns objects in submodules of m.
Definition: IF IsNotSpecified(m) THEN m := (IsIN of HandleFromIdentifier('_caller'));~
IF submodules THEN IF IsNotSpecified(oClass) ~
	THEN #FindObjects(within: m)~
	ELSE #FindObjects(within: m, class: oClass)~
ELSE BEGIN~
	INDEX s := Contains OF m;~
	IF  IsNotSpecified(oClass) THEN CopyIndex(s)~
	ELSE Subset(Class OF (s) = oClass)~
END
NodeLocation: 160,104,1
NodeSize: 120,24
WindState: 2,98,82,813,546

Function ACP_Create_object(m: Handle; class: Object; x, y, w, h: Number)
Title: Create_object(m, class, x, y, w, h)
Description: Create an object withs specified class in module m with title t, and node with top right corner at x, y, full width w and height h pixels. Returns a handle to the new object
Definition: LocalAlias o := CreateNewObject(class, inModule: m, title: "Frame new");~
Local wh := Ceil(Array(ACP_XY, [w, h])/2);~
ACP_Set_att_field(NodeLocation, o, Array(ACP_XY, [x, y]) + wh, ACP_XY);~
ACP_Set_att_field(Nodesize, o, wh, ACP_XY);~
Handle(o)
NodeLocation: 200,168,1
NodeSize: 152,16
WindState: 2,1172,586,811,527

Button ACP_Test_Create_obje
Title: Test Create_object()
NodeLocation: 448,164,1
NodeSize: 80,20
OnClick: Local loc := ACP_Get_att_field(NodeLocation, Handle(ACP_Va2), ACP_XY);~
ACP_Create_object(ISIN OF self, Handle(framenode), loc[ACP_XY='X'], loc[ACP_XY='Y'], 300, 200)

{!50500|FrameNode ACP_Frame_new4594131}
{!50500|Title: Frame new}
{!50500|NodeLocation: 822,132,1}
{!50500|NodeSize: 150,100}
{!50500|NodeInfo: 1,,,,,,,0}
{!50500|AcpStyles: Show_uncertainty_view: Yes~
Show_table_graph_toggle: Yes~
.2.2~
Show_Description: 0.2.2.2~
Show_index_menus: Fly-in~
Show_graph_table_icon: Yes}
{!50500|ProactivelyEvaluate: 4}

FormNode ACP_State1584810371
NodeLocation: 288,488,1
NodeSize: 64,16
Original: State1

FormNode ACP_Low1584810371
NodeLocation: 288,512,1
NodeSize: 64,16
Original: Low1

FormNode ACP_Mid1584810371
NodeLocation: 288,536,1
NodeSize: 64,16
Original: Mid1

FormNode ACP_High1584810371
NodeLocation: 288,560,1
NodeSize: 64,16
Original: High1

FormNode ACP_State1004635613
NodeLocation: 288,488,1
NodeSize: 64,16
Original: State1

FormNode ACP_Low1004635613
NodeLocation: 288,512,1
NodeSize: 64,16
Original: Low1

FormNode ACP_Mid1004635613
NodeLocation: 288,536,1
NodeSize: 64,16
Original: Mid1

FormNode ACP_High1004635613
NodeLocation: 288,560,1
NodeSize: 64,16
Original: High1

Close ACP_Make_and_copy_ob

Module ACP_frames_to_diagra
Title: Add frames to diagrams
Author: Max Henrion
Date: Mon, Apr 19, 2021 10:43 AM
NodeLocation: 376,128,1
NodeSize: 88,24
DiagState: 2,473,-30,946,784,17

Button ACP_Bu1
NodeLocation: 368,80,1
NodeSize: 48,24
OnClick: (eg_result_form_Readc, test_csv_file_name) := Read_csv_file(test_csv_file_name, eg_cols2, Eg_rows2,  colHeaders:0, rowHeaders:0, showDialog:1)

Button ACP_Resize_Windows
Title: Resize UI Windows
Description: Please click this always before saving a version of the model to upload to ACP.~
It resizes the main model diagram and all UI tab diagrams to the specified UI height and width. ACP will use the main model diagram window size diagrams. This size is for the UI diagram. ACP uses extra space for tabs and title area.
NodeLocation: 208,32,1
NodeSize: 80,24
WindState: 2,186,609,693,576
AcpStyles: Show_Object: no
OnClick: MetaVar diag[] :=  UI_Tabs ~
DO Set_Diag_Size(diag, UI_width, UI_Height);~
UI_reset := UI_reset + 1;

Button ACP_Resize_Windows1
Title: Position UI Windows
Description: Please click this always before saving a version of the model to upload to ACP.~
It resizes the main model diagram and all UI tab diagrams to the specified UI height and width. ACP will use the main model diagram window size diagrams. This size is for the UI diagram. ACP uses extra space for tabs and title area.
NodeLocation: 208,108,1
NodeSize: 80,28
WindState: 2,655,228,693,576
AcpStyles: Show_Object: no
OnClick: MetaVar diag[] :=  UI_Tabs ~
DO Set_Diag_Size(diag, UI_width, UI_Height);~
UI_reset := UI_reset + 1;

Function ACP_Find_or_make_fra(m: Module; margin, leftWidth, diagWidth, diagHeight: Number)
Title: Find_or_make_framenode(m)
Description: It sets diagram for module m to have specified diagWidth and diagHeight. It positions a text node to contain user inputs and outputs on the left, with width leftWidth and margin to left, above and below. It positions a Frame node on the right, with margin space from left text node, above, below, and right.  Width of Frame node is therefore  (diagram_width - leftWidth - 3*margin).~
If the module already contains two text nodes, it repositions the top leftmost one as the left text node and the rightmost one as the right frame node. Otherwise it creates new text nodes for them.
Definition: Local textNodes := #FindObjects(within: m, class: Text);~
LocalAlias leftText := IF Size(textNodes)=0 ~
		THEN Create_Object(m, Text, 'Title') ~
		ELSE SLice(textnodes, 1);~
Local h := Ceil(diagHeight - 2*margin);~
Local ltSize := Array(XY, [leftwidth, h])/2;~
Set_attrib_field(NodeSize, leftText, ltSize, XY);~
Set_attrib_field(NodeLocation, leftText, ~
	margin + Array(XY, [leftWidth, 0]) + ltSize, XY);~
LocalAlias frameNode :=IF Size(textNodes)<2 ~
		THEN CreateNewObject(Text, m,	'Title') ~
		ELSE Slice(textnodes, 2);~
SetNodeSize(frameNode, Array(xwz, [leftWidth/2, h, 1]);~
NodeLocation OF frameNode :=  2*margin + leftWidth & ',' & margin & ',' &',1';~
CloudPlayerStyles OF M := 'Frame
NodeLocation: 280,296,1
NodeSize: 152,16
WindState: 2,192,339,720,577

Variable ACP_value_state
Title: eg value state
Definition: ValueState OF Handle(ACP_Diagstate_of_UI_ )
NodeLocation: 536,312,1
NodeSize: 64,24
WindState: 2,899,597,720,350
ValueState: 2,1420,661,459,206,,MIDM

Button ACP_Test_AddFrame
Title: Test AddFrame()
NodeLocation: 528,252,1
NodeSize: 80,20
OnClick: ACP_frame_on_Right(ISIN OF self, 400, 8)

Function ACP_frame_on_Right(m: Handle; width: = 400; margin: = 8)
Title: Add_frame_on_Right(m, w)
Description: Add a Frame node to the diagram for module m with left edge at margin pixels from the rightmost edge of existing nodes in m, top at margin below top of diagram, bottom margine above the bottom of the diagram, with specified width. It resizes the diagram window to allow a margin to the right of the frame node.  It returns a handle to the new Frame node.
Definition: Local maxXY := ACP_DiagramMax(m);~
Local f := ACP_Create_object(m, Handle(FrameNode),  ~
	maxXY[ACP_XY='X'] + margin, 	margin, width, ~
	maxXY[ACP_XY='Y'] - margin);~
{SetDiagWidth(m, width + Margin*2);}~
Handle(f)
NodeLocation: 280,248,1
NodeSize: 152,16
WindState: 2,98,82,919,556

Decision ACP_Select_modules
Title: Select modules
Description: Select which modules you want to add frame nodes and/or text nodes
Definition: Choice( Self, 1, inclAll:0 )
NodeLocation: 192,552,1
NodeSize: 80,16
WindState: 2,98,82,720,350
Aliases: FormNode ACP_New1955822467
{!40300|DomainExpr: Discrete('Top model only','Modules in top model','Modules in top model inc top model','All modules with user input/outputs','All modules except libraries',type:'text')}

Decision ACP_text_and_frame_n
Title: Add text and frame nodes
Definition: Choice( Self, 1, inclAll:0 )
NodeLocation: 200,600,1
NodeSize: 80,16
Aliases: FormNode ACP_New210992003
{!40300|DomainExpr: Discrete('Text node on ','Modules in top model','Modules to 2 levels','All modules with user input/outputs','All modules except libraries',type:'text')}

Decision ACP_Frame_node_width
Title: Frame node width
Definition: Choice(Self,4,0)
NodeLocation: 648,376,1
NodeSize: 64,32
Aliases: FormNode ACP_New1284733827
{!40300|DomainExpr: Discrete(200,240,300,400,500,type:'number')}

Index ACP_Hide_node_fields
Title: Hide node fields
Definition: Subset(@ACP_Nodeinfo_fields > 3 AND @ACP_Nodeinfo_fields < 6)
NodeLocation: 280,384,1
NodeSize: 48,24
ValueState: 2,1474,486,416,303,0,MIDM

Variable ACP_Result_frame
Title: Result frame
Definition: Frame_new885790339
NodeLocation: 776,232,1
NodeSize: 48,24

Variable ACP_Contains_a_frame
Title: Contains a frame node?
Definition: ACP_ObjectsinModule_(ISIN OF self, 'FrameNode')
NodeLocation: 664,64,1
NodeSize: 56,40

{!50500|FrameNode ACP_Frame_new1048712}
{!50500|Title: Frame new}
{!50500|NodeLocation: 1656,568,1}
{!50500|NodeSize: 200,488}
{!50500|NodeInfo: 1,,,,,,,0}
{!50500|AcpStyles: Show_Description: 0.2.2.2~
Show_uncertainty_view: Yes~
Show_table_graph_toggle: Yes~
Show_index_menus: Fly-in~
Show_graph_table_icon: Yes}
{!50500|ProactivelyEvaluate: 4}

FormNode ACP_New1955822467
Title: Select modules
Definition: 0
NodeLocation: 540,568,1
NodeSize: 228,16
NodeInfo: 1,,,,,,,312,,,,,,0
Original: ACP_Select_modules

FormNode ACP_New210992003
Title: Add text and frame nodes
Definition: 0
NodeLocation: 576,600,1
NodeSize: 264,16
NodeInfo: 1,,,,,,,301,,,,,,0
Original: ACP_text_and_frame_n

FormNode ACP_New1284733827
Title: Frame node width
Definition: 0
NodeLocation: 556,488,1
NodeSize: 116,16
NodeInfo: 1,,,,,,,66,,,,,,0
Original: ACP_Frame_node_width

Close ACP_frames_to_diagra

Module ACP_Show_View_in_Fra
Title: Show View in Frame
Author: Max Henrion
Date: Thu, Mar 25, 2021 11:54 AM
NodeLocation: 376,48,1
NodeSize: 88,24
NodeInfo: 1,,,,,,,0,,,,,,0
DiagState: 2,161,27,1402,452,23,,
WindState: 2,676,204,720,350
FontStyle: Arial,15
{!40300|ProactivelyEvaluate: 5}

Button ACP_Object_view
Title: Object view
NodeLocation: 936,417,1
NodeSize: 16,15
NodeInfo: 1,,,0
NodeColor: 62258,62258,62258
Pict

Button ACP_Show_graph_view2
Title: Show graph view
NodeLocation: 972,416,1
NodeSize: 20,16
NodeInfo: 1,,,0,0,0
WindState: 2,304,556,720,350
Pict

Variable ACP_test_of_S_687
Title: A test of S-687
Description: A result that can be shown as a table of graph in a frame node.
Definition: Random(over:ACP_I,ACP_J)
NodeLocation: 192,96,1
NodeSize: 64,24
DiagState: 2,440,440,568,344,17
WindState: 2,461,110,537,289
DefnState: 518,461,110,537,289,,
ValueState: 2,461,110,537,289,1,MIDM
Aliases: FormNode ACP_New2131983235

Index ACP_I
Att_PrevIndexValue: [1,2,3,4,5,6,7,8,9,10]
Title: I
Definition: 1..10
NodeLocation: 64,40,1
NodeSize: 48,24

Index ACP_J
Att_PrevIndexValue: [1,2,3,4,5,6,7,8,9,10]
Title: J
Definition: 1..10
NodeLocation: 64,96,1
NodeSize: 48,24

{!50500|FrameNode ACP_Test_FrameNode}
{!50500|Description: Example_frame_node}
{!50500|NodeLocation: 724,212,-1}
{!50500|NodeSize: 284,172}
{!50500|WindState: 2,98,82,673,595}
{!50500|AcpStyles: Show_Description: 0.2.2.2~
Show_uncertainty_view: Yes~
Show_table_graph_toggle: Yes~
Show_index_menus: Fly-in~
Show_graph_table_icon: Yes}
{!50500|ProactivelyEvaluate: 4}

Button ACP_Change_to_Object
Title: Change to Object view
NodeLocation: 80,184,1
NodeSize: 64,24
OnClick: Att_FrameNodeShowingIdx of ACP_Test_FrameNode := Array(Sys_FrameNodeShowIdx,[Handle(ACP_test_of_S_687),'OBJV',0,null])

Button ACP_Show_diagram
Title: Show diagram
NodeLocation: 72,248,1
NodeSize: 56,24
OnClick: Att_FrameNodeShowingIdx of ACP_Test_FrameNode := Array(Sys_FrameNodeShowIdx,[Handle(ACP_Google_Maps_OGD_),'DIAG',0,null])

Button ACP_Open_obj_window
Title: Open obj window
NodeLocation: 152,324,1
NodeSize: 48,28
OnClick: ShowWindow(Handle(ACP_OnDraw_Google_ma),'Object')

Button ACP_Show_Object_view
Title: Show Object view
NodeLocation: 368,188,1
NodeSize: 64,28
OnClick: ACP_Show_frame_view(Handle(ACP_test_of_S_687), Handle(ACP_Test_FrameNode), 'Object')

Button ACP_Show_Diagram_vie
Title: Show Diagram view
NodeLocation: 368,252,1
NodeSize: 64,28
OnClick: ACP_Show_frame_view(Handle(ACP_old3), Handle(ACP_Test_FrameNode), 'Diagram')

Button ACP_Show_graph_view1
Title: Show graph view
NodeLocation: 368,316,1
NodeSize: 64,28
WindState: 2,684,109,720,350
OnClick: ACP_Show_frame_view(Handle(ACP_test_of_S_687), Handle(ACP_Test_FrameNode), 'Graph')

Button ACP_Show_Table_view1
Title: Show Table view
NodeLocation: 368,380,1
NodeSize: 64,28
OnClick: ACP_Show_frame_view(Handle(ACP_test_of_S_687), Handle(ACP_Test_FrameNode), 'Table')

Button ACP_Show_defn_view
Title: Show defn view
NodeLocation: 368,124,1
NodeSize: 64,28
OnClick: ACP_Show_frame_view(Handle(ACP_test_of_S_687), Handle(ACP_Test_FrameNode), 'Definition')

Variable ACP_edit_table
Title: eg edit table
Description: A result that can be shown as a table of graph in a frame node.
Definition: Table(ACP_I,ACP_J)(~
0.8721065739505489,0.26556926512418744,0.4576059288613526,0.1659489810308204,0.456849674441316,0.5822276634081396,0.9904985236891073,0.25034417782460533,0.5433796767813059,0.3086876428260876,~
0.12176221847616239,0.6312182208668525,0.6173815143375572,0.33111147132288266,0.41786885001597407,0.10452418499836894,0.29544473546345007,0.8829830097420993,0.4222208347275019,0.48421284113275487,~
0.7705221603487256,0.440319140181094,0.19590241191717908,0.6989868570580086,0.7621204349035958,0.9477665796632723,0.5345966981419347,0.2047291594579486,0.5842611750514531,0.5318370920288549,~
0.9825565931306018,0.5860057289646965,0.3011584460275054,0.867972368778648,0.2724783351982377,0.9982867096542785,0.030072654145803606,0.16852840183699894,0.5003389006016491,0.11321297805440285,~
0.16522091821079185,0.38991195633537695,0.7379772675866155,0.4437890236469866,0.11290440061730538,0.9539127251850035,0.3483062150647427,0.18393632824715989,0.4111721843533088,0.9958684272113575,~
0.15701542895148296,0.9463300201791944,0.8862269166327207,0.011602062737383909,0.958314387574007,0.7505095553353939,0.9036918133048768,0.8140965219652729,0.42263894221868314,0.9686491517204089,~
0.7521744509004868,0.7959962844829989,0.29270186940799553,0.46792675623108015,0.9564660438133711,0.1930935812150564,0.8286607460252292,0.6624099522188353,0.958149424734595,0.5938262728014152,~
0.21577719003696796,0.4381669733851063,0.21827773108066886,0.080972440112835,0.8846381091906866,0.3095533057626119,0.6544426892206272,0.5396689342053929,0.570002384283581,0.43109822852122515,~
0.1240669419635399,0.3247983713284127,0.5672329513203506,0.9122989256457886,0.9667056714960865,0.34953178528208834,0.8157878461367394,0.27232168348148544,0.9801366701629649,0.08629296491215609,~
0.8600798430201038,0.44499197576427457,0.903800976417866,0.36192163888454515,0.8518326393569972,0.5538099108048761,0.7562868030538256,0.32381948145284295,0.2969604946193101,0.8169847325500961)
NodeLocation: 192,32,1
NodeSize: 64,24
DiagState: 2,440,440,568,344,17
WindState: 2,609,311,720,350
DefnState: 2,461,110,537,289,0,DFNM
ValueState: 2,518,88,520,276,1,MIDM
Aliases: FormNode ACP_New613645187
ReformDef: [ACP_I,ACP_J]

Button ACP_Show_edit_table
Title: Show edit table
NodeLocation: 368,60,1
NodeSize: 64,28
OnClick: ACP_Show_frame_view(Handle(ACP_edit_table), Handle(ACP_Test_FrameNode), 'Definition')

Button ACP_Object_view1
Title: Object view
NodeLocation: 955,24,1
NodeSize: 13,14
NodeInfo: 1,,,0
WindState: 2,1563,805,720,350
NodeColor: 62258,62258,62258
Pict
OnClick: ACP_ChangeViewinFram(Handle(ACP_Test_FrameNode), 'Object')

Button ACP_Show_graph_view3
Title: Show graph view
NodeLocation: 985,22,1
NodeSize: 13,14
NodeInfo: 1,,,0,0,0
WindState: 2,125,605,720,350
Pict: (000000000000001B001900045201000089504E470D0A1A0A0000000D49484452000000190000001B08020000000643B33F000000017352474200AECE1CE90000000467414D410000B18F0BFC6105000000097048597300000EC300000EC301C76FA864000000D749444154484BED95310AC2401045BD84602578002F21D8D86D2136DEC3F4DA0936B6365AD959899D2751EBE414EB8309D9CD288BC6010B5D5E1196FFDF6E8A4C5ADE6ED55C795E2C576B379E0E47EE450853A1483DB82ED7DB5B96188AD44B1762110DDCA4BF98F7B69BF6F918936533B503C40853115DE9E29E22EAEE77AA203C7509544457BAE4521CA272150917500C2E9EE0F1D52AD22E8ADAA512316957E7743073C12FBA283446BBD45131A4D58EE2EFAAF15597CDB76D39732C67618319CD9C214658446146B3CCFE1DB2CCFE699F2F3B97F777783071AF23F9C8490000000049454E44AE426082)
OnClick: ACP_ChangeViewinFram(Handle(ACP_Test_FrameNode), 'Result')

Variable ACP_Framenode_XYWH
Title: Framenode XYWH
Definition: ACP_GetNodeXYWH(Handle(ACP_Test_FrameNode))
NodeLocation: 1104,208,1
NodeSize: 64,32
WindState: 2,159,353,720,350
ValueState: 2,566,145,537,289,,MIDM

Button ACP_test_show
Title: test show
NodeLocation: 1104,288,1
NodeSize: 64,32
OnClick: CloseWindow(Handle(ACP_Framenode_XYWH), 'Result');~
ACP_Set_att_field(valueState, Handle(ACP_Framenode_XYWH), ACP_GetWindowXYWH_fr(Handle(ACP_Test_FrameNode), ACP_Frame_margin), ACP_XYWH);~
ShowWindow(Handle(ACP_Framenode_XYWH), 'Result')

Button ACP_Close_window
Title: Close window
NodeLocation: 1104,376,1
NodeSize: 64,32
OnClick: CloseWindow(Handle(ACP_Framenode_XYWH), 'Result')

Variable ACP_framenode_XYWH_v
Title: framenode XYWH valuestate
Definition: ACP_Get_att_field(ValueState, Handle(ACP_Framenode_XYWH), ACP_XYWH)
NodeLocation: 1104,120,1
NodeSize: 64,32
ValueState: 2,1645,111,416,303,,MIDM

Variable ACP_Test_node_xywh
Title: Test node xywh
Definition: ACP_GetNodeXYWH(handle(ACP_Test_FrameNode))~
+  Array(ACP_XYWH, [ACP_Frame_margin, ACP_Frame_margin, -4*ACP_Frame_margin, -6*ACP_Frame_margin])~
+ (ACP_Get_att_field(Diagstate, Handle(ACP_Show_View_in_Fra), ACP_XY) + ACP_DiagWindow_offse)[ACP_XY = ACP_XYWH, defVal: 0]~

NodeLocation: 176,400,1
NodeSize: 72,24
WindState: 2,477,398,720,350
ValueState: 2,1329,195,416,303,,MIDM

Variable ACP_Diag_offset
Title: Diag offset
Definition: ACP_Get_att_field(ValueState, Handle(ACP_Framenode_XYWH), ACP_XY)~
 - ACP_Get_att_field(Diagstate, Handle(ACP_Show_View_in_Fra), ACP_XY)
NodeLocation: 1256,208,1
NodeSize: 64,32
ValueState: 2,1388,717,416,303,,MIDM

Button ACP_Object_view2
Title: Object view
NodeLocation: 924,22,1
NodeSize: 12,13
NodeInfo: 1,,,0
WindState: 2,771,316,720,350
NodeColor: 62258,62258,62258
Pict
OnClick: ACP_ChangeViewinFram(Handle(ACP_Test_FrameNode), 'Diagram')

Variable ACP_FrameNodeShowin1
Title: Att_FrameNodeShowingIdx
Definition: ACP_Reset_attribs;~
Att_FrameNodeShowingIdx of ACP_Test_FrameNode
NodeLocation: 1112,40,1
NodeSize: 80,32
ValueState: 2,1301,36,416,303,,MIDM

FormNode ACP_New2131983235
Title: A test of S-687
Definition: 1
NodeLocation: 120,136,1
NodeSize: 104,16
Original: ACP_test_of_S_687

FormNode ACP_New613645187
Title: eg edit table
Definition: 1
NodeLocation: 356,8,1
NodeSize: 92,16
Original: ACP_edit_table

Button ACP_reset_Att_framen
Title: reset Att_framenodeshow
NodeLocation: 1296,40,1
NodeSize: 80,32
OnClick: ACP_Reset_attribs := NOT ACP_Reset_attribs;

Index ACP_Probabilistic_vi
Title: Probabilistic views
Definition: ['MEAN','STAT','CONF','CDFP','PDFP','XCDX','SAMP','SMPL']
NodeLocation: 216,232,1
NodeSize: 72,24
WindState: 2,98,82,720,350

Close ACP_Show_View_in_Fra

Module ACP_Frame_and_tall_n
Title: Frame and tall node styles
Author: Max Henrion
Date: Tue, Jun 1, 2021 1:59 PM
NodeLocation: 136,184,1
NodeSize: 88,24
NodeInfo: 1,0,0
DiagState: 2,923,196,1524,543,17
AcpStyles: show_as_tab: No
{!40300|ProactivelyEvaluate: 5}

Decision ACP_Select_indented_
Title: Select indented module
Definition: Choice(ACP_Indented_module_,15,0)
NodeLocation: 872,568,1
NodeSize: 88,24
Aliases: FormNode ACP_New294878083

Index ACP_Indented_module_
Att_PrevIndexValue: ['> Portfolio planner','    > Oil price','    > Options','        > Indexes','    > Multi- attributes','        > Multi-objective model','    > Opportunities','        > Opportunity model','        > Opportunity inputs','        > Opportunity analysis','    > Portfolios','        > Portfolio optimization','            > Old optimization','        > Portfolio analysis','        > Manual portfolios']
Title: Indented module names
Definition: ACP_Indented_modules(ACP_Top_model)
NodeLocation: 680,560,1
NodeSize: 80,16
ValueState: 2,232,235,430,548,,MIDM

Index ACP_Module_groups
Att_PrevIndexValue: ['Top model only','Top model and its modules','Top modules without top model','Modules with user inputs & outputs','All modules except libraries']
Title: Module groups
Definition: ['Top model only','Top model and its modules','Top modules without top model','Modules with user inputs & outputs','All modules except libraries']
NodeLocation: 720,488,1
NodeSize: 48,24

Decision ACP_Select_module_gr
Title: Select module group
Definition: Choice(ACP_Module_groups, 1, 0)
NodeLocation: 872,488,1
NodeSize: 88,24

Decision ACP_Modules_to_selec
Title: Modules to select
Definition: Choice(self, 1, 0)
NodeLocation: 104,496,1
NodeSize: 48,24
{!40300|DomainExpr: Discrete(['Main model only','Top level modules','Top 2 level modules','All modules except libraries','All modules'],type:'all')}

Variable ACP_Example_value_B
Title: Example value B
Description: Here is a description fo the example value to see how much of it will appear:~
Line 2~
Line 3~
line 4~
Line 5~
Line 6~
Line 7~
Line 8
Definition: ACP_i1^2 + @ACP_abc + ACP_k
NodeLocation: 96,160,1
NodeSize: 72,16
ValueState: 2,956,204,480,361,1,MIDM
Aliases: FormNode ACP_New563313539
AcpStyles: Show_description: 40

Decision ACP_Object_button_on
Title: Object button on Frame node
Definition: Checkbox(0)
NodeLocation: 104,552,1
NodeSize: 88,24

Button ACP_object_button_1
Title: Add object button on Frame
NodeLocation: 1252,48,1
NodeSize: 60,24

Text ACP_Te1205360259
Title: Tall node
NodeLocation: 328,32,-1
NodeSize: 48,24

Text ACP_Te1608013443
Title: Frame node
NodeLocation: 808,28,-1
NodeSize: 128,20

Decision ACP_Apply_styles_to
Title: Apply styles to 
Definition: ['Frame nodes only','User outputs only','User outputs and Frame nodes','All variables']
NodeLocation: 392,568,1
NodeSize: 80,32

Variable ACP_objects_with_ACP
Title: objects with ACPstyles
Definition: #FindObjects('\w.*', attribute:ACPStyles)
NodeLocation: 1248,496,1
NodeSize: 64,24
ValueState: 2,260,266,409,620,,MIDM

Variable ACP_styles_by_object
Title: ACP styles by object
Definition: ACPStyles OF (ACP_objects_with_ACP)
NodeLocation: 1400,496,1
NodeSize: 64,24
ValueState: 2,292,298,1034,846,,MIDM

Button ACP_Init_show_in_fra
Title: Init show in frames
Description: Click to show results or edit tables in frame for each dashboard with a Frame node.~
This button runs automatically when the model is loaded
NodeLocation: 1252,112,1
NodeSize: 60,24
WindState: 2,792,488,720,350
{!40300|ProactivelyEvaluate: 0}
OnClick: ACP_Show_frame_view(Handle(Select_vehicles), Handle(Main_frame), 'Definition');~
ACP_Show_frame_view(Handle(Fuel_cost_per_year), Handle(Frame_fuel_costs), 'Graph');~
ACP_Show_frame_view(Handle(Discounted_lifetime_), Handle(Frame_model), 'Graph');~
ACP_Show_frame_view(Handle(Example_value), Handle(Frame_tall_frame), 'Graph');~


Variable ACP_styles_of_frame_
Title: ACP styles of frame nodes
Definition: ACP_Auto_calc;~
ACP_Get_att(AcpStyles, (ACP_Frame_nodes))
NodeLocation: 1088,536,1
NodeSize: 80,32
ValueState: 2,505,600,578,589,,MIDM

Variable ACP_styles_for_Tall_
Title: ACP styles for Tall node
Definition: ACP_Style_Reset;~
AcpStyles OF ACP_Preview_styles
NodeLocation: 185,406,1
NodeSize: 72,16
WindState: 2,445,219,720,350
ValueState: 2,1388,177,416,303,,MIDM

Button ACP_Blank_ACP_Styles
Title: Blank ACP Styles fo frame nodes
Description: Click to apply the Index menu and description styles to all Frame nodes.
NodeLocation: 368,484,1
NodeSize: 80,28
WindState: 2,328,272,720,350
OnClick: ACP_show_node(Handle(ACP_Preview_styles))

Variable ACP_Diagram_by_frame
Title: Diagram by frame node
Definition: IsIN OF (ACP_Frame_nodes)
NodeLocation: 1424,192,1
NodeSize: 56,40
ValueState: 2,711,292,416,496,0,MIDM

Variable ACP_nodes_by_diagram
Title: nodes by diagram
Definition: METAVAR v[] := ACP_Frame_nodes DO \(Contains OF (ISIN OF (v)))
NodeLocation: 1424,288,1
NodeSize: 48,24

{!50500|FrameNode ACP_Style_lib_frame}
{!50500|Title: Styles for result variables}
{!50500|Description: Example result to show the selected index and description styles.}
{!50500|NodeLocation: 996,240,-18}
{!50500|NodeSize: 316,200}
{!50500|NodeInfo: 1,,,,1,1}
{!50500|WindState: 2,165,37,476,224}
{!50500|NodeFont: Arial Black, 15}
{!50500|AcpStyles: Show_Description: 0.2.2.2~
Show_uncertainty_view: Yes~
Show_table_graph_toggle: Yes~
Show_index_menus: Fly-in~
Show_graph_table_icon: Yes}
{!50500|ProactivelyEvaluate: 4}

FormNode ACP_New2123594627
Title: Example value
Definition: 1
NodeLocation: 136,204,1
NodeSize: 128,20
NodeInfo: 1,,,,,,,184,,,,0,,,,,,
Original: ACP_Preview_styles

FormNode ACP_New563313539
Title: Example value 2
Definition: 1
NodeLocation: 136,240,1
NodeSize: 128,20
NodeInfo: 1,,,,,,,184,,,,,,,,,,
Original: ACP_Example_value_B

FormNode ACP_New294878083
Title: Select indented module
Definition: 0
NodeLocation: 1268,632,1
NodeSize: 284,16
NodeInfo: 1,,,,,,,358
Original: ACP_Select_indented_

FormNode ACP_New1368619907
Title: ResetAutocalc
Definition: 0
NodeLocation: 1308,352,1
NodeSize: 108,16
Original: ACP_model_Reset

FormNode ACP_Fo636231747
Title: Example value
Definition: 1
NodeLocation: 476,240,1
NodeSize: 196,200
NodeInfo: 1,,,,1,1,,,,,,0
NodeColor: 62258,62258,62258
Original: ACP_Preview_styles

Alias Al1324377923
Title: Preview styles for results
Definition: 1
NodeLocation: 184,104,1
NodeSize: 48,24
Original: ACP_Preview_styles

Alias Al787507011
Title: eg i
Definition: 1
NodeLocation: 80,40,1
NodeSize: 48,24
Original: ACP_i1

Alias Al1861248835
Title: eg abc
Definition: 1
NodeLocation: 184,40,1
NodeSize: 48,24
Original: ACP_abc

Alias Al519071555
Title: eg k
Definition: 1
NodeLocation: 80,104,1
NodeSize: 48,24
Original: ACP_k

Close ACP_Frame_and_tall_n

Close ACP_styles_in_progre

Module ACP_Frame_views
Title: ACP Frame views
Author: Max Henrion~
Lumina
Date: Fri, Oct 22, 2021 5:29 PM
NodeLocation: 312,96,1
NodeSize: 72,24
DiagState: 2,260,103,944,448,23,,

Function ACP_Show_frame_view(obj, fr: Handle; view: = 'Result'; graphview: = Null; probView: = 'DEFA')
Title: Show_frame_view(obj, frame, view)
Description: In ACP, show the specified «view» of object «obj» in frame node «fr». ~
In DTA (desktop editions of Analytica), open a window to show the «view» positioned over in frame node «fr».  ~
See Parameter enumerations for possible values of «view». ~
~
If the «view» is 'Result' (default), set «graphview» to 1 to display it as a graph, 0 to display as a table, or Null (default) to use the most recent saved result state. (Irrelevant for Object, diagram, or edit table views.) ~
By default it shows the last saved uncertainty view. Or you can specify «ProbView» as one of the options listed in Parameter Enumerations to select a particular uncertainty view.~
~
If «view» is 'Diagram', if «obj» is a Module, it shows its diagram, otherwise it shows the diagram of the parent module of «obj».~
Save «obj» in Vars by frame node so it can be displayed in initial view of the frame in ACP.
Definition: view := TextSentenceCase(view);~
IF view='Diagram' AND NOT ACP_IsaModule(obj) ~
	THEN obj := IsIn OF obj { Parent diagram of obj}~
ELSE IF view='Graph' THEN graphview := True ~
ELSE IF view='Table' THEN graphview := False;~
~
Local frameShow := Array(Sys_FrameNodeShowIdx,~
		[obj, ~
		 IF view='Result' THEN probView ~
		 ELSE ACP_View_type_by_win[ACP_Window_types=view], ~
		 graphView, 0]);~
{Saved_Frame_views := IF ACP_Frame_nodes=fr THEN frameShow ELSE Saved_Frame_views;}~
Att_FrameNodeShowing OF fr := frameshow;~
IF NOT ACP_is_running THEN BEGIN { For DTA, show the window over the frameNode }~
	Local nxywh := ACP_GetWindowXYWH_fr(fr, ACP_Frame_margin); ~
	CloseWindow(obj, view);~
	Local att :=~
		IF view = 'Diagram' THEN Handle(DiagState)~
		ELSE IF view = 'Object' THEN Handle(WindState)~
		ELSE IF view = 'Definition' THEN Handle(Defnstate)~
		ELSE Handle(valueState);~
	ACP_Set_att_field(att, obj, nxywh, ACP_XYWH);~
	ShowWindow(obj, view);~
END
NodeLocation: 320,168,1
NodeSize: 136,24
WindState: 2,846,-19,832,1061
{!40500|ParameterEnumeration: view~
	"Diagram"| The Diagram window of «obj» if it is a module, otherwise the diagram of its parent module.~
	"Object"| Object window for «obj».~
	"Result"| (default) Result window for «obj» as a table or graph, based on last saved view.~
	"Graph"| The graph view of the result for «obj» (or table view if it is a scalar).~
	"Table"| The value as a table result. ~
	"Definition"| The definition of «obj» as an edit table, if it is one.~
probview~
	'DEFA'| (default) Show the default result view (as saved with result window)~
	'MIDM'| Mid (deterministic) value~
	'MEAN'| Mean~
	'STAT'| Statistics view~
	'CONF'| Probability or confidence bands~
	'CDFP'| Cumulative probability distribution~
	'PDFP'| Probability density or probability mass view~
	'XCDZ'| Exceedance probability distribution~
	'SAMP'| Sample view~
	'SMPL'| Sample view, even if if is non-probabilistic.}

Constant ACP_View_type_by_win
Title: View type by window type
Description: For each Window type, it gives the corresponding view type -- a code used in the Att_Framenodeshowing attribute to determine the view for the object shown in the frame node. 
Definition: Table(ACP_Window_types)('DIAG','OBJV','MIDM','MIDM','MIDM','DFNM')
NodeLocation: 96,168,1
NodeSize: 72,24
WindState: 2,751,783,720,364
DefnState: 2,1826,86,416,303,0,DFNM
{!40700|Att_CellFormat: CellEntry(0,0,1)}

Index ACP_Window_types
Att_PrevIndexValue: ['Diagram','Object','Result','Graph','Table','Definition']
Title: Window types
Definition: ['Diagram','Object','Result','Graph','Table','Definition']
NodeLocation: 96,232,1
NodeSize: 72,24

Decision ACP_Frame_margin
Title: Frame_margin
Description: Used in DTA, the margin around a Result window within its Frame node.
Definition: 8
NodeLocation: 96,104,1
NodeSize: 72,24
WindState: 2,684,267,720,350

Decision ACP_DiagWindow_offse
Title: DiagWindow offset
Description: The location of the top left corner of a Diagram relative to the top left corner of the Window containing the diagram. Adjusts for whether show hierarchy bar is set or not.
Definition: Array(ACP_XY, [8,30 + 25*ShowHier])
NodeLocation: 96,32,1
NodeSize: 72,24
WindState: 2,219,448,720,350
ValueState: 2,1436,729,416,303,,MIDM

Function ACP_GetWindowXYWH_fr(obj: Handle; margin: = 0)
Title: GetWindowXYWH_from_node(obj, margin)
Description: Return the top left, X, Y, width, W and height, H for a window that will fit over the node of object «obj»,  ~
allowing for a «margin» around it, and offset with the position of the parent diagram window of «obj».~
Used to simulate use of ACP Frame node in DTA by showing a result or other window over the Frame node.
Definition: ACP_GetNodeXYWH(obj)~
+  Array(ACP_XYWH, [margin, margin, -2*margin - 15, -2*margin - 39])~
+ (ACP_Get_att_field(Diagstate, ISIN OF obj, ACP_XY) ~
	+ ACP_DiagWindow_offse)[ACP_XY = ACP_XYWH, defVal: 0]
NodeLocation: 320,104,1
NodeSize: 136,24
WindState: 2,857,202,800,430

Function ACP_ChangeViewinFram(fr: Handle; view: = 'Result')
Title: ChangeViewinFrame(frame, view)
Description: In ACP, change the view to «view» of the object shown in frame node «fr»  See Parameter enumerations for possible values of «view».  In desktop editions of Analytica, it opens a window to show the  «view» over the frame.
Definition: ACP_Show_frame_view((Att_FrameNodeShowingIdx of fr)[@Sys_FrameNodeShowIdx=1], fr, view)
NodeLocation: 320,232,1
NodeSize: 136,24
WindState: 2,1529,32,897,771
{!40500|ParameterEnumeration: view~
	"Diagram"| The Diagram window of «obj» if it is a module, otherwise the diagram of its parent module.~
	"Object"| Object window for «obj».~
	"Result"| (default) Result window for «obj» as a table or graph, based on last saved view.~
	"Graph"| The graph view of the result for «obj» (or table view if it is a scalar).~
	"Table"| The value as a table result. ~
	"Definition"| The definition of «obj» as an edit table, if it is one.~
probview~
	'DEFA'| (default) Show the default result view (as saved with result window)~
	'MIDM'| Mid (deterministic) value~
	'MEAN'| Mean~
	'STAT'| Statistics view~
	'CONF'| Probability or confidence bands~
	'CDFP'| Cumulative probability distribution~
	'PDFP'| Probability density or probability mass view~
	'XCDZ'| Exceedance probability distribution~
	'SAMP'| Sample view~
	'SMPL'| Sample view, even if if is non-probabilistic.}

Button ACP_Init_frame_views
Title: Init frame views
Description: Click to initialize each frame to show its saved view (Graph, Table, Object, Diagram etc.) of a variable.
NodeLocation: 584,112,1
NodeSize: 64,32
WindState: 2,1076,123,687,441
{!40300|ProactivelyEvaluate: 32}
OnClick: LocalAlias v := (ACP_Frame_nodes) DO BEGIN ~
	Local fv := ACP_Saved_Frame_view[ACP_Frame_nodes=v];~
	Local obj := fv[Sys_FrameNodeShowIdx= 'obj'];~
	Att_FrameNodeShowing OF v := ~
		IF IsNull(obj) THEN Null ~
	 	ELSE BEGIN~
			Array(Sys_FrameNodeShowIdx, ~
			[IF IsNull(obj) THEN Null ELSE HandleFromIdentifier(obj),~
			fv[Sys_FrameNodeShowIdx='view'],~
			fv[Sys_FrameNodeShowIdx='graph'],~
			Null~
			])~
		END;~
	ACP_Set_Autocalc(v, acMid: True, ~
		acProb: SetContains(\ACP_Probabilistic_vi, fv[Sys_FrameNodeShowIdx='view']))~
END;~
~


Variable ACP_1st_var_by_frame
Title: Initial var by frame node
Description: The initial variable to show in each frame node when opening a tab with that Frame node.
Definition: Table(ACP_Frame_nodes)()
NodeLocation: 96,288,1
NodeSize: 72,24
WindState: 2,128,191,720,350
DefnState: 2,1554,252,417,490,0,DFNM
ValueState: 2,840,63,691,435,,MIDM
MetaOnly: 1

Function ACP_frame_view(fr, obj: Handle; view: Text = 'Result')
Title: Set_frame_view(fr, obj, view)
Description: Set frame «fr» to show view «view» of object «obj»
Definition: IF NOT SetContains(\ACP_Frame_nodes, fr) THEN ACP_Frame_nodes := Concat(ACP_Frame_nodes, fr);~
Att_FrameNodeShowing OF fr := ~
	Array(Sys_FrameNodeShowIdx,~
		[Identifier OF obj, ~
		 IF view='Result' THEN ACP_Probview ~
		 ELSE ACP_View_type_by_win[ACP_Window_types=view], ~
		 Null, Null]);
NodeLocation: 320,352,1
NodeSize: 136,24
WindState: 2,893,446,745,449

Button ACP_initial_frames_t
Title: Set initial frames to autocalc on load
NodeLocation: 744,184,1
NodeSize: 72,32
WindState: 2,98,82,720,350
OnClick: ACP_Set_Autocalc(Handle(ACP_Init_frame_views), evalOnLoad: True)

Variable ACP_Saved_Frame_view
Title: Saved Frame views
Description: A table that saves the information in Att_FrameNodeShowing for each Frame node, used to initialize Frame nodes to show the objects when first viewed in ACP. (Because ACP doesn't save that information with the model yet.)
Definition: Table(ACP_Frame_nodes)()
NodeLocation: 96,416,1
NodeSize: 72,24
WindState: 2,214,76,491,436
DefnState: 2,1041,82,748,317,0,DFNM
ValueState: 2,1235,131,729,493,,MIDM
ReformDef: [Sys_FrameNodeShowIdx,0]
ReformVal: [Sys_FrameNodeShowIdx,0]
Att_ResultSliceState: [ACP_I,9,ACP_J,5,ACP_Frame_nodes,1,Sys_FrameNodeShowIdx,1]
Att_EditSliceState: [ACP_I,8,ACP_J,8,ACP_Frame_nodes,1,Sys_FrameNodeShowIdx,1]
MetaOnly: 1

Button ACP_test_set_frame
Title: test set frame
NodeLocation: 584,360,1
NodeSize: 64,32
OnClick: Att_FrameNodeShowing OF ACP_Test_FrameNode := ACP_Saved_Frame_view[ACP_Frame_nodes=Handle(ACP_Test_FrameNode)]

Button ACP_Save_Frame_views
Title: Save frame views
Description: Click to save the current view of a variable for each frame node. These are used to initialize the frames to show the same views when you start the model in future ACP sessions. It gives a warning if any Frame node has no view shown.
NodeLocation: 584,184,1
NodeSize: 64,32
WindState: 2,887,46,767,711
OnClick: ACP_Saved_Frame_view :=~
	LocalAlias fr := (ACP_Frame_nodes) DO BEGIN~
		Local av := Att_FrameNodeShowing OF fr;~
		IF av=Null THEN Null ~
		ELSE BEGIN~
			LocalAlias obj := av[Sys_FrameNodeShowIdx= 'obj'];~
			Array(Sys_FrameNodeShowIdx, ~
			[IF IsNull(obj) THEN Null ELSE Identifier Of obj,~
				av[Sys_FrameNodeShowIdx='view'],~
				av[Sys_FrameNodeShowIdx='graph'],~
				Null~
				])~
			END~
		END;~
INDEX nullViews := Subset(ACP_Saved_Frame_view[Sys_FrameNodeShowIdx= 'obj']=Null);~
~
IF Size(nullViews)>0 THEN Msgbox('These Frame nodes contain no view variable:~
 ~
' & JoinText('Frame node '&nullViews & ' in Diagram '& Title OF (IsIn OF (nullViews)), nullViews, ', ~
')& '. ~
~
You may want to display a view in each Frame ~
and then try clicking this button again.', 0, 'Warning')

Button ACP_frame_views_to_b
Title: Set frame views to blank
Description: Click to initialize each frame view (Att_FrameNodeShowing) to Null.
NodeLocation: 584,256,1
NodeSize: 64,32
WindState: 2,1308,158,687,441
{!40300|ProactivelyEvaluate: 0}
OnClick: LocalAlias v := (ACP_Frame_nodes) ~
DO Att_FrameNodeShowing OF v := null

Button ACP_saved_Frame_vi1
Title: Set saved Frame views to null
NodeLocation: 744,112,1
NodeSize: 72,32
OnClick: ACP_Saved_Frame_view := 0

Alias Al1198090051
Title: All Frame nodes
Definition: 1
NodeLocation: 96,352,1
NodeSize: 72,24
Original: ACP_Frame_nodes

Variable ACP_Probview
Title: ACP Probview
Definition: Null
NodeLocation: 320,288,1
NodeSize: 72,24
NodeInfo: 1,,,,,,,0,,,,,,0

Close ACP_Frame_views

Close ACP_style_lib_detai1

Text ACP_Te41
Title: Browser window size
NodeLocation: 212,272,-12
NodeSize: 204,48
NodeInfo: 1,,,,1,1
WindState: 2,165,37,476,224
NodeFont: Arial Black, 15

Text ACP_Te11
Title: ACP Navigation Styles
NodeLocation: 212,112,-14
NodeSize: 204,104
NodeInfo: 1,,,,1,1
WindState: 2,1274,740,476,224
NodeFont: Arial Black, 15

Variable ACP_Variable_example
Title: Variable
Description: An example variable node to illustrate shadow and/or bevel styles.
Definition: ACP_Decision_example + 10
NodeLocation: 760,384,1
NodeSize: 48,24
NodeInfo: 1,0,,,,,,,0,,,,,,,,,
WindState: 2,98,82,720,350
{!60005|Att_AttsToShow: Object Object, Object Attribute, Attribute CellFormatExpression}

Decision ACP_Decision_example
Title: Decision
Description: An example decision node to illustrate shadow and/or bevel styles.
Definition: 100
NodeLocation: 632,384,1
NodeSize: 48,24
NodeInfo: 1,0,,,,,,,0,,,,,,,,,
WindState: 2,98,82,720,350

Module ACP_esoteric_styles
Title: Esoteric ACP styles
Description: These are rare, obscure, and not yet implemented options. For most purposes, you can ignore them.
Author: Max Henrion
Date: Sun, May 30, 2021 9:57 AM
NodeLocation: 312,464,1
NodeSize: 72,24
NodeInfo: 1,0
DiagState: 2,509,144,826,651,17,10
WindState: 2,98,82,720,350
AcpStyles: show_as_tab: No
{!40300|ProactivelyEvaluate: 4}

Text ACP_Appearance_of_th
Title: Balloon help
NodeLocation: 200,371,-4
NodeSize: 192,68
NodeInfo: 1,,,,1,1
WindState: 2,102,83,476,224
NodeFont: Arial Black,15

Text ACP_Te584569731
Title: Rarely used ACP styles
NodeLocation: 200,152,-12
NodeSize: 192,144
NodeInfo: 1,,,,1,1
WindState: 2,165,37,476,224
NodeFont: Arial Black, 15

Text ACP_Appeara577753987
Title: Not yet implemented
NodeLocation: 588,224,-4
NodeSize: 188,216
NodeInfo: 1,,,,1,1
WindState: 2,102,83,476,224
NodeFont: Arial Black,15

FormNode ACP_New177437571
Title: Balloon delay
Definition: 0
NodeLocation: 192,416,1
NodeSize: 176,16
NodeInfo: 1,,,,,,,62,,,,,,,,,
Original: ACP_Balloon_delay

FormNode ACP_New1251179395
Title: Show node id in balloon
Definition: 0
NodeLocation: 192,352,1
NodeSize: 176,16
Original: ACP_Identifier_in_ba

FormNode ACP_New714308483
Title: Show node definition in balloon?
Definition: 0
NodeLocation: 192,384,1
NodeSize: 176,16
Original: ACP_Definition_in_ba

FormNode ACP_New445873027
Title: Show diagram title?
Definition: 0
NodeLocation: 192,136,-10
NodeSize: 176,16
Original: ACP_Show_dash_title

FormNode ACP_New1519614851
Title: Hide banner?
Definition: 0
NodeLocation: 584,104,1
NodeSize: 176,16
Original: ACP_Banner_logo_and_

FormNode ACP_New982743939
Title: Show outline?
Definition: 0
NodeLocation: 192,56,-5
NodeSize: 176,16
Original: ACP_Show_the_model_t

FormNode ACP_New110328707
Title: Hide modules in DTA and aCP
Definition: 0
NodeLocation: 192,204,1
NodeSize: 176,20
NodeInfo: 1,,,,,,,78,,,,,,,,,
Original: ACP_Hide_nontab_modu

FormNode ACP_New1184070531
Title: Hide "Save" button?
Definition: 0
NodeLocation: 584,64,1
NodeSize: 176,16
Original: ACP_Hide_Save_butn

FormNode ACP_Fo753125251
Title: Include top level diagram as tab
Definition: 0
NodeLocation: 192,168,1
NodeSize: 176,16
Original: ACP_IncludTop_As_Tab

FormNode ACP_Fo394256707
Title: Show title
Definition: 0
NodeLocation: 192,96,1
NodeSize: 176,16
Original: Show_result_titles

Close ACP_esoteric_styles

Button ACP_set_ACP_style_mo
Title: Set ACP style model defaults
Description: Click to reset all ACP styles to their default values.~
Do this before saving the ACP Style library for use in other models.
NodeLocation: 112,468,1
NodeSize: 72,24
WindState: 2,-1,79,549,652
OnClick: ACP_styles_Intro;~
ACP_Navi_style := 'Top_tabs';~
~
{Definition OF Show_modules_as_tabs := }~
ACP_Outline_view := False;~
ACP_Hierarchy_bar_ac := True;~
ACP_Show_dash_title := False;~
ACP_ToolbarTabs := False;~
ACP_Screen_size := 'Browser window';~
~
ACP_Shadows := True;~
ACP_Bevels := False;~
ACP_node_radius := 16;~
~
Show_result_titles := True;~
ACP_Show_uncertainty := True;~
ACP_graph_toggle_def := True; ~
ACP_Default_Descript := 20;~
ACP_Default_index_me := 'Fly-in';~
~
ACP_Autocalc_default := 'None';~
ACP_Auto_calc := False;~
~
~
~
~
ACP_Show_dash_title := False;~
ACP_Show_the_model_t := True;~
ACP_Banner_logo_and_ := False;~
ACP_Node_highlight_e := 'Outline';~
ACP_Hide_nontab_modu := False;~
ACP_Identifier_in_ba := False; ~
ACP_Definition_in_ba := False; ~
ACP_Balloon_delay := 0.5;~
ACP_Hide_Save_butn := False;~
ACP_Set_ACP_styles_a;~
~
~


Text ACP_Te1647961731
Title: Node styles
NodeLocation: 628,416,-17
NodeSize: 204,88
NodeInfo: 1,,,,1,1
WindState: 2,165,37,476,224
NodeFont: Arial Black, 15

Text ACP_Te424011395
Title: Default styles for tables and graphs
NodeLocation: 628,164,-12
NodeSize: 204,156
NodeInfo: 1,,,,1,1
WindState: 2,165,37,476,224
NodeFont: Arial Black, 15
{!60005|Att_AttsToShow: Object Object, Object Attribute, Attribute AcpStyles}

Button ACP_styles_for_this_
Title: ACP styles for this model
Description: Click to see the ACP Styles set for this model.
NodeLocation: 1312,24,-19
NodeSize: 112,16
WindState: 2,217,316,720,350
NodeColor: 0xffbfbfbf
OnClick: ACP_Set_att(Nodecolor, Handle(ACP_styles_for_this_), '62258,62258,62258');~
ACP_Set_att(Nodecolor, ListOfHandles(ACP_Preview_result, ACP_styles_Intro), '49151,49151,49151');~
Description OF ACP_see_model_styles := ACPStyles OF (ACP_Top_model);~
ACP_Show_node(Handle(ACP_see_model_styles));~
ACP_Hide_node(Handle(ACP_Styles_lib_intro));~
ACP_Hide_node(Handle(ACP_Preview_styles),what:'UserOutputs');

Text ACP_see_model_styles
Title: ACP Styles set for this model
Description: Navigation_style: Top_tabs~
Show_description: 20~
Show_index_menus: Fly-in~
Show_outline: No~
Show_tabs: No~
Use_top_diagram_size: No~
Node_drop_shadow: Yes~
Bevel_node_border: No~
Show_title: Yes~
Show_uncertainty_view: Yes~
Show_graph_table_icon: Yes
NodeLocation: 1144,272,17
NodeSize: 304,236
NodeInfo: 1,,,,1,1,,,,,,1
WindState: 2,76,132,721,523
NodeColor: 62258,62258,62258

Module ACP_Set_non_default_
Title: Set non-default styles
Description: To view and set index and description styles for tables and graphs in tall and framenodes to override the defaults for selected nodes.
Author: Max Henrion
Date: Wed, Jul 7, 2021 11:39 PM
NodeLocation: 624,288,1
NodeSize: 96,24
NodeInfo: 1,0,0
DiagState: 2,506,194,1121,573,23,10,
AcpStyles: show_as_tab: No
{!40300|ProactivelyEvaluate: 4}

FormNode ACP_Fo1217742403
Title: User outputs w non default Autocalc
Definition: 0
NodeLocation: 248,376,1
NodeSize: 232,16
NodeInfo: 1,,,,,,,144,,,,,,0
Original: ACP_User_outputs_w_n

FormNode ACP_Fo2023048771
Title: Set Autocalc by node
Definition: 0
NodeLocation: 248,408,1
NodeSize: 232,16
NodeInfo: 1,,,,,,,219,,,,,,0,,,,
Original: ACP_Autocalc_by_no1

Text ACP_Te82809731
Title: Set non-default table and graph styles for selected objects
NodeLocation: 260,144,-1
NodeSize: 252,136
NodeInfo: 1,,,,1,1

FormNode ACP_New1771273091
Title: Objects w non default styles
Definition: 0
NodeLocation: 248,216,1
NodeSize: 232,16
NodeInfo: 1,,,,,,,224
Original: ACP_Objects_w_non_de

FormNode ACP_Fo1656047171
Title: Set styles by node
Definition: 0
NodeLocation: 248,248,1
NodeSize: 232,16
NodeInfo: 1,,,,,,,224,,,,,,,,,,
Original: ACP_styles_by_node2

{!50500|FrameNode ACP_Te1552762435}
{!50500|NodeLocation: 804,252,-1}
{!50500|NodeSize: 284,244}
{!50500|NodeInfo: 1,,,,1,1}
{!50500|WindState: 2,98,82,720,350}
{!50500|ProactivelyEvaluate: 4}

FormNode ACP_Fo938359619
Title: Default Autocalc option
Definition: 1
NodeLocation: 248,344,1
NodeSize: 232,16
NodeInfo: 1,,,,,,,144,,,,,,0
Original: ACP_Default_Autoca1

FormNode ACP_Fo387857219
Title: Default index menus
Definition: 1
NodeLocation: 248,182,1
NodeSize: 232,16
NodeInfo: 1,,,,,,,104,,,,,,0
Original: ACP_Default_index_me

FormNode ACP_Fo1461599043
Title: Default show Description
Definition: 1
NodeLocation: 248,150,1
NodeSize: 232,16
NodeInfo: 1,,,,,,,174,,,,,,0,,,,
Original: ACP_Default_Descript

FormNode ACP_Fo924728131
Title: Show Uncertainty view
Definition: 1
NodeLocation: 248,86,1
NodeSize: 232,16
Original: ACP_Show_uncertainty

FormNode ACP_Fo1998469955
Title: Show Graph/ Table toggle icon
Definition: 1
NodeLocation: 248,118,1
NodeSize: 232,16
Original: ACP_graph_toggle_def

FormNode ACP_Fo253639491
Title: Show title
Definition: 1
NodeLocation: 248,54,1
NodeSize: 232,16
Original: Show_result_titles

Text ACP_Te1436433219
Title: Set Autocalc for non-default objects
NodeLocation: 260,392,-1
NodeSize: 252,104
NodeInfo: 1,,,,1,1

Close ACP_Set_non_default_

Decision ACP_Decision_exampl1
Title: Decision
Description: An example decision node to illustrate shadow and/or bevel styles.
Definition: 100
NodeLocation: 640,392,-16
NodeSize: 48,24
NodeInfo: 1,0,0,0,0,,,,,,,1
NodeColor: 55705,55705,55705

Variable ACP_Variable_exampl1
Title: Variable
Description: An example variable node to illustrate shadow and/or bevel styles.
Definition: ACP_Decision_example + 10
NodeLocation: 768,392,-15
NodeSize: 48,24
NodeInfo: 1,0,0,0,0,,,,,,,1
NodeColor: 52428,52428,52428

Text ACP_Styles_lib_intro
Title: How to use the ACP Styles library
Description: Analytica Cloud Platform (ACP) offers several user-interface styles and options to navigate models, and display tables and graphs and nodes in a diagram  beyond those available in desktop Analytica. This library lets you select these ACP styles for your model.  Here's how to use it:~
~
1. While running your model in desktop Analytica, import this ACP Styles library into your model  using menu File > Add library ~
and select ACP Styles.ana~
~
2. Upload the model into ACP using menu File > Publish to Cloud... (or from the ACP Models view, click the Upload button)~
~
3. Run the model in ACP.~
~
4. Click ACP Styles module to open it (or click ACP Styles tab if ACP is using a Tab navigation style.~
~
 5. Select styles from the menus and check boxes. You can immediately see their effects in ACP. Feel free to experiment. You can see a description of each option in the usual way: Move your mouse cursor over each control to see its description in a balloon.~
~
Visit <a href="https://wiki.analytica.com/index.php?title=ACP_Style_Library">ACP Styles library</a> for more information in the Analytica wiki.
NodeLocation: 1144,272,11
NodeSize: 304,236
NodeInfo: 1,,,,1,1,,,,,,1
WindState: 2,265,211,631,525
NodeColor: 62258,62258,62258
{!60005|Att_AttsToShow: Object Object, Object Attribute, Attribute AcpStyles}

FormNode ACP_New1720941443
Title: Show outline?
Definition: 0
NodeLocation: 212,88,-5
NodeSize: 196,16
NodeInfo: 1,,,,,,,,,,,1
Original: ACP_ToolbarTabs

FormNode ACP_New1452505987
Title: Navigation style
Definition: 0
NodeLocation: 212,56,1
NodeSize: 196,16
NodeInfo: 1,,,,,,,200
Original: ACP_Navi_style

FormNode ACP_New915635075
Title: Minimum Resolution
Definition: 0
NodeLocation: 212,264,1
NodeSize: 196,16
NodeInfo: 1,,,,,,,200,,,,,,0,,,,
Original: ACP_Screen_size

FormNode ACP_New1989376899
Title: Show hierarchy
Definition: 0
NodeLocation: 212,184,10
NodeSize: 196,16
Original: ACP_Hierarchy_bar_ac

FormNode ACP_New244546435
Title: Show outline?
Definition: 0
NodeLocation: 500,368,1
NodeSize: 68,16
Original: ACP_Shadows

FormNode ACP_New1318288259
Title: Show outline?
Definition: 0
NodeLocation: 500,400,1
NodeSize: 68,16
Original: ACP_Bevels

FormNode ACP_New781417347
Title: Outline tree on left
Definition: 0
NodeLocation: 212,152,1
NodeSize: 196,16
NodeInfo: 1,,,,,,,,,,,0
Original: ACP_Outline_view

FormNode ACP_New1855159171
Title: Set Text and Frame node corner radius to
Definition: 0
NodeLocation: 628,440,1
NodeSize: 196,16
NodeInfo: 1,,,,,,,104
Original: ACP_node_radius

FormNode ACP_New512981891
Title: Apply radius to
Definition: 0
NodeLocation: 628,472,1
NodeSize: 196,16
NodeInfo: 1,,,,,,,216
Original: ACP_object_types

FormNode ACP_New1586723715
Title: Dash size
Definition: 1
NodeLocation: 212,296,1
NodeSize: 196,16
NodeInfo: 1,,,,,,,124,,,,,,,,,
Original: ACP_dashboard_size

FormNode ACP_New831748995
Title: Don't show module s a tabs
Definition: 0
NodeLocation: 212,88,1
NodeSize: 196,16
NodeInfo: 1,,,,,,,200,,,,0,,0
Original: ACP_Show_modules_as_

FormNode ACP_New160660355
Title: Autocalc for
Definition: 0
NodeLocation: 628,232,1
NodeSize: 196,16
NodeInfo: 1,,,,,,,174,,,,,,0,,1
Original: ACP_Autocalc_default

FormNode ACP_New93551491
Title: Default index menus
Definition: 0
NodeLocation: 628,176,1
NodeSize: 196,16
NodeInfo: 1,,,,,,,150,,,,,,0
Original: ACP_Default_index_me

FormNode ACP_New1167293315
Title: Default show Description
Definition: 0
NodeLocation: 628,144,1
NodeSize: 196,16
NodeInfo: 1,,,,,,,174,,,,,,0
Original: ACP_Default_Descript

FormNode ACP_Fo1157168003
Title: Show Uncertainty view
Definition: 0
NodeLocation: 628,56,1
NodeSize: 196,16
Original: ACP_Show_uncertainty

FormNode ACP_Fo620297091
Title: Show Graph/ Table toggle icon
Definition: 0
NodeLocation: 628,88,1
NodeSize: 196,16
Original: ACP_graph_toggle_def

Picture ACP_Pi417671043
NodeLocation: 764,87,-2
NodeSize: 12,12
Pict: (000000000000001300130004BD02000089504E470D0A1A0A0000000D4948445200000013000000120802000000366E723E000000017352474200AECE1CE90000000467414D410000B18F0BFC6105000000097048597300000EC300000EC301C76FA8640000024249444154384F6378462E00E93C7BF67C67CF84C4B49CCCDCA2ACBC92ACFC122023392317884022F92540412003A800A80CA818A1B3ADB36FFACCB9A7CF9EBF76FDE6F51B2074E9F295ED3B770311900111014A011500950115237426A4669D3E73EED7AFDFFF61E0C78F1FD76FDC002220032AF4FF3F50015059424A164227D02540238172FFFEFDFFF9EBCF976FBF5EBFFB7CF6C21520FAF0F1CBEFDF7F213A81E0DAF51B193945089D406F00DD0394006A3B74F6496AFDEE90C20D09A58B81A8A873EFC3679F20DA8000A80CA81849673E54E78F9F7FF69C781859B6CD236D5558EE7C204ACB5D73A262FDB3FA8D1074B8784E5A582A42675466CE9C23BB363DB9BEFEC1D59EED27028A37C27526272CD9EF31E996530F04ED72A94FF68C45E8B48D8B5698562EB6BA496265B3FAE4094EB9CBBDD25786E7CE03A2E4C4C57BBD265E77E986A01DAEF549C83ADD23A3FD9ACBFC2737044C6C8C686F4FAA98905E3231A7BC1788CA0AFBA665742C4B6981A009F19551FE31089DF6B1D16A53CAE55634C92F6BD69DD8EF9EB7C42F735974FE6C204A4959B8CBAFFF826717046DF6AC4BF442B2D3262E46764685D0DA2691552D2A9327DAE7AE20D69F3671D1E4EA8C8D969D5E4E8CCE9D2EA821E41113A73CA94C7855237E9DD79CBA36BAD7C604C5237436B47539D7140235CB4FADD06E69764C9DE69E303D38B50F88A263262FF368013A12681B505B6758494B4B1742E7C953A7819A8136039D6D1F19EF1294E41690EC19980844BEFE8931DEF140BF011D191B140FD406548CD0490E78F60C00CB80958EE047DE180000000049454E44AE426082)

Picture ACP_Pi1743071107
NodeLocation: 624,175,-2
NodeSize: 8,12
Pict

FormNode ACP_Fo1730858883
Title: Tab color
Definition: 0
NodeLocation: 212,120,1
NodeSize: 196,16
NodeInfo: 1,,,,,,,200,,,,0,
Original: ACP_Tab_color

FormNode ACP_preview_Tall_nod
Title: Example value
Definition: 1
NodeLocation: 1144,270,1
NodeSize: 304,234
NodeInfo: 1,,,,1,1,,,,,,0
WindState: 2,98,82,720,350
NodeColor: 62258,62258,62258
Original: ACP_Preview_styles

GraphStyleTemplate ACP_MH2
Title: MH2
GraphSetup: Graph_ColorSeq:[0,31488,35328,21248,39936,60928,42496,22784,55552,54528,25088,36096,57088,27648,18944,55552,43264,20736,49152,50944,15616,30208,42240,18176,27904,49152,37120,35072,50176,61184,55808,39680,59392,53504,32256,36608,58368,43264,29696,60672,55808,28672,46848,54784,39424,43264,52480,48128,55552,55552,55552,45824,45824,45824,29440,29440,29440,6400,6400,6400]

GraphStyleTemplate ACP_w_logo_colors
Title: MH w logo colors
GraphSetup: Graph_ColorSeq:[14848,35584,36352,0,32768,65280,33792,15616,46080,50944,16128,25600,63488,17664,8960,65280,37120,11008,29696,38144,14080,19200,47616,46848,27904,49152,37120,35072,50176,61184,55808,39680,59392,53504,32256,36608,58368,43264,29696,60672,55808,28672,46848,54784,39424,43264,52480,48128,55552,55552,55552,45824,45824,45824,29440,29440,29440,6400,6400,6400]

Button ACP_Save_current_fra
Title: Save current frame views
Description: Click to save the currently viewed variable for each frame node so that it will show the same views in each frame first when you restart this model in future ACP sessions.~
It gives a warning for any Frame node has no variable currently viewed.
NodeLocation: 312,364,1
NodeSize: 72,24
WindState: 2,510,42,767,711
OnClick: IF NOT ACP_is_running THEN MsgBox('This button only works in ACP.~
To save the current views in Frame nodes: ~
  1. Run the model in ACP. ~
  2. Show a result in each Frame node. ~
  3. Then click this button to save the variable viewed in each Frame node.~
  4. Finally, select Save or Save as.. to save the model so that~
     these Frame views will appear when you restart the model.', ~
	0, 'Warning')~
ELSE BEGIN~
	ACP_Saved_Frame_view :=~
		LocalAlias fr := (ACP_Frame_nodes) DO BEGIN~
			Local av := Att_FrameNodeShowing OF fr;~
			IF av=Null THEN Null ~
			ELSE BEGIN~
				LocalAlias obj := av[Sys_FrameNodeShowIdx= 'obj'];~
				Array(Sys_FrameNodeShowIdx, ~
				[IF IsNull(obj) THEN Null ELSE Identifier Of obj,~
					av[Sys_FrameNodeShowIdx='view'],~
					av[Sys_FrameNodeShowIdx='graph'],~
					Null~
					])~
				END~
			END;~
	INDEX nullViews := Subset(ACP_Saved_Frame_view[Sys_FrameNodeShowIdx= 'obj']=Null);~
	~
	IF Size(nullViews)>0 THEN Msgbox('These Frame nodes contain no view variable: ~
	' & JoinText('Frame node '&nullViews & ' in Diagram '& Title OF (IsIn OF (nullViews)), nullViews, ', ~
	')& '. ~
	~
	You may want to display a view in each Frame ~
	and then try clicking this button again.', 0, 'Warning')~
END

Text ACP_Te820069955
NodeLocation: 212,416,-17
NodeSize: 204,88
NodeInfo: 1,,,,1,1
WindState: 2,165,37,476,224
NodeFont: Arial Black, 15

Button ACP_Reset_changes
Title: Reset to reflect model changes
Description: Click so that all ACP Style options reflect any modules or nodes that you may have added or removed in this model.~
~
It ensures that:~
	 "Show modules as tabs" reflects any new or removed modules at the top level.~
	"Screen size" reflects any changes to Diagram window sizes (when set to Fit main model or "Fit largest windows), and t~
	"Set styles by node" or "Set autocalc by node" reflect any new or removed modules or user output variables.
NodeLocation: 112,364,1
NodeSize: 72,24
WindState: 2,758,398,731,411
OnClick: ACP_model_Reset := NOT ACP_model_Reset

Button ACP_styles_Intro
Title: Intro
Description: Click to see an introduction on how to use this ACP Styles library.
NodeLocation: 916,24,-20
NodeSize: 60,16
WindState: 2,780,320,720,350
NodeColor: 0xffbfbfbf
OnClick: ACP_Set_att(Nodecolor, Handle(ACP_styles_Intro), '62258,62258,62258');~
ACP_Set_att(Nodecolor, ListOfHandles(ACP_Preview_result, ACP_styles_for_this_), '49151,49151,49151');~
ACP_Show_node(Handle(ACP_Styles_lib_intro));~
ACP_Hide_node(Handle(ACP_see_model_styles,));~
ACP_Hide_node(Handle(ACP_Preview_styles),what:'UserOutputs');

Button ACP_Preview_result
Title: Preview result styles
Description: Click to see the ACP Styles set for this model.
NodeLocation: 1088,24,-18
NodeSize: 112,16
WindState: 2,271,188,720,350
NodeColor: 0xfff3f3f3
OnClick: ACP_Set_att(Nodecolor, Handle(ACP_Preview_result), '62258,62258,62258');~
ACP_Set_att(Nodecolor, ListOfHandles(ACP_styles_Intro, ACP_styles_for_this_), '49151,49151,49151');~
ACP_Show_node(Handle(ACP_Preview_styles),what:'UserOutputs');~
ACP_Hide_node(ListOfHandles(ACP_see_model_styles, ACP_Styles_lib_intro));~
{ShowWindow(ACP_Preview_styles, 'Result')}

Picture Pi887605059
NodeLocation: 783,88,-2
NodeSize: 12,12
Pict: (000000060003001700140004C802000089504E470D0A1A0A0000000D49484452000000170000001708020000006F4843F7000000017352474200AECE1CE90000000467414D410000B18F0BFC6105000000097048597300000EC300000EC301C76FA8640000024D49444154384FAD945B4F1A5110C7FBF58C0657CB8A1529A994AAD5782B505624247D40418A9AA626BE797B68BD54DBBE72FB021568BF066FFB0272697FE7CC4A428A0D49F967B299FFEC99FF999D397B9ED8B65DABD57E942BD6D63BC3F48E4D78C60C65232EF788CB1CD53E8603252894652C268544D2950A5EE0D5B2D71F0C47E3C95426B5BB873D9F9B8FC6123BE9AC501C2841A12C6331292492AE5490841F9F9C150A8562B1C813AC872C22B95C4E280E94A05059468444D2950AB585ADB8BC03A55289E74678F3E4F43C9FCF43010E9460770120858A48572A7C2415CA0B208B065101C99D5DD2B58AE1E153119604C0EB7FAB08482191F41E15ADEE60236C898AD007154BA8A04785F9D17C3AC7560F664DCFCECD2FADE187A25B180EF4992F107AABA8D89B48CC1F58E404888A69C512349CDDBA46CE97DBEF77E56AA5FA0BC381463613E5EA4F89A860A5FAE1F0C8A98513C571609694DD059B9359AFD79B1A38D0642A7B7F2F018546A371717DEB7A3AF368772998DD58FA5B03079ACAEC773A1D898056AB7575F36DDC3D4495E17CD170BADB77D20C959C247F63661FC381BE082E0915DB4EEFBD5E098D1A533D7DD147C901E7826DA99F46001C2899ED765B2240F7E5EBF83066D4559998DE4EBF9712C0202ABA940E757DBAB876666498B391BF6E8641549ACD56F6E0E3E4944FA9F4BDA5F8471801B3A46C8003A59D42A9020906175C5CB5E2FA96EA7B63FA030B4C91E3C0B9C270A04C8446609F2F6FB2078748BC5C58B9931BF391DBDBE4C989E2B3311C2843A597CADCDE498F8F2A90706EEFFF856DFF01B17D35C9AF06B7440000000049454E44AE426082)

Close ACP_Styles

Include 0,LinkModule NYPA_Solar_Storage1,2,2,0,0,NYPA Specific\NYPA Solar, Storage (Expanded).ana

NodeLocation NYPA_Solar_Storage1: 1336,392,1
NodeSize NYPA_Solar_Storage1: 64,40


Close Nexant_Model_Templat

