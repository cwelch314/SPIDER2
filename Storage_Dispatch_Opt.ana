{ Analytica Model Storage_Dispatch_Opt, encoding="UTF-8" }
SoftwareVersion 6.3.6

{!-60000|Attribute AcpStyles}


LinkModule Storage_Dispatch_Opt
Title: Storage Dispatch Optimization
Author: JamesMilford
Date: Wed, May 1, 2019 11:53 AM
DefaultSize: 64,40
NodeSize: 64,40
NodeInfo: 1,0,0,1,1,1,0,0,0,,0,,,0
DiagState: 2,430,141,720,254,17,10
NodeColor: 65535,65535,65535
FontStyle: Arial Narrow,19
FileInfo: 0,LinkModule Storage_Dispatch_Opt,2,2,0,0,Storage_Dispatch_Opt.ana

Module Storage_Optimizatio8
Title: Storage Optimization Decisions
Author: JamesMilford
Date: Mon, Dec 31, 2018 11:53 AM
NodeLocation: 416,64,1
NodeSize: 64,40
NodeInfo: 1,0,0,1,1,1,0,,0,,0,,,
DiagState: 2,35,7,1822,740,17,10
NodeColor: 65535,65535,65535

Decision Stored_Grid_Elect1
Title: Stored Grid Electricity
Units: kW-hr/customer
Description: The decision variable for the amount of grid electricity that will be stored.
Definition: 0
NodeLocation: 296,128,1
NodeSize: 64,40
DefnState: 2,116,122,1232,300,0,DFNM
ValueState: 2,40,42,909,745,1,MIDM
Aliases: FormNode New1552348253
{!40300|DomainExpr: Continuous(0)}
{!40200|OptDimensions: [Opt_Hours]}

Decision Discharge_ReduceLoa1
Title: Discharge to Reduce Load
Units: kW-hr/customer
Description: The decision variable for the amount of electricity discharged from the battery to reduce load.
Definition: 0
NodeLocation: 296,856,1
NodeSize: 64,40
WindState: 2,249,294,720,350
Aliases: FormNode New1552348254
{!40300|DomainExpr: Continuous(0)}
{!40200|OptDimensions: [Opt_Hours]}

Decision Total_Discharge4
Title: Total Discharge
Units: kW-hr/customer
Description: The decision variable for the amount of electricity discharged from the battery and exported to the grid.
Definition: 0
NodeLocation: 296,752,1
NodeSize: 64,40
WindState: 2,6,62,720,350
Aliases: FormNode New1552348255
{!40300|DomainExpr: Continuous(0)}
{!40200|OptDimensions: [Opt_Hours]}

Decision Stored_PV_Elect1
Title: Stored PV Electricity
Units: kW-hr/customer
Description: The decision variable for the amount of PV to be stored in the battery.
Definition: 0
NodeLocation: 296,232,1
NodeSize: 64,40
WindState: 2,361,159,720,350
Aliases: FormNode New1552348256
{!40300|DomainExpr: Continuous(0)}
{!40200|OptDimensions: [Opt_Hours]}

Decision PV_to_Reduce_Load2
Title: PV to Reduce Load
Units: kW-hr/customer
Description: The decision variable for the amount of PV used to reduce load.
Definition: 0
NodeLocation: 296,336,1
NodeSize: 64,40
WindState: 2,0,108,720,350
Aliases: FormNode New1552348258
{!40300|DomainExpr: Continuous(0)}
{!40200|OptDimensions: [Opt_Hours]}
{!40300|OptInitialGuess: Opt_Solar_Output}

Variable Applied_Tot_Dischrg
Title: Applied Total Discharge
Units: kWh/customer
Description: The total amount of energy discharged from the battery.
Definition: IF Include_Total_Disch~
THEN Total_Discharge4~
ELSE Saved_Tot_Discharge[Opt_Sectors=Opt_Sector2, Seq_Opt_Number=Opt_Seq_Number, Opt_Storage_Systems=Opt_System2, Rate_Vintage=Opt_Rate_Vintage2, PV_Climate_Zone=Opt_Climate_Zone2, Month=Opt_Month2,All_Utilities=Selected_Utility]
NodeLocation: 704,752,1
NodeSize: 64,40
WindState: 2,383,8,720,350
ValueState: 2,72,74,753,627,,MIDM
DisplayOutputs: Object Object, Object Variable, Variable Num_Full_Discharges1

Variable Total_Charge2
Title: Total Charge
Units: kWh/customer
Description: The total amount of energy added to the battery's state of charge.~
~
CHECK LOSSES ACCOUNTING (ADDED LOSS FACTOR HERE, BUT NEED TO LOOK AT MORE CLOSELY)
Definition: (Applied_Stored_Grid1 + Applied_Stored_PV2) * Charge_disch_eff[PV_Sectors=Opt_Sector2]
NodeLocation: 880,200,1
NodeSize: 64,40
WindState: 2,2058,147,720,350
ValueState: 2,302,117,1185,612,1,MIDM
NodeColor: 65535,1,1
ReformVal: [Opt_Hours,Opt_Storage_Systems]
Att_ResultSliceState: [Opt_Sectors,2,Rate_Vintage,2,PV_Climate_Zone,1,Seq_Opt_Number,1,Month,4,Area_Type,1,Opt_Storage_Systems,1,Opt_Hours,1]

Variable Net_Charge2
Title: Net Charge
Units: kWh/customer
Description: The net charge added to the battery. Negative values indicate discharge and subtract from the battery's charge level.
Definition: Total_Charge2 {accounts for charge efficiency losses, which limit the amount of energy going into the battery}~
- Applied_Tot_Dischrg {does not account for efficiency losses, since this is the discharge rate coming from the battery and losses will be accounted for downstream}
NodeLocation: 1016,336,1
NodeSize: 64,40
ValueState: 2,159,38,1128,756,,MIDM
ReformVal: [Opt_Hours,Null]
Att_ResultSliceState: [PV_Climate_Zone,1,Month,8,Seq_Opt_Number,1,Opt_Storage_Systems,1,Rate_Vintage,2,Opt_Sectors,2,Opt_Hours,1]
Att_ColorRole: Null

Variable Total_Solar2
Title: Total Solar
Units: kW-hr/customer
Description: The sum of decision variables representing solar reducing load, solar stored in batteries, and solar exported to the grid. This should be identical to the total solar production.
Definition: Applied_PV_RedLoad2 + Applied_Stored_PV2 + Applied_PV_Exported2
NodeLocation: 864,336,1
NodeSize: 64,40
ValueState: 2,400,82,1203,721,,MIDM
Att_ResultSliceState: [Opt_Sectors,1,Utility_Options_for_,1,Rate_Vintage,1,PV_Climate_Zone,1,Opt_Storage_Systems,2,Area_Type,1,Seq_Opt_Number,1,Month,1,Opt_Hours,1]

Decision Initial_Charge_Leve2
Title: Initial Charge Level
Units: kWh
Description: The decision variable for initial charge level of the battery.
Definition: 0
NodeLocation: 296,544,1
NodeSize: 64,40
Aliases: FormNode New1552348259
{!40300|DomainExpr: Continuous(0)}
{!40200|OptDimensions: []}

Variable Battery_Charge_BOP
Title: Battery Charge Level BOP
Units: kWh
Description: The beginning-of-period (eg, beginning-of-hour) charge level of the battery.
Definition: Dynamic[Opt_Hours](Applied_Initial_Cha1,~
   Self[Opt_Hours-1] + Net_Charge2[Opt_Hours-1]~
)~

NodeLocation: 1168,336,1
NodeSize: 64,40
ValueState: 2,192,63,1419,679,1,MIDM
ReformVal: [Opt_Hours,Null]
Att_ResultSliceState: [PV_Climate_Zone,1,Rate_Vintage,1,Month,6,Opt_Sectors,1,Opt_Storage_Systems,1,Area_Type,1,Seq_Opt_Number,1,Opt_Hours,1]
Att_ColorRole: Null

Variable Dischg_RedLoad_Loss1
Title: Discharge to Reduce Load After Losses
Units: kWh/customer
Description: The battery discharge used to reduce load after round-trip battery efficiency losses are considered.
Definition: App_Dischg_RedLoad1 * Charge_disch_eff[PV_Sectors=Opt_Sector2]
NodeLocation: 864,856,1
NodeSize: 64,40
WindState: 2,6,52,720,350

Decision On_Peak_Dmd2
Title: On-Peak Demand
Units: kW
Description: The decision variable used to identify the maximum on-peak load.
Definition: 0
NodeLocation: 296,960,1
NodeSize: 64,40
Aliases: FormNode New1552348260
{!40300|DomainExpr: Continuous(0)}

Variable Total_Exported_Elec2
Title: Total Exported Electricity After Losses
Units: kW-hr/customer
Description: The total amount of electricity exported to the grid from systems with storage. This is the sum of battery energy discharged to the grid (after round-trip losses) and solar directly exported to the grid.
Definition: Dischg_Export_Loss2 + Applied_PV_Exported2
NodeLocation: 1016,648,1
NodeSize: 64,40
WindState: 2,17,334,720,350
ValueState: 2,78,134,1016,671,,MIDM
ReformVal: [Opt_Hours,Null]
Att_ResultSliceState: [Opt_Sectors,2,Rate_Vintage,2,PV_Climate_Zone,1,Opt_Storage_Systems,1,Seq_Opt_Number,1,Month,8,Area_Type,1,Opt_Hours,1]
Att_ColorRole: Null

Variable Purchased_Electric2
Title: Purchased Electricity
Units: kWh
Description: The total amount of electricity purchased from the grid in a given hour.
Definition: App_Grid_MeetLoad2 + Applied_Stored_Grid1
NodeLocation: 1016,128,1
NodeSize: 64,40
ValueState: 2,540,67,847,591,1,MIDM
ReformVal: [Opt_Hours,Null]
Att_ResultSliceState: [Seq_Opt_Number,1,Opt_Sectors,2,Rate_Vintage,1,PV_Climate_Zone,1,Opt_Storage_Systems,1,Month,8,Area_Type,3,Opt_Hours,1]
Att_ColorRole: Null

Decision Allow_Charging2
Title: Allow Charging
Units: boolean
Description: The decision variable indicating the hours in which charging is allowed. This ensures that charging and discharging cannot occur simultaneously during a given hour.
Definition: 0
NodeLocation: 296,1520,4
NodeSize: 64,40
Aliases: FormNode New1552348263
{!40300|DomainExpr: Boolean()}
{!40200|OptDimensions: [Opt_Hours]}

Decision Non_Coinc_Demand2
Title: Non-Coinc Demand
Units: kW
Description: The decision variable used to identify the maximum non-coincident load.
Definition: 0
NodeLocation: 296,1064,1
NodeSize: 64,40
Aliases: FormNode New1552348264
{!40300|DomainExpr: Continuous(0)}

Text Te1552348249
Title: Continuous Decision Variables
NodeLocation: 296,876,-1
NodeSize: 88,860
NodeInfo: 1,0,0,1,1,1,0,,0,,0,,,
NodeColor: 65535,65535,65535

Text Te1552348250
Title: Binary Decision Variables
NodeLocation: 296,1520,2
NodeSize: 288,72
NodeInfo: 1,0,0,1,1,0,0,,0,,0,,,
NodeColor: 65535,65535,65535

Variable Include_Stored_Grid2
Title: Include Stored Grid Elect
Units: boolean
Description: Flag that indicates whether the associated decision variable is currently included in the storage optimization.
Definition: Use_Storage_Decisio2 AND PositionInIndex(Storage_Decisions2, Handle(Stored_Grid_Elect1), Storage_Decisions2)
NodeLocation: 96,128,1
NodeSize: 64,40

Variable Include_Stored_PV2
Title: Include Stored PV
Units: boolean
Description: Flag that indicates whether the associated decision variable is currently included in the storage optimization.
Definition: Use_Storage_Decisio2 AND PositionInIndex(Storage_Decisions2, Handle(Stored_PV_Elect1), Storage_Decisions2)
NodeLocation: 96,232,1
NodeSize: 64,40

Variable Include_PV_Red_Load2
Title: Include PV to Reduce Load
Units: boolean
Description: Flag that indicates whether the associated decision variable is currently included in the storage optimization.
Definition: Use_Storage_Decisio2 AND PositionInIndex(Storage_Decisions2, Handle(PV_to_Reduce_Load2), Storage_Decisions2)
NodeLocation: 96,336,1
NodeSize: 64,40

Decision Use_Storage_Decisio2
Title: Use Storage Decision Var
Units: boolean
Description: Enables decision variables to be used during a storage optimization. When this is unchecked, the logic reverts to saved optimization solutions.
Definition: Checkbox(0)
NodeLocation: 96,1648,1
NodeSize: 64,40
Aliases: FormNode Fo1521323555, FormNode New1552348266, Alias Al1552348255, FormNode Fo1552348271

Variable Include_Total_Disch
Title: Include Total Discharge
Units: boolean
Description: Flag that indicates whether the associated decision variable is currently included in the storage optimization.
Definition: Use_Storage_Decisio2 AND PositionInIndex(Storage_Decisions2, Handle(Total_Discharge4), Storage_Decisions2)
NodeLocation: 96,752,1
NodeSize: 64,40

Variable IncludeDischgRedLoa1
Title: Include Discharge to Reduce Load
Units: boolean
Description: Flag that indicates whether the associated decision variable is currently included in the storage optimization.
Definition: Use_Storage_Decisio2 AND PositionInIndex(Storage_Decisions2, Handle(Discharge_ReduceLoa1), Storage_Decisions2)
NodeLocation: 96,856,1
NodeSize: 64,40

Text Te1552348251
Title: Decision Variable Inclusion Flags
NodeLocation: 96,876,-1
NodeSize: 88,860
NodeInfo: 1,0,0,1,1,1,0,,0,,0,,,
NodeColor: 65535,65535,65535

Variable Include_On_Peak_Dmd2
Title: Include On-Peak Demand
Units: boolean
Description: Flag that indicates whether the associated decision variable is currently included in the storage optimization.
Definition: Use_Storage_Decisio2 AND PositionInIndex(Storage_Decisions2, Handle(On_Peak_Dmd2), Storage_Decisions2)
NodeLocation: 96,960,1
NodeSize: 64,40

Variable Include_NonCoinc_Dm2
Title: Include Non-Coinc Demand
Units: boolean
Description: Flag that indicates whether the associated decision variable is currently included in the storage optimization.
Definition: Use_Storage_Decisio2 AND PositionInIndex(Storage_Decisions2, Handle(Non_Coinc_Demand2), Storage_Decisions2)
NodeLocation: 96,1064,1
NodeSize: 64,40

Objective Saved_Vars_for_Strg2
Title: Saved Vars for Storage Decisions
Description: The variables where the optimal solutions for each decision variable will be saved.
Definition: Table(All_Strg_Decisions2)(Handle(Saved_Stored_Grid2),Handle(Saved_Dischg_RedLoa2),Handle(Saved_Tot_Discharge),Handle(Saved_PV_RedLoad2),Handle(Saved_Stored_PV2),Handle(Saved_OnPeak_Dmd2),Handle(Saved_NonCoinc_Dmd2),Handle(Saved_Pos_Chrg_Delt1),Handle(Saved_Neg_Chrg_Delt1),Handle(Saved_Ending_Charge),Handle(Saved_Charging_Start),Handle(Saved_Initial_Charg1),Handle(Saved_Allow_Charging))
NodeLocation: 496,1648,1
NodeSize: 64,40
WindState: 2,2,66,1902,775
DefnState: 2,2486,182,788,481,0,DFNM
Aliases: FormNode New1552348276
NodeColor: 19661,48336,65535
{!40700|Att_CellFormat: CellSpan(All_Strg_Decisions2,CellFill(0xff80ff00),1,header:0)}

Index All_Saved_Strg_Deci2
Title: All Saved Storage Decisions
Definition: VAR all_vars:=CopyIndex(Saved_Vars_for_Strg2);~
Subset(all_vars <> Null)
NodeLocation: 496,1760,1
NodeSize: 64,40
WindState: 2,-8,127,1147,769

Index Saved_Storage_Decis2
Title: Saved Storage Decisions
Definition: VAR all_vars:=CopyIndex(Saved_Vars_for_Strg2[All_Strg_Decisions2=Storage_Decisions2]);~
Subset(all_vars <> Null)
NodeLocation: 496,1848,1
NodeSize: 64,40

Variable Applied_Stored_Grid1
Title: Applied Stored Grid Elect
Units: kW-hr/customer
Description: The decision variable for the amount of grid electricity that will be stored.
Definition: IF Include_Stored_Grid2~
THEN Stored_Grid_Elect1~
ELSE Saved_Stored_Grid2[Opt_Sectors=Opt_Sector2, Seq_Opt_Number=Opt_Seq_Number, Opt_Storage_Systems=Opt_System2, Rate_Vintage=Opt_Rate_Vintage2, PV_Climate_Zone=Opt_Climate_Zone2, Month=Opt_Month2,All_Utilities=Selected_Utility]
NodeLocation: 704,128,1
NodeSize: 64,40
ValueState: 2,339,100,1194,745,1,MIDM
ReformVal: [Day_and_Hour,Month]
{!40300|DomainExpr: Continuous()}
Att_ResultSliceState: [All_Sectors,2,Rate_Vintage,3,PV_Climate_Zone,1,All_Storage_Systems,1,Month,1,Day_and_Hour,1]

Variable App_Dischg_RedLoad1
Title: Applied Discharge to Reduce Load
Units: kW-hr/customer
Description: The decision variable for the amount of electricity discharged from the battery to reduce load.
Definition: IF IncludeDischgRedLoa1~
THEN Discharge_ReduceLoa1~
ELSE Saved_Dischg_RedLoa2[Opt_Sectors=Opt_Sector2, Seq_Opt_Number=Opt_Seq_Number, Opt_Storage_Systems=Opt_System2, Rate_Vintage=Opt_Rate_Vintage2, PV_Climate_Zone=Opt_Climate_Zone2, Month=Opt_Month2,All_Utilities=Selected_Utility]
NodeLocation: 704,856,1
NodeSize: 64,40
WindState: 2,249,294,720,350
ValueState: 2,47,5,837,545,,MIDM
{!40300|DomainExpr: Continuous()}
Att_ResultSliceState: [Seq_Opt_Number,1,Opt_Sectors,1,Rate_Vintage,5,PV_Climate_Zone,1,Opt_Storage_Systems,1,Month,1,Opt_Hours,1]

Variable Discharge_Exported
Title: Discharge Exported to Grid
Units: kW-hr/customer
Description: The decision variable for the amount of electricity discharged from the battery and exported to the grid (prior to losses).
Definition: Applied_Tot_Dischrg - App_Dischg_RedLoad1
NodeLocation: 880,720,1
NodeSize: 64,40
ValueState: 2,363,5,1011,734,,MIDM
ReformVal: [Day_and_Hour,Month]
{!40300|DomainExpr: Continuous()}
Att_ResultSliceState: [Rate_Vintage,5,PV_Climate_Zone,1,Opt_Sectors,1,Opt_Storage_Systems,1,Seq_Opt_Number,1,Month,1,Opt_Hours,1]

Variable Applied_Stored_PV2
Title: Applied Stored PV Elect
Units: kW-hr/customer
Description: The decision variable for the amount of PV to be stored in the battery.
Definition: IF Include_Stored_PV2~
THEN Stored_PV_Elect1~
ELSE Saved_Stored_PV2[Opt_Sectors=Opt_Sector2, Seq_Opt_Number=Opt_Seq_Number, Opt_Storage_Systems=Opt_System2, Rate_Vintage=Opt_Rate_Vintage2, PV_Climate_Zone=Opt_Climate_Zone2, Month=Opt_Month2,All_Utilities=Selected_Utility]
NodeLocation: 704,232,1
NodeSize: 64,40
ValueState: 2,102,70,1033,723,,MIDM
ReformVal: [Day_and_Hour,Month]
{!40300|DomainExpr: Continuous()}
Att_ResultSliceState: [All_Sectors,1,Rate_Vintage,4,PV_Climate_Zone,1,All_Storage_Systems,1,Month,1,Day_and_Hour,1]

Variable Applied_PV_Exported2
Title: Applied PV Exported to Grid
Units: kW-hr/customer
Description: The decision variable for the amount of PV exported to the grid.
Definition: Opt_Solar_Output - Applied_Stored_PV2 - Applied_PV_RedLoad2
NodeLocation: 704,648,1
NodeSize: 64,40
ValueState: 2,152,108,945,717,,MIDM
ReformVal: [Day_and_Hour,Month]
{!40300|DomainExpr: Continuous()}
Att_ResultSliceState: [All_Sectors,1,Rate_Vintage,4,PV_Climate_Zone,1,All_Storage_Systems,1,Month,1,Day_and_Hour,1]

Variable Applied_PV_RedLoad2
Title: Applied PV to Reduce Load
Units: kW-hr/customer
Description: The decision variable for the amount of PV used to reduce load.
Definition: IF Include_PV_Red_Load2~
THEN PV_to_Reduce_Load2~
ELSE Saved_PV_RedLoad2[Opt_Sectors=Opt_Sector2, Seq_Opt_Number=Opt_Seq_Number, Opt_Storage_Systems=Opt_System2, Rate_Vintage=Opt_Rate_Vintage2, PV_Climate_Zone=Opt_Climate_Zone2, Month=Opt_Month2,All_Utilities=Selected_Utility]
NodeLocation: 704,336,1
NodeSize: 64,40
WindState: 2,296,224,720,350
ValueState: 2,671,72,1094,723,,MIDM
ReformVal: [Day_and_Hour,Month]
{!40300|DomainExpr: Continuous()}
Att_ResultSliceState: [All_Sectors,2,Rate_Vintage,3,PV_Climate_Zone,1,All_Storage_Systems,1,Month,1,Day_and_Hour,1]
{!40300|OptInitialGuess: Opt_Solar_Output}

Variable Applied_OnPeak_Dmd2
Title: Applied On-Peak Demand
Units: kW
Description: The decision variable used to identify the maximum on-peak load.
Definition: IF Include_On_Peak_Dmd2~
THEN On_Peak_Dmd2~
ELSE Saved_OnPeak_Dmd2[Opt_Sectors=Opt_Sector2, Opt_Storage_Systems=Opt_System2, Rate_Vintage=Opt_Rate_Vintage2, PV_Climate_Zone=Opt_Climate_Zone2, Month=Opt_Month2, Seq_Opt_Number=Opt_Seq_Number,All_Utilities=Selected_Utility]
NodeLocation: 704,960,1
NodeSize: 64,40
ValueState: 2,325,155,782,606,0,MIDM
ReformVal: [Month,Opt_Sectors]
Att_ResultSliceState: [All_Sectors,2,PV_Climate_Zone,1,All_Storage_Systems,1,Month,1,Rate_Vintage,1]

Variable App_Grid_MeetLoad2
Title: Applied Grid Elect to Meet Load
Units: kW-hr/customer
Description: The decision variable for the amount of grid electricity that will be purchased to meet load.
Definition: Opt_Customer_Load - (Applied_PV_RedLoad2 + Dischg_RedLoad_Loss1)
NodeLocation: 864,80,1
NodeSize: 64,40
WindState: 2,209,412,720,350
DefnState: 2,248,33,716,665,0,DFNM
ValueState: 2,104,8,1464,886,1,MIDM
ReformVal: [Day_and_Hour,Month]
{!40300|DomainExpr: Continuous()}
Att_ResultSliceState: [All_Sectors,1,Rate_Vintage,4,PV_Climate_Zone,1,All_Storage_Systems,1,Month,1,Day_and_Hour,1]
Att_EditSliceState: [All_Sectors,1,PV_Climate_Zone,1,Month,1,All_Storage_Systems,1,Day_and_Hour,1,Rate_Vintage,1]

Variable Applied_NonCoinc_Dm2
Title: Applied Non-Coinc Demand
Units: kW
Description: The decision variable used to identify the maximum non-coincident load.
Definition: IF Include_NonCoinc_Dm2~
THEN Non_Coinc_Demand2~
ELSE Saved_NonCoinc_Dmd2[Opt_Sectors=Opt_Sector2, Opt_Storage_Systems=Opt_System2, Rate_Vintage=Opt_Rate_Vintage2, PV_Climate_Zone=Opt_Climate_Zone2, Month=Opt_Month2, Seq_Opt_Number=Opt_Seq_Number,All_Utilities=Selected_Utility]
NodeLocation: 704,1064,1
NodeSize: 64,40
ValueState: 2,170,192,810,625,,MIDM
ReformVal: [Month,Seq_Opt_Number]
Att_ResultSliceState: [PV_Sectors,2,Rate_Vintage,4,PV_Climate_Zone,1,Storage_Systems,1,Month,1,Seq_Opt_Number,1]

Text Te1552348252
Title: Saved Continuous Decision Variables
NodeLocation: 504,972,-1
NodeSize: 96,956
NodeInfo: 1,0,0,1,1,1,0,,0,,0,,,
NodeColor: 65535,65535,65535

Text Te1552348253
Title: Applied Dispatch Logic
NodeLocation: 1016,972,-1
NodeSize: 392,956
NodeInfo: 1,0,0,1,1,1,0,,0,,0,,,
NodeColor: 65535,65535,65535

Variable Dischg_Export_Loss2
Title: Discharge Exported After Losses
Units: kW-hr/customer
Description: The battery discharge exported to the grid after round-trip battery efficiency losses are considered.
Definition: Discharge_Exported * Charge_disch_eff[PV_Sectors=Opt_Sector2]
NodeLocation: 1016,752,1
NodeSize: 64,40
WindState: 2,39,8,1072,516
ValueState: 2,164,64,1341,795,1,MIDM
Att_ResultSliceState: [Opt_Sectors,1,Rate_Vintage,5,PV_Climate_Zone,1,Opt_Storage_Systems,1,Seq_Opt_Number,1,Month,1,Opt_Hours,1]

Variable Total_Discharge_Los2
Title: Total Discharge After Losses
Units: kW-hr/customer
Description: The total amount of energy discharged from the battery after round-trip efficiency losses are considered.
Definition: Dischg_Export_Loss2 + Dischg_RedLoad_Loss1
NodeLocation: 1016,856,1
NodeSize: 64,40
ValueState: 2,137,7,1066,540,0,MIDM
Att_ResultSliceState: [Opt_Sectors,2,Rate_Vintage,2,PV_Climate_Zone,3,Opt_Storage_Systems,1,Seq_Opt_Number,1,Month,1,Opt_Hours,1]

Decision Pos_Charge_Delta1
Title: Pos Charge Delta
Units: kW-hr/customer
Description: The decision variable used to identify the positive changes in charge rates.
Definition: 0
NodeLocation: 296,1168,1
NodeSize: 64,40
WindState: 2,61,248,720,350
Aliases: FormNode New1552348278
{!40300|DomainExpr: Continuous(0)}
{!40200|OptDimensions: [Opt_Hours]}

Variable Incl_Pos_ChargeDelt1
Title: Include Pos Charge Delta
Units: boolean
Description: Flag that indicates whether the associated decision variable is currently included in the storage optimization.
Definition: Use_Storage_Decisio2 AND PositionInIndex(Storage_Decisions2, Handle(Pos_Charge_Delta1), Storage_Decisions2)
NodeLocation: 96,1168,1
NodeSize: 64,40

Variable Total_Charge_Delta1
Title: Total Charge Delta
Units: kW-hr/customer
Description: The absolute value of the change in charging/discharging rates.
Definition: Appl_Pos_Chrg_Delta1 + App_Neg_Chrg_Delta1
NodeLocation: 856,1216,1
NodeSize: 64,40
WindState: 2,42,46,720,350
ValueState: 2,390,0,1186,772,0,MIDM
ReformVal: [Opt_Hours,Null]
Att_ResultSliceState: [Rate_Vintage,2,PV_Climate_Zone,1,Opt_Storage_Systems,1,Seq_Opt_Number,1,Month,8,Opt_Sectors,2,Opt_Hours,1]
Att_ColorRole: Null

Variable Charge_Delta1
Title: Charge Delta
Units: kW-hr/customer
Description: The hourly change (ie, delta) in the charging and discharging rates. This finds the delta independently for charging and discharging, rather than using the net charge, to prevent 1-for-1 substitution (aka, oscillation) between charge and discharging states.
Definition: IF @Opt_Hours = 1~
THEN 0~
ELSE Net_Charge2[@Opt_Hours=@Opt_Hours-1] - Net_Charge2
NodeLocation: 1016,232,1
NodeSize: 64,40
ValueState: 2,170,4,1203,701,0,MIDM
ReformVal: [Opt_Hours,Null]
Att_ResultSliceState: [Rate_Vintage,2,PV_Climate_Zone,3,Month,12,Opt_Storage_Systems,1,Seq_Opt_Number,1,Opt_Sectors,2,Opt_Hours,1]
Att_ColorRole: Null

Decision Neg_Charge_Delta1
Title: Neg Charge Delta
Units: kW-hr/customer
Description: The decision variable used to identify the negative changes in charge rates.
Definition: 0
NodeLocation: 296,1272,1
NodeSize: 64,40
Aliases: FormNode New1552348280
{!40300|DomainExpr: Continuous(0)}
{!40200|OptDimensions: [Opt_Hours]}

Variable Incl_Neg_ChargeDelt1
Title: Include Neg Charge Delta
Units: boolean
Description: Flag that indicates whether the associated decision variable is currently included in the storage optimization.
Definition: Use_Storage_Decisio2 AND PositionInIndex(Storage_Decisions2, Handle(Neg_Charge_Delta1), Storage_Decisions2)
NodeLocation: 96,1272,1
NodeSize: 64,40

Decision ChargeVariab_Penalty
Title: Charge Variability Penalty Fraction
Units: fraction
Description: A soft penalty applied to variability in the charging and discharging profiles. This fraction represents the percentage of the minimum arbitrage opportunity available. For example, if the minimum arbitrage opportunity is 1 cent/kWh and this penalty fraction is 10%, then the applied penalty is 0.1 cent/kWh.
Definition: 0.05
NodeLocation: 1008,1024,1
NodeSize: 64,40
WindState: 2,6,3,720,350
DefnState: 2,493,1,416,303,0,DFNM
Aliases: FormNode New1552348282, Alias Al1552348256, FormNode Fo1552348276
NumberFormat: 2,%,4,4,0,0,4,0,$,0,"ABBREV",0,,,0,0,15
{!40700|Att_CellFormat: Undefined}

Variable Incurred_Variabilit1
Title: Incurred Variability Penalty
Units: $/month
Description: The penalty incurred for variability in the charging and discharging rates. This is used to minimize the amount of flicker in charging and discharging when the optimization would otherwise be indifferent to charging/discharging in a single hour at a high charge rate or across multiplie hours at a lower charge rate.~
~
This is scaled to be $/month for consistency with demand charges, eg, [$/window] * [windows/month] = [$/month]
Definition: Sum(Total_Charge_Delta1 * Mthly_Scaling_SeqOpt[Month=Opt_Month2, Seq_Opt_Number=Opt_Seq_Number], Opt_Hours) * Appl_Variab_Penalty
NodeLocation: 1008,1216,1
NodeSize: 64,40
WindState: 2,586,7,1291,667
ValueState: 2,769,7,697,459,0,MIDM
Att__TotalsIndex: [Month]
Att_ResultSliceState: [PV_Climate_Zone,3,Seq_Opt_Number,1,Opt_Sectors,2,Opt_Storage_Systems,1,Month,1,Rate_Vintage,4]

Variable App_Neg_Chrg_Delta1
Title: Applied Neg Charge Delta
Units: kW-hr/customer
Description: The decision variable used to identify the negative changes in charge rates.
Definition: IF Incl_Neg_ChargeDelt1~
THEN Neg_Charge_Delta1~
ELSE Saved_Neg_Chrg_Delt1[Opt_Sectors=Opt_Sector2, Seq_Opt_Number=Opt_Seq_Number, Opt_Storage_Systems=Opt_System2, Rate_Vintage=Opt_Rate_Vintage2, PV_Climate_Zone=Opt_Climate_Zone2, Month=Opt_Month2,All_Utilities=Selected_Utility]
NodeLocation: 704,1272,1
NodeSize: 64,40
ValueState: 2,347,211,653,678,1,MIDM

Variable Appl_Pos_Chrg_Delta1
Title: Applied Pos Charge Delta
Units: kW-hr/customer
Description: The decision variable used to identify the positive changes in charge rates.
Definition: IF Incl_Pos_ChargeDelt1~
THEN Pos_Charge_Delta1~
ELSE Saved_Pos_Chrg_Delt1[Opt_Sectors=Opt_Sector2, Seq_Opt_Number=Opt_Seq_Number, Opt_Storage_Systems=Opt_System2, Rate_Vintage=Opt_Rate_Vintage2, PV_Climate_Zone=Opt_Climate_Zone2, Month=Opt_Month2,All_Utilities=Selected_Utility]
NodeLocation: 704,1168,1
NodeSize: 64,40
ValueState: 2,347,211,1341,677,0,MIDM
Att_ResultSliceState: [Opt_Sectors,2,Rate_Vintage,2,PV_Climate_Zone,1,Opt_Storage_Systems,1,Seq_Opt_Number,1,Month,1,Opt_Hours,1]

Variable Charge_Flip1
Title: Charge Flip
Units: boolean
Description: A flag indicating when battery charging begins (positive 1) and ends (negative 1). All other hours are set to zero.
Definition: IF @Opt_Hours = 1~
THEN 0~
ELSE App_Allow_Charging - App_Allow_Charging[@Opt_Hours=@Opt_Hours -1]
NodeLocation: 856,1520,5
NodeSize: 64,40
WindState: 2,601,241,1018,350
ValueState: 2,386,2,1076,659,,MIDM

Decision Charging_Start1
Title: Charging Start
Units: boolean
Description: This is one when charging changes state from 0 kW to something greater than 0 kW. For all other hours, the optimization should push its value to zero to minimize penalties contributing to the objective function. Though this is actually a continous decision variable, it should respond like a binary decision variable.
Definition: 0
NodeLocation: 296,1376,1
NodeSize: 64,40
WindState: 2,342,4,1027,407
ValueState: 2,280,11,1049,439,,MIDM
Aliases: FormNode New1552348284
{!40300|DomainExpr: Continuous(lb:0,ub:1)}
{!40200|OptDimensions: [Opt_Hours]}

Variable Tot_Daily_ChrgStart1
Title: Total Daily Charge Starts
Units: charge starts
Description: The total number of battery charging starts in each day.
Definition: Sum(Applied_Charging_Sta * Consec_Days_SeqOpt, Opt_Hours)
NodeLocation: 856,1376,1
NodeSize: 64,40
WindState: 2,754,67,919,350
ValueState: 2,415,73,1105,638,0,MIDM

FormNode New1552348253
Title: Stored Grid Electricity
Definition: 0
NodeLocation: 296,172,1
NodeSize: 56,12
NodeInfo: 1,0,0,0,0,0,0,,0,,0,,,
Original: Stored_Grid_Elect1

FormNode New1552348254
Title: Discharge to Reduce Load
Definition: 0
NodeLocation: 296,900,1
NodeSize: 56,12
NodeInfo: 1,0,0,0,0,0,0,,0,,0,,,
Original: Discharge_ReduceLoa1

FormNode New1552348255
Title: Discharge Exported to Grid
Definition: 0
NodeLocation: 296,796,1
NodeSize: 56,12
NodeInfo: 1,0,0,0,0,0,0,,0,,0,,,
Original: Total_Discharge4

FormNode New1552348256
Title: Stored PV Electricity
Definition: 0
NodeLocation: 296,276,1
NodeSize: 56,12
NodeInfo: 1,0,0,0,0,0,0,,0,,0,,,
Original: Stored_PV_Elect1

FormNode New1552348258
Title: PV to Reduce Load
Definition: 0
NodeLocation: 296,380,1
NodeSize: 56,12
NodeInfo: 1,0,0,0,0,0,0,,0,,0,,,
Original: PV_to_Reduce_Load2

FormNode New1552348259
Title: Initial Charge Level
Definition: 0
NodeLocation: 296,588,1
NodeSize: 56,12
NodeInfo: 1,0,0,0,0,0,0,,0,,0,,,
Original: Initial_Charge_Leve2

FormNode New1552348260
Title: On-Peak Demand
Definition: 0
NodeLocation: 296,1004,1
NodeSize: 56,12
NodeInfo: 1,0,0,0,0,0,0,,0,,0,,,
Original: On_Peak_Dmd2

FormNode New1552348263
Title: Allow Charging
Definition: 0
NodeLocation: 296,1564,7
NodeSize: 56,12
NodeInfo: 1,0,0,0,0,0,0,,0,,0,,,
Original: Allow_Charging2

FormNode New1552348264
Title: Non-Coinc Demand
Definition: 0
NodeLocation: 296,1108,1
NodeSize: 56,12
NodeInfo: 1,0,0,0,0,0,0,,0,,0,,,
Original: Non_Coinc_Demand2

Alias New1552348265
Title: Clear Storage Decisions
Definition: 1
NodeLocation: 1168,128,1
NodeSize: 64,40
Original: Clear_Storage_Decis2

FormNode New1552348266
Title: Use Storage Decision Var
Definition: 0
NodeLocation: 148,1676,1
NodeSize: 28,12
NodeInfo: 1,0,0,0,0,0,0,,0,,0,,,
Original: Use_Storage_Decisio2

FormNode New1552348267
Title: Stored Grid Electricity
Definition: 0
NodeLocation: 496,172,1
NodeSize: 56,12
NodeInfo: 1,0,0,0,0,0,0,,0,,0,,,
Original: Saved_Stored_Grid2

FormNode New1552348268
Title: Discharge to Reduce Load
Definition: 0
NodeLocation: 496,900,1
NodeSize: 56,12
NodeInfo: 1,0,0,0,0,0,0,,0,,0,,,
Original: Saved_Dischg_RedLoa2

FormNode New1552348269
Title: Discharge Exported to Grid
Definition: 0
NodeLocation: 496,796,1
NodeSize: 56,12
NodeInfo: 1,0,0,0,0,0,0,,0,,0,,,
Original: Saved_Tot_Discharge

FormNode New1552348270
Title: Stored PV Electricity
Definition: 0
NodeLocation: 496,276,1
NodeSize: 56,12
NodeInfo: 1,0,0,0,0,0,0,,0,,0,,,
Original: Saved_Stored_PV2

FormNode New1552348272
Title: PV to Reduce Load
Definition: 0
NodeLocation: 496,380,1
NodeSize: 56,12
NodeInfo: 1,0,0,0,0,0,0,,0,,0,,,
Original: Saved_PV_RedLoad2

FormNode New1552348273
Title: On-Peak Demand
Definition: 0
NodeLocation: 496,1004,1
NodeSize: 56,12
NodeInfo: 1,0,0,0,0,0,0,,0,,0,,,
Original: Saved_OnPeak_Dmd2

FormNode New1552348275
Title: Non-Coinc Demand
Definition: 0
NodeLocation: 496,1108,1
NodeSize: 56,12
NodeInfo: 1,0,0,0,0,0,0,,0,,0,,,
Original: Saved_NonCoinc_Dmd2

FormNode New1552348276
Title: Saved Vars for Storage Decisions
Definition: 0
NodeLocation: 504,1700,1
NodeSize: 56,12
NodeInfo: 1,0,0,0,0,0,0,,0,,0,,,
Original: Saved_Vars_for_Strg2

Alias New1552348277
Title: Clear Saved Storage Decisions
Definition: 1
NodeLocation: 1328,128,1
NodeSize: 64,40
Original: Clear_SavedStrgDeci2

FormNode New1552348278
Title: Non-Coinc Demand
Definition: 0
NodeLocation: 296,1212,1
NodeSize: 56,12
NodeInfo: 1,0,0,0,0,0,0,,0,,0,,,
Original: Pos_Charge_Delta1

FormNode New1552348279
Title: Non-Coinc Demand
Definition: 0
NodeLocation: 496,1212,1
NodeSize: 56,12
NodeInfo: 1,0,0,0,0,0,0,,0,,0,,,
Original: Saved_Pos_Chrg_Delt1

FormNode New1552348280
Title: Non-Coinc Demand
Definition: 0
NodeLocation: 296,1316,1
NodeSize: 56,12
NodeInfo: 1,0,0,0,0,0,0,,0,,0,,,
Original: Neg_Charge_Delta1

FormNode New1552348281
Title: Non-Coinc Demand
Definition: 0
NodeLocation: 496,1316,1
NodeSize: 56,12
NodeInfo: 1,0,0,0,0,0,0,,0,,0,,,
Original: Saved_Neg_Chrg_Delt1

FormNode New1552348282
Title: Variability Penalty
Definition: 0
NodeLocation: 1008,972,1
NodeSize: 56,12
NodeInfo: 1,0,0,0,0,0,0,,0,,0,,,
Original: ChargeVariab_Penalty

Alias New1552348283
Title: All Storage Decisions
Definition: 1
NodeLocation: 296,1648,1
NodeSize: 64,40
Original: All_Strg_Decisions2

FormNode New1552348284
Title: Charging Start
Definition: 0
NodeLocation: 296,1420,1
NodeSize: 56,12
NodeInfo: 1,0,0,0,0,0,0,,0,,0,,,
Original: Charging_Start1

Variable Include_Init_Charge1
Title: Include Initial Charge
Units: boolean
Description: Flag that indicates whether the associated decision variable is currently included in the storage optimization.
Definition: Use_Storage_Decisio2 AND PositionInIndex(Storage_Decisions2, Handle(Initial_Charge_Leve2), Storage_Decisions2)
NodeLocation: 96,544,1
NodeSize: 64,40
WindState: 2,332,246,720,350

Variable Applied_Initial_Cha1
Title: Applied Initial Charge
Units: kWh
Description: The applied amount of energy initially stored in the battery. Depending on user settings, this can be an optimized decision variable or an exogenous input.
Definition: IF Opt_Seq_Number = 1   {If first sequential optimization}~
THEN IF App_Initial_SOC_Type = Exogenous_Label   {Then if the initial SOC type is "exogenous"}~
   THEN Max([Exog_Initial_Charge1, Min_Battery_SOC])   {Then use the maximum of the exogenous initial charge or the minimum allowed SOC}~
   ELSE IF App_Initial_SOC_Type = Full_Charge_Label   {Else if the initial SOC type is "full charge"}~
   THEN Max_Battery_SOC   {Then use the maximum charge level}~
   ELSE App_Endog_Init_Chrg   {Else use the optimized initial charge}~
ELSE Appl_Ending_Charge   {Else use the ending state of charge from the last sequential optimization}
NodeLocation: 1016,440,1
NodeSize: 64,40
WindState: 2,533,220,1145,350
ValueState: 2,347,78,945,499,0,MIDM
ReformVal: [Month,Rate_Vintage]
{!40300|DomainExpr: Continuous()}
Att_ResultSliceState: [All_Sectors,1,Rate_Vintage,4,PV_Climate_Zone,1,All_Storage_Systems,1,Month,1,Day_and_Hour,1]
{!50000|Att_ColumnWidths: [62]}

FormNode New1552348285
Title: PV Exported to Grid
Definition: 0
NodeLocation: 496,588,1
NodeSize: 56,12
NodeInfo: 1,0,0,0,0,0,0,62,0,,0,,,0
Original: Saved_Initial_Charg1

Decision Exog_Initial_Charge1
Title: Exog Initial Charge Level
Units: kWh
Description: The exogenous initial charge level of the battery. This is not found via an optimization, and it can be used to overwrite the optimized decision variable's values.
Definition: 0
NodeLocation: 1016,536,1
NodeSize: 64,40
Aliases: FormNode New1552348287, Alias Al1552348258, FormNode Fo1552348279
{!40300|DomainExpr: Continuous(0)}
{!40200|OptDimensions: []}

FormNode New1552348287
Title: Initial Charge Level
Definition: 0
NodeLocation: 1016,580,1
NodeSize: 56,12
NodeInfo: 1,0,0,0,0,0,0,,0,,0,,,
Original: Exog_Initial_Charge1

FormNode New1556843701
Title: Allow Charging
Definition: 0
NodeLocation: 496,1564,11
NodeSize: 56,12
NodeInfo: 1,0,0,0,0,0,0,,0,,0,,,
Original: Saved_Allow_Charging

Variable Include_Allow_Chargi
Title: Include Allow Charging
Units: boolean
Description: Flag that indicates whether the associated decision variable is currently included in the storage optimization.
Definition: Use_Storage_Decisio2 AND PositionInIndex(Storage_Decisions2, Handle(Allow_Charging2), Storage_Decisions2)
NodeLocation: 96,1520,13
NodeSize: 64,40

Variable App_Allow_Charging
Title: Applied Allow Charging
Units: boolean
Description: The decision variable indicating the hours in which charging is allowed. This ensures that charging and discharging cannot occur simultaneously during a given hour.
Definition: IF Include_Allow_Chargi~
THEN Allow_Charging2~
ELSE Saved_Allow_Charging[Opt_Sectors=Opt_Sector2, Seq_Opt_Number=Opt_Seq_Number, Opt_Storage_Systems=Opt_System2, Rate_Vintage=Opt_Rate_Vintage2, PV_Climate_Zone=Opt_Climate_Zone2, Month=Opt_Month2,All_Utilities=Selected_Utility]
NodeLocation: 704,1520,14
NodeSize: 64,40
ValueState: 2,40,42,1194,745,1,MIDM
ReformVal: [Day_and_Hour,Month]
{!40300|DomainExpr: Continuous()}
Att_ResultSliceState: [All_Sectors,2,Rate_Vintage,3,PV_Climate_Zone,1,All_Storage_Systems,1,Month,1,Day_and_Hour,1]

Variable Include_Charging_Sta
Title: Include Charging Start
Units: boolean
Description: Flag that indicates whether the associated decision variable is currently included in the storage optimization.
Definition: Use_Storage_Decisio2 AND PositionInIndex(Storage_Decisions2, Handle(Neg_Charge_Delta1), Storage_Decisions2)
NodeLocation: 96,1376,1
NodeSize: 64,40

FormNode New1556844115
Title: Charging Start
Definition: 0
NodeLocation: 496,1420,1
NodeSize: 56,12
NodeInfo: 1,0,0,0,0,0,0,,0,,0,,,
Original: Saved_Charging_Start

Variable Applied_Charging_Sta
Title: Applied Charging Start
Units: kW-hr/customer
Description: This is one when charging changes state from 0 kW to something greater than 0 kW. For all other hours, the optimization should push its value to zero to minimize penalties contributing to the objective function. Though this is actually a continous decision variable, it should respond like a binary decision variable.
Definition: IF Include_Charging_Sta~
THEN Charging_Start1~
ELSE Saved_Charging_Start[Opt_Sectors=Opt_Sector2, Seq_Opt_Number=Opt_Seq_Number, Opt_Storage_Systems=Opt_System2, Rate_Vintage=Opt_Rate_Vintage2, PV_Climate_Zone=Opt_Climate_Zone2, Month=Opt_Month2,All_Utilities=Selected_Utility]
NodeLocation: 704,1376,1
NodeSize: 64,40
WindState: 2,424,3,720,350
ValueState: 2,347,211,653,678,1,MIDM

Variable Battery_SOC_for_Next
Title: Battery SOC for Next Seq Opt
Units: kWh
Description: The battery state of charge that will be used to initialize the state of charge in the next sequential optimization.
Definition: Battery_Charge_EOP[Opt_Hours=OptHr_LastValid_Hr[Seq_Opt_Number=Opt_Seq_Number, Month=Opt_Month2]]
NodeLocation: 1328,232,1
NodeSize: 64,40
WindState: 2,340,521,1095,350
ValueState: 2,1158,8,624,498,0,MIDM

Variable Battery_Charge_EOP
Title: Battery Charge Level EOP
Units: kWh
Description: The end-of-period (eg, end-of-hour) charge level of the battery.
Definition: Battery_Charge_BOP + Net_Charge2
NodeLocation: 1168,232,1
NodeSize: 64,40
WindState: 2,162,-10,720,350
ValueState: 2,54,6,1681,803,1,MIDM
GraphSetup: Att_GraphValueRange Battery_Charge_EOP:1,,1,,,,,0.02811669430229813,4.286858290433884,0~
Att_GraphIndexRange Opt_Hours:1,,1,,,,,0.014121800195425749,3.4485435485839844,0
Att_ResultSliceState: [Rate_Vintage,1,PV_Climate_Zone,1,Opt_Storage_Systems,1,Seq_Opt_Number,1,Month,1,Opt_Sectors,1,Opt_Hours,1]

Decision Ending_Charge_Level
Title: Ending Charge Level
Units: kWh
Description: The decision variable for ending charge level of the battery. This isn't a real decision variable since its value is fully determined by other decisions. However, it is useful because it allows us to easily save/store the ending charge level using the same construct applied to real decision variables.
Definition: 0
NodeLocation: 296,440,1
NodeSize: 64,40
Aliases: FormNode New1557420628
{!40300|DomainExpr: Continuous(0)}
{!40200|OptDimensions: []}

FormNode New1557420628
Title: Initial Charge Level
Definition: 0
NodeLocation: 296,484,1
NodeSize: 56,12
NodeInfo: 1,0,0,0,0,0,0,,0,,0,,,
Original: Ending_Charge_Level

Variable Include_End_Charge
Title: Include Ending Charge
Units: boolean
Description: Flag that indicates whether the associated decision variable is currently included in the storage optimization.
Definition: Use_Storage_Decisio2 AND PositionInIndex(Storage_Decisions2, Handle(Ending_Charge_Level), Storage_Decisions2)
NodeLocation: 96,440,1
NodeSize: 64,40
WindState: 2,332,246,720,350

Variable Appl_Ending_Charge
Title: Applied Ending Charge
Units: kWh
Description: The applied amount of energy initially stored in the battery for all but the first sequential optimization. This is based on the previous sequential optimization's ending state of charge.
Definition: IF Opt_Seq_Number = 1~
THEN Null~
ELSE Saved_Ending_Charge[Opt_Sectors=Opt_Sector2, Opt_Storage_Systems=Opt_System2, Rate_Vintage=Opt_Rate_Vintage2, PV_Climate_Zone=Opt_Climate_Zone2, Month=Opt_Month2, Seq_Opt_Number=Opt_Seq_Number-1,All_Utilities=Selected_Utility]   {Use the saved ending charge from the previous sequential opt}
NodeLocation: 704,440,1
NodeSize: 64,40
WindState: 2,317,274,1145,350
ValueState: 2,354,0,945,717,0,MIDM
ReformVal: [Month,Rate_Vintage]
{!40300|DomainExpr: Continuous()}
Att_ResultSliceState: [All_Sectors,1,Rate_Vintage,4,PV_Climate_Zone,1,All_Storage_Systems,1,Month,1,Day_and_Hour,1]

FormNode New1557420629
Title: PV Exported to Grid
Definition: 0
NodeLocation: 496,484,1
NodeSize: 56,12
NodeInfo: 1,0,0,0,0,0,0,62,0,,0,,,0
Original: Saved_Ending_Charge

Variable App_Endog_Init_Chrg
Title: Applied Endog Initial Charge
Units: kWh
Description: The applied amount of energy initially stored in the battery. This is endogenous in the sense that it is found by the storage optimization.
Definition: IF Include_Init_Charge1~
THEN Initial_Charge_Leve2~
ELSE Saved_Initial_Charg1[Opt_Sectors=Opt_Sector2, Opt_Storage_Systems=Opt_System2, Rate_Vintage=Opt_Rate_Vintage2, PV_Climate_Zone=Opt_Climate_Zone2, Month=Opt_Month2,All_Utilities=Selected_Utility];
NodeLocation: 704,544,1
NodeSize: 64,40
WindState: 2,695,23,1145,350
ValueState: 2,354,0,945,717,0,MIDM
ReformVal: [Month,Rate_Vintage]
{!40300|DomainExpr: Continuous()}
Att_ResultSliceState: [All_Sectors,1,Rate_Vintage,4,PV_Climate_Zone,1,All_Storage_Systems,1,Month,1,Day_and_Hour,1]

FormNode Fo1557443244
Title: Flows by Opt Hour
Definition: 1
NodeLocation: 1616,104,1
NodeSize: 208,16
NodeColor: 19661,48336,65535
Original: Flows_by_Opt_Hour

FormNode Fo1557458712
Title: Dispatch Flows
Definition: 1
NodeLocation: 1616,232,1
NodeSize: 208,16
Original: Dispatch_Flows2

FormNode Fo1557458723
Title: Start Time for Dispatch
Definition: 0
NodeLocation: 1616,136,1
NodeSize: 208,16
NodeInfo: 1,,,,,,0,207,,,,,,0
Original: Dispatch_Start_Time2

FormNode Fo1557458724
Title: End Time for Dispatch
Definition: 0
NodeLocation: 1616,168,1
NodeSize: 208,16
NodeInfo: 1,,,,,,0,207,,,,,,0
Original: Dispatch_End_Time2

FormNode Fo1557458725
Title: Flows to View
Definition: 0
NodeLocation: 1616,200,1
NodeSize: 208,16
Original: Flows_to_View1

FormNode Fo1557458967
Title: Battery Charge for Dispatch
Definition: 1
NodeLocation: 1616,264,1
NodeSize: 208,16
Original: Battery_Charge_Disp2

Variable Cumul_Charge_Delta
Title: Cumulative Charge Delta
Units: kW-hr/customer
Description: The charge delta cumulated over the optimization window. Steepness indicates periods where there is a lot of variability in the charging/discharging profiles.
Definition: Cumulate(Total_Charge_Delta1, Opt_Hours)
NodeLocation: 856,1120,1
NodeSize: 64,40
WindState: 2,-13,51,720,350
ValueState: 2,356,384,608,473,,MIDM

Variable Window_Hrs_EqualChrg
Title: Window Hours for Equal Charge
Description: The hours in the Opt Hours index that represent the start and ending hours for the optimization window.
Definition: IF @Start_and_End_Hours = 1~
THEN OptHr_FirstValid_Hr[Month=Opt_Month2, Seq_Opt_Number=Opt_Seq_Number]~
ELSE OptHr_LastValid_Hr[Month=Opt_Month2, Seq_Opt_Number=Opt_Seq_Number]
NodeLocation: 1328,440,1
NodeSize: 64,40
ValueState: 2,270,46,766,629,0,MIDM

Index Start_and_End_Hours
Title: Start & End Hours
Definition: ['Start','End']
NodeLocation: 1168,440,1
NodeSize: 64,40

Variable App_SOC_Equal_Chrg
Title: Applied SOC for Equal Charge
Units: kWh
Description: The state of charge for hours that are required to be identical when either the "Optimization Window" SOC constraint is applied.
Definition: VAR SOC:=IF @Start_and_End_Hours=1  {If the starting hour of the optimization window}~
   THEN Battery_Charge_BOP[Opt_Hours=Window_Hrs_EqualChrg]   {Then use the BOP state of charge}~
   ELSE Battery_Charge_EOP[Opt_Hours=Window_Hrs_EqualChrg];   {Else use the EOP state of charge}~
~
Replace_X_with_Y(SOC, Null, Applied_Initial_Cha1)   {For hours that don't have data, replace them with the initial charge so that they meet the charge level constraint}
NodeLocation: 1328,336,1
NodeSize: 64,40
ValueState: 2,383,386,977,423,0,MIDM

FormNode Fo1558046586
Title: Rates for Dispatch
Definition: 1
NodeLocation: 1616,296,1
NodeSize: 208,16
Original: Rates_for_Dispatch2

FormNode Fo1558047121
Title: Monthly Levelized Cost
Definition: 1
NodeLocation: 1616,328,1
NodeSize: 208,16
Original: Lev_Utility_Bill

Variable Net_Grid_Impact
Title: Net Grid Impact
Units: kW-hr/customer
Description: The storage system's net impact on the grid (charging = positive, while discharging = negative)
Definition: Total_Charge2 - Total_Discharge_Los2
NodeLocation: 1168,536,1
NodeSize: 64,40
WindState: 2,35,16,720,350
ValueState: 2,370,156,1336,659,,MIDM
Att_ResultSliceState: [Rate_Vintage,1,PV_Climate_Zone,1,Opt_Storage_Systems,2,Seq_Opt_Number,1,Opt_Sectors,1,Area_Type,1,Month,1,Opt_Hours,1]

Variable Appl_Variab_Penalty
Title: Applied Variability Penalty
Units: $/kWh
Description: The penalty rate applied for charging variability.
Definition: ChargeVariab_Penalty * ArbitrageForPenalty
NodeLocation: 1008,1120,1
NodeSize: 64,40
WindState: 2,134,51,720,350
ValueState: 2,1206,36,597,516,0,MIDM
NumberFormat: 2,F,2,4,0,0,2,0,$,0,"ABBREV",0,,,0,0,15

Decision SimultCharge_Penalty
Title: Simultaneous Charge Penalty Fraction
Units: fraction
Description: A soft penalty applied to charging and discharging. If the optimization tries to simultaneously charge and discharge, this penalty will be greater than if exclusively charging or discharging. Thus, it will discourage simultaneous charging and discharging whenever export rates are equal to retail rates. However, if exports rates are lower than retail rates, then this penalty is superfluous and an integer optimization is required instead. This fraction represents the percentage of the minimum arbitrage opportunity available. For example, if the minimum arbitrage opportunity is 1 cent/kWh and this penalty fraction is 1%, then the applied penalty is 0.01 cent/kWh.
Definition: 1%
NodeLocation: 1328,560,1
NodeSize: 64,40
WindState: 2,6,3,720,350
DefnState: 2,492,8,416,303,0,DFNM
Aliases: FormNode New1582132091, Alias Al1582132571, FormNode Fo1582132571
NodeColor: 65535,1,1
NumberFormat: 2,%,4,4,0,0,4,0,$,0,"ABBREV",0,,,0,0,15
{!40700|Att_CellFormat: Undefined}

FormNode New1582132091
Title: Variability Penalty
Definition: 0
NodeLocation: 1328,504,1
NodeSize: 56,12
NodeInfo: 1,0,0,0,0,0,0,,0,,0,,,
Original: SimultCharge_Penalty

Variable Appl_Simult_Penalty
Title: Applied Simultaneous Penalty
Units: $/kWh
Description: The penalty rate applied for simulateously charging and discharging.
Definition: SimultCharge_Penalty[All_Sectors=Opt_Sector2] * ArbitrageForPenalty
NodeLocation: 1328,656,1
NodeSize: 64,40
WindState: 2,191,19,720,350
ValueState: 2,641,401,471,516,0,MIDM
NumberFormat: 2,F,2,4,0,0,2,0,$,0,"ABBREV",0,,,0,0,15
Att_ResultSliceState: [Opt_Sectors,2,PV_Climate_Zone,3,Opt_Storage_Systems,1,Seq_Opt_Number,1,Month,1,Rate_Vintage,1]

Variable Incurr_SimultPenalty
Title: Incurred Simultaneous Penalty
Units: $/month
Description: The penalty incurred for charging and discharging. This will be larger if the optimization tries to simultaneously charge and discharge, so the optimization will want to avoid those situations.
Definition: Sum((Total_Charge2 + Applied_Tot_Dischrg) * Mthly_Scaling_SeqOpt[Month=Opt_Month2, Seq_Opt_Number=Opt_Seq_Number], Opt_Hours) * Appl_Simult_Penalty
NodeLocation: 1328,752,1
NodeSize: 64,40
WindState: 2,146,8,720,350
ValueState: 2,165,6,589,459,0,MIDM
Att__TotalsIndex: [Month]
Att_ResultSliceState: [Opt_Sectors,2,PV_Climate_Zone,3,Opt_Storage_Systems,1,Seq_Opt_Number,1,Month,1,Rate_Vintage,1]

Decision Export_Penalty_Fract
Title: Export Penalty Fraction
Units: fraction
Description: Normally set to 1%. 0 for testing. ~
~
A soft penalty applied to exporting PV or battery discharge. In order to avoid using a binary decision variable on exports, this is the easiest way to ensure that the optimization prefers to reduce load using PV or storage prior to exporting to the grid. Note that this penalty might not be effective if the export rates are greater than the retail rates.
Definition: 1%
NodeLocation: 1168,856,1
NodeSize: 64,40
WindState: 2,6,3,1151,434
DefnState: 2,493,1,416,303,0,DFNM
Aliases: FormNode New1582566467, Alias Al1582568623, FormNode Fo1582568623
NumberFormat: 2,%,4,4,0,0,4,0,$,0,"ABBREV",0,,,0,0,15
{!40700|Att_CellFormat: Undefined}

FormNode New1582566467
Title: Variability Penalty
Definition: 0
NodeLocation: 1168,908,1
NodeSize: 56,12
NodeInfo: 1,0,0,0,0,0,0,,0,,0,,,
Original: Export_Penalty_Fract

Variable Appl_Export_Penalty
Title: Applied Export Penalty
Units: $/kWh
Description: The penalty rate applied for exporting electricity. This will make the optimization prioritize meeting load prior to exporting.
Definition: Export_Penalty_Fract[All_Sectors=Opt_Sector2] * ArbitrageForPenalty
NodeLocation: 1168,752,1
NodeSize: 64,40
WindState: 2,23,86,979,555
ValueState: 2,605,361,985,227,0,MIDM
NumberFormat: 2,F,2,4,0,0,2,0,$,0,"ABBREV",0,,,0,0,15
Att_ResultSliceState: [PV_Climate_Zone,1,Opt_Storage_Systems,2,Seq_Opt_Number,1,Rate_Vintage,1,Area_Type,1,Opt_Sectors,1,Month,1]

Variable Incur_Export_Penalty
Title: Incurred Export Penalty
Units: $/month
Description: The penalty incurred for exporting electricity. This will make the optimization prioritize meeting load prior to exporting.
Definition: Sum(Total_Exported_Elec2 * Mthly_Scaling_SeqOpt[Month=Opt_Month2, Seq_Opt_Number=Opt_Seq_Number], Opt_Hours) * Appl_Export_Penalty
NodeLocation: 1168,648,1
NodeSize: 64,40
WindState: 2,442,656,1446,239
ValueState: 2,165,6,589,459,0,MIDM
Att__TotalsIndex: [Month]
Att_ResultSliceState: [Opt_Sectors,1,PV_Climate_Zone,1,Opt_Storage_Systems,1,Seq_Opt_Number,1,Month,1,Rate_Vintage,1]

Alias Al899626019
Title: Saved Stored Grid Elect
Definition: 1
NodeLocation: 496,128,1
NodeSize: 64,40
Original: Saved_Stored_Grid2

Alias Al1973367843
Title: Saved Discharge to Reduce Load
Definition: 1
NodeLocation: 496,856,1
NodeSize: 64,40
Original: Saved_Dischg_RedLoa2

Alias Al228537379
Title: Saved Total Discharge
Definition: 1
NodeLocation: 496,752,1
NodeSize: 64,40
Original: Saved_Tot_Discharge

Alias Al1302279203
Title: Saved Stored PV Elect
Definition: 1
NodeLocation: 496,232,1
NodeSize: 64,40
Original: Saved_Stored_PV2

Alias Al765408291
Title: Saved PV to Reduce Load
Definition: 1
NodeLocation: 496,336,1
NodeSize: 64,40
Original: Saved_PV_RedLoad2

Alias Al1839150115
Title: Saved On-Peak Demand
Definition: 1
NodeLocation: 496,960,1
NodeSize: 64,40
Original: Saved_OnPeak_Dmd2

Alias Al496972835
Title: Saved Non-Coinc Demand
Definition: 1
NodeLocation: 496,1064,1
NodeSize: 64,40
Original: Saved_NonCoinc_Dmd2

Alias Al1570714659
Title: Saved Pos Charge Delta
Definition: 1
NodeLocation: 496,1168,1
NodeSize: 64,40
Original: Saved_Pos_Chrg_Delt1

Alias Al1033843747
Title: Saved Neg Charge Delta
Definition: 1
NodeLocation: 496,1272,1
NodeSize: 64,40
Original: Saved_Neg_Chrg_Delt1

Alias Al2107585571
Title: Saved Initial Charge
Definition: 1
NodeLocation: 496,544,1
NodeSize: 64,40
Original: Saved_Initial_Charg1

Alias Al60765219
Title: Saved Allow Charging
Definition: 1
NodeLocation: 496,1520,9
NodeSize: 64,40
Original: Saved_Allow_Charging

Alias Al1134507043
Title: Saved Charging Start
Definition: 1
NodeLocation: 496,1376,1
NodeSize: 64,40
Original: Saved_Charging_Start

Alias Al597636131
Title: Saved Ending Charge
Definition: 1
NodeLocation: 496,440,1
NodeSize: 64,40
Original: Saved_Ending_Charge

Module Saved_Storage_Data
Title: Saved Storage Data
Author: CWelch
Date: Thu, Feb 24, 2022 10:13 AM
NodeLocation: 496,656,1
NodeSize: 64,40
DiagState: 2,367,85,1237,712,17,10

Include 0,LinkModule Saved_Stored_Grid_El,2,2,0,0,Saved Storage Data\Saved Stored Grid Elec.ana

NodeLocation Saved_Stored_Grid_El: 112,152,1
NodeSize Saved_Stored_Grid_El: 64,40


Include 0,LinkModule Saved_Stored_PV_Elec,2,2,0,0,Saved Storage Data\Saved Stored PV Elec.ana

NodeLocation Saved_Stored_PV_Elec: 112,240,1
NodeSize Saved_Stored_PV_Elec: 64,40


Include 0,LinkModule Saved_PV_to_Reduce_L,2,2,0,0,Saved Storage Data\Saved PV to Reduce Load.ana

NodeLocation Saved_PV_to_Reduce_L: 112,328,1
NodeSize Saved_PV_to_Reduce_L: 64,40


Include 0,LinkModule Saved_Ending_Charge1,2,2,0,0,Saved Storage Data\Saved Ending Charge.ana

NodeLocation Saved_Ending_Charge1: 112,416,1
NodeSize Saved_Ending_Charge1: 64,40


Include 0,LinkModule Saved_Initial_Charge,2,2,0,0,Saved Storage Data\Saved Initial Charge.ana

NodeLocation Saved_Initial_Charge: 112,512,1
NodeSize Saved_Initial_Charge: 64,40


Include 0,LinkModule Saved_Total_Discharg,2,2,0,0,Saved Storage Data\Saved Total Discharge.ana

NodeLocation Saved_Total_Discharg: 264,152,1
NodeSize Saved_Total_Discharg: 64,40


Include 0,LinkModule Saved_Discharge_to_R,2,2,0,0,Saved Storage Data\Saved Discharge to Reduce Load.ana

NodeLocation Saved_Discharge_to_R: 264,240,1
NodeSize Saved_Discharge_to_R: 64,40


Include 0,LinkModule Saved_On_Peak_Demand,2,2,0,0,Saved Storage Data\Saved On-Peak Demand.ana

NodeLocation Saved_On_Peak_Demand: 264,328,1
NodeSize Saved_On_Peak_Demand: 64,40


Include 0,LinkModule Saved_Non_Coinc_Dema,2,2,0,0,Saved Storage Data\Saved Non-Coinc Demand.ana

NodeLocation Saved_Non_Coinc_Dema: 264,424,1
NodeSize Saved_Non_Coinc_Dema: 64,40


Include 0,LinkModule Saved_Pos_Charge_Del,2,2,0,0,Saved Storage Data\Saved Pos Charge Delta.ana

NodeLocation Saved_Pos_Charge_Del: 264,512,1
NodeSize Saved_Pos_Charge_Del: 64,40


Include 0,LinkModule Saved_Neg_Charge_Del,2,2,0,0,Saved Storage Data\Saved Neg Charge Delta.ana

NodeLocation Saved_Neg_Charge_Del: 408,152,1
NodeSize Saved_Neg_Charge_Del: 64,40


Include 0,LinkModule Saved_Charging_Star1,2,2,0,0,Saved Storage Data\Saved Charging Start.ana

NodeLocation Saved_Charging_Star1: 408,240,1
NodeSize Saved_Charging_Star1: 64,40


Include 0,LinkModule Saved_Allow_Chargin1,2,2,0,0,Saved Storage Data\Saved Allow Charging.ana

NodeLocation Saved_Allow_Chargin1: 408,336,1
NodeSize Saved_Allow_Chargin1: 64,40


Text Te551498787
Title: These stored data nodes can be very large. They are therefore saved in filed modules so that each file is likely to be smaller than the maximum file size for Github of 100 MB. 
NodeLocation: 416,108,-1
NodeSize: 384,84

Include 0,LinkModule Saved_Storage_Opt_St,2,2,0,0,Saved Storage Data\Saved Storage Opt Status.ana

NodeLocation Saved_Storage_Opt_St: 568,152,1
NodeSize Saved_Storage_Opt_St: 64,40


Include 0,LinkModule Saved_Opt_Date2,2,2,0,0,Saved Storage Data\Saved Opt Date.ana

NodeLocation Saved_Opt_Date2: 568,248,1
NodeSize Saved_Opt_Date2: 64,40


Include 0,LinkModule Saved_Storage_Opt_Ob,2,2,0,0,Saved Storage Data\Saved Storage Opt Objective.ana

NodeLocation Saved_Storage_Opt_Ob: 568,352,1
NodeSize Saved_Storage_Opt_Ob: 64,40


Include 0,LinkModule Saved_Linked_List1,2,2,0,0,Saved Storage Data\Saved Linked List.ana

NodeLocation Saved_Linked_List1: 568,448,1
NodeSize Saved_Linked_List1: 64,40


Close Saved_Storage_Data

Text Te1345227043
Title: Look over losses accounting
NodeLocation: 1480,488,-1
NodeSize: 64,40
NodeColor: 65535,1,1

Close Storage_Optimizatio8

Module Storage_Optimizatio9
Title: Storage Optimization Constraints
Author: JamesMilford
Date: Mon, Dec 31, 2018 11:53 AM
NodeLocation: 568,64,1
NodeSize: 64,40
NodeInfo: 1,0,0,1,1,1,0,,0,,0,,,
DiagState: 2,2254,28,1207,663,17,10
NodeColor: 65535,65535,65535

Constraint Force_Positive_Delt1
Title: Force Positive Delta
Units: boolean
Description: This forces Pos_Charge_Delta to only be the positive values of the change in charging rates. 
Definition: Appl_Pos_Chrg_Delta1 >= Charge_Delta1
NodeLocation: 432,280,1
NodeSize: 64,40
WindState: 2,12,114,720,350
ValueState: 2,132,138,958,527,,MIDM

Constraint Force_Negative_Delt1
Title: Force Negative Delta
Units: boolean
Description: This forces Pos_Charge_Delta to only be the negative values of the change in charging rates.
Definition: App_Neg_Chrg_Delta1 >= -Charge_Delta1
NodeLocation: 432,472,1
NodeSize: 64,40
ValueState: 2,148,154,974,699,,MIDM

Constraint Find_Charge_Start1
Title: Find Charge Start
Units: boolean
Description: This forces Charging_Start to 1 whenever charging begins. Charging_Start should be zero for all other hours in order to minimize the penalties contributing to the objective function.
Definition: Applied_Charging_Sta >= Charge_Flip1
NodeLocation: 768,280,1
NodeSize: 64,40
WindState: 2,431,8,1085,458
ValueState: 2,164,170,985,686,,MIDM

Constraint Continuous_Charge1
Title: Continuous Charge
Units: boolean
Description: Though not always warranted or desired, this constraint can force battery charging to occur in a single, perhaps multi-hour, event if charging occurs in a given day. This is used to prevent multiple charging starts in a given day, which might be more aligned with how storage controls might be configured.
Definition: Tot_Daily_ChrgStart1 <= 1
NodeLocation: 776,472,1
NodeSize: 64,40
WindState: 2,327,15,865,462
ValueState: 2,180,186,416,303,0,MIDM
{!40200|OptDimensions: [Days_in_Opt_Window]}

Alias Al1552348253
Title: All Storage Constraints
Definition: 1
NodeLocation: 944,376,1
NodeSize: 64,40
Original: All_Strg_Constraint2

Constraint PV_Balance2
Title: PV Balance
Description: A constraint to ensure that the sum of the PV decision variables (PV meeting load, PV stored in the battery, and PV exported to the grid) is equal to the total solar energy production.
Definition: Total_Solar2 = Opt_Solar_Output
NodeLocation: 592,88,1
NodeSize: 64,40
WindState: 2,67,168,1029,402
ValueState: 2,2061,29,1428,777,0,MIDM
ReformVal: [Null,Opt_Hours]
Att_ResultSliceState: [PV_Climate_Zone,4,Month,6,Rate_Vintage,1,Opt_Storage_Systems,1,Area_Type,2,Seq_Opt_Number,1,Opt_Sectors,2,Opt_Hours,1]

Constraint Storage_Charge_Rate1
Title: Storage Charge Rate
Units: boolean
Description: A constraint to ensure that the battery charge rate does not exceed the battery's rated maximum. This includes the binary decision (Allow_Charging) so that charging is forced to zero whenever charging is not allowed.
Definition: (Applied_Stored_Grid1 + Applied_Stored_PV2) <= Storage_Max_Power[System_Types=Opt_System2, PV_Sectors=Opt_Sector2,PV_Climate_Zone=Opt_Climate_Zone2]
NodeLocation: 272,88,1
NodeSize: 64,40
WindState: 2,150,501,1022,350
ValueState: 2,157,116,1111,597,0,MIDM
ReformVal: [Opt_Hours,PV_Climate_Zone]

Constraint Storage_Energy_Cap2
Title: Storage Energy Capacity
Units: boolean
Description: A constraint ensuring that the total energy stored in the battery doesn't not exceed the battery's energy capacity rating.
Definition: Min_Battery_SOC <= Battery_Charge_EOP <= Max_Battery_SOC
NodeLocation: 272,472,1
NodeSize: 64,40
WindState: 2,395,256,883,350
ValueState: 2,712,185,772,660,0,MIDM
ReformVal: [PV_Climate_Zone,Opt_Hours]
Att_ResultSliceState: [Opt_Sectors,22,Opt_Storage_Systems,1,Seq_Opt_Number,1,Opt_Hours,1,PV_Climate_Zone,1]

Constraint Min_Stored_PV2
Title: Min Stored PV
Units: boolean
Description: A constraint to ensure that a required percentage of energy stored in the battery comes from PV. This ensures that the battery system is eligible for some portion of the ITC.
Definition: Stored_PV_Pct_ITC[All_Sectors=Opt_Sector2] * Sum(Total_Charge2, Opt_Hours) * System_with_PV[System_Types=Opt_System2] <= Sum(Applied_Stored_PV2, Opt_Hours)
NodeLocation: 592,376,1
NodeSize: 64,40
WindState: 2,0,154,1904,606
ValueState: 2,573,262,1086,681,0,MIDM
Att_ResultSliceState: [Opt_Sectors,1,Rate_Vintage,5,PV_Climate_Zone,1,Opt_Storage_Systems,1,Seq_Opt_Number,1,Month,1,Opt_Hours,1]

Constraint Storage_DishargeRat1
Title: Storage Disharge Rate
Units: boolean
Description: A constraint to ensure that the battery discharge rate does not exceed the battery's rated maximum. This includes the binary decision (Allow_Charging) so that discharging is forced to zero whenever discharging is not allowed.
Definition: {Old doesn't account for losses correctly. Total_Discharge_Los2 <= Storage_Max_Power[System_Types=Opt_System2, PV_Sectors=Opt_Sector2,PV_Climate_Zone=Opt_Climate_Zone2]}~
(Discharge_Exported + App_Dischg_RedLoad1)  <= Storage_Max_Power[System_Types=Opt_System2, PV_Sectors=Opt_Sector2,PV_Climate_Zone=Opt_Climate_Zone2]
NodeLocation: 272,184,1
NodeSize: 64,40
WindState: 2,11,113,813,350
ValueState: 2,674,332,773,619,0,MIDM
ReformVal: [PV_Climate_Zone,Opt_Hours]
{!40700|Att_CellFormat: CellSpan(PV_Climate_Zone,CellNumberFormat('Fixed Point',5,1,0,dateFormat:'ABBREV',fullPrecision:0,numbersAsDates:0,datesAsNumbers:0,digits_:2,zeroes_:5),2,header:0)}

Constraint Load_Balance2
Title: Load Balance
Units: boolean
Description: This constraint ensures that total gross customer load is met in every hour by either grid electricity, PV, or battery discharge.
Definition: App_Grid_MeetLoad2 + Applied_PV_RedLoad2 + Dischg_RedLoad_Loss1 = Opt_Customer_Load   {Don't have to include stored grid electricity here because it would show up on both sides of inequality}
NodeLocation: 112,88,1
NodeSize: 64,40
WindState: 2,102,82,854,522
ValueState: 2,350,164,1172,666,0,MIDM
Att_ResultSliceState: [PV_Climate_Zone,2,Opt_Storage_Systems,1,Area_Type,1,Month,6,Seq_Opt_Number,1,Opt_Sectors,1,Opt_Hours,1]

Constraint Max_On_Peak_Demand2
Title: Max On-Peak Demand
Units: boolean
Description: This constraint works as an alternative to the Max( ) function, whereby it allows us to find the maximum on-peak demand over the simulated dispatch horizon and still maintain a linear optimization.
Definition: Applied_OnPeak_Dmd2 >= On_Peak_Load2
NodeLocation: 432,184,1
NodeSize: 64,40
ValueState: 2,72,74,711,478,,MIDM
{!40200|OptDimensions: [Opt_Hours]}

Constraint SOC_Limit_on_Dischr1
Title: SOC Limit on Discharge
Units: boolean
Description: A constraint to ensure that energy discharged from the battery does not exceed the current state of charge (SOC) of the battery.
Definition: Applied_Tot_Dischrg <= Battery_Charge_BOP
NodeLocation: 272,280,1
NodeSize: 64,40
WindState: 2,4,100,720,350
ValueState: 2,431,177,1086,609,,MIDM

Variable Check_Valid_BESS_Exp
Title: Check Valid BESS Exports
Description: Sanity check to ensure that discharged exports and electricity purchased to meet load are not simultaneously greater than zero.
Definition: IF Sum(Check_HrlyBESSExport[Opt_Hours=Opt_Hr_for_Valid_Hr], Valid_Opt_Hours)~
THEN 'Error'~
ELSE 'No Error'
NodeLocation: 1096,184,1
NodeSize: 64,40
WindState: 2,629,262,964,565
ValueState: 2,612,244,668,627,0,MIDM
Att_ResultSliceState: [Opt_Sectors,1,PV_Climate_Zone,3,Opt_Storage_Systems,2,Seq_Opt_Number,1,Month,1,Rate_Vintage,1]

Variable Check_Valid_Charging
Title: Check Valid Charging
Description: Sanity check to ensure that charging and discharging are not simultaneously greater than zero.
Definition: IF Sum(Check_Hrly_Charging[Opt_Hours=Opt_Hr_for_Valid_Hr], Valid_Opt_Hours)~
THEN 'Error'~
ELSE 'No Error'
NodeLocation: 1096,280,1
NodeSize: 64,40
ValueState: 2,1304,309,591,560,0,MIDM
Att_ResultSliceState: [PV_Climate_Zone,1,Opt_Sectors,2,Opt_Storage_Systems,2,Seq_Opt_Number,1,Month,1,Rate_Vintage,1]

Constraint Constr_BatteryExpor2
Title: Constrain Battery Export
Units: boolean
Description: This constraint ensures that the battery cannot export to the grid if the user has disabled that option (via Battery_Export_Allow).
Definition: Dischg_Export_Loss2 <= Storage_Max_Power[System_Types=Opt_System2, PV_Sectors=Opt_Sector2,PV_Climate_Zone=Opt_Climate_Zone2] * Battery_Export_Allo2
NodeLocation: 272,376,1
NodeSize: 64,40
WindState: 2,318,403,871,350
ValueState: 2,453,141,952,701,0,MIDM

FormNode Fo1552348253
Title: Battery Export Allowed
Definition: 0
NodeLocation: 164,404,1
NodeSize: 28,12
NodeInfo: 1,0,0,0,0,0,0,,0,,0,,,
Original: Battery_Export_Allo2

Constraint Max_Non_Coinc_Deman2
Title: Max Non-Coinc Demand
Units: boolean
Description: This constraint works as an alternative to the Max( ) function, whereby it allows us to find the maximum non-coincident demand over the simulated dispatch horizon and still maintain a linear optimization.
Definition: Applied_NonCoinc_Dm2 >= Non_Coincident_Load2
NodeLocation: 432,88,1
NodeSize: 64,40
ValueState: 2,40,42,1164,759,0,MIDM
Att_ResultSliceState: [Rate_Vintage,1,PV_Climate_Zone,2,Opt_Storage_Systems,1,Area_Type,1,Month,1,Seq_Opt_Number,1,Opt_Sectors,1,Opt_Hours,1]
{!40200|OptDimensions: [Opt_Hours]}

Alias Al1552348254
Title: Battery Export Allowed
Definition: 1
NodeLocation: 112,376,-3
NodeSize: 64,40
NodeColor: 65535,65531,1
Original: Battery_Export_Allo2

Constraint Same_Starting_Charg1
Title: Same Starting Charge
Description: Forces the battery state of charge to the same value for every day of the optimization window. Depending on settings, the state of charge can be optimized or specified exogenously.
Definition: App_SOC_Equal_Chrg = Applied_Initial_Cha1
NodeLocation: 272,568,1
NodeSize: 64,40
WindState: 2,836,314,720,350
ValueState: 2,345,364,635,509,,MIDM
{!40200|OptDimensions: [Start_and_End_Hours]}

Constraint Value_of_End_Charge
Title: Value of Ending Charge
Units: boolean
Description: This forces the ending charge level decision to be exactly equal to the battery ending state of charge. This isn't a real decision variable and it's only used to make it easier to save the ending state of charge. 
Definition: Appl_Ending_Charge = Battery_SOC_for_Next
NodeLocation: 432,568,1
NodeSize: 64,40
WindState: 2,665,191,720,350
ValueState: 2,1322,340,541,357,0,MIDM

Variable Min_Battery_SOC
Title: Min Battery SOC
Units: kWh
Description: The minimum charge level for the battery system.
Definition: Divide(Storage_Capacity[System_Types=Opt_System2, PV_Sectors=Opt_Sector2,PV_Climate_Zone=Opt_Climate_Zone2], Charge_disch_eff[PV_Sectors=Opt_Sector2], True) * Min_Charge_Level[System_Types=Opt_System2, PV_Sectors=Opt_Sector2]   {Accounts for roundtrip efficiency so that kWh spec represents usable energy}
NodeLocation: 112,472,1
NodeSize: 64,40
ValueState: 2,538,198,865,620,0,MIDM
NumberFormat: 2,F,2,4,0,0,2,1,$,0,"ABBREV",0,,,0,0,15,
{!40700|Att_CellFormat: CellSpan(PV_Climate_Zone,CellNumberFormat('Fixed Point',8,1,0,dateFormat:'ABBREV',fullPrecision:0,numbersAsDates:0,datesAsNumbers:0,digits_:4,zeroes_:8),2,header:0)}

Variable Max_Battery_SOC
Title: Max Battery SOC
Units: kWh
Description: The maximum charge level for the battery system.
Definition: Divide(Storage_Capacity[System_Types=Opt_System2, PV_Sectors=Opt_Sector2,PV_Climate_Zone=Opt_Climate_Zone2], Charge_disch_eff[PV_Sectors=Opt_Sector2], True) * Max_Charge_Level[System_Types=Opt_System2, PV_Sectors=Opt_Sector2]  {Accounts for roundtrip efficiency so that kWh spec represents usable energy}
NodeLocation: 112,568,1
NodeSize: 64,40
ValueState: 2,68,74,865,677,0,MIDM
{!40700|Att_CellFormat: CellSpan(PV_Climate_Zone,CellNumberFormat('Fixed Point',6,0,0,dateFormat:'ABBREV',fullPrecision:0,numbersAsDates:0,datesAsNumbers:0,digits_:2,zeroes_:6),2,header:0)}

Constraint DischLoadRed_LTE_Tot
Title: Discharge Load Reduct LTE Total
Units: boolean
Description: This ensures that the storage discharge used to reduce load is less than or equal to the total discharge.
Definition: App_Dischg_RedLoad1 <= Applied_Tot_Dischrg
NodeLocation: 112,184,1
NodeSize: 64,40
ValueState: 2,84,90,1073,749,,MIDM

Constraint DischLoadRed_LTELoad
Title: Discharge Load Reduct LTE Load
Units: boolean
Description: This ensures that the storage discharge used to reduce load is less than or equal to the customer load.
Definition: Dischg_RedLoad_Loss1 <= Opt_Customer_Load
NodeLocation: 112,280,1
NodeSize: 64,40
ValueState: 2,100,106,1078,680,,MIDM

Constraint Int_Strg_Charge_Rate
Title: Integer Storage Charge Rate
Units: boolean
Description: A constraint to ensure that the battery charge rate does not exceed the battery's rated maximum. This includes the binary decision (Allow_Charging) so that charging is forced to zero whenever charging is not allowed.
Definition: Total_Charge2 <= Storage_Max_Power[System_Types=Opt_System2, PV_Sectors=Opt_Sector2] * App_Allow_Charging
NodeLocation: 768,88,1
NodeSize: 64,40
WindState: 2,150,501,1022,350
ValueState: 2,157,116,1111,597,1,MIDM

Constraint Int_Strg_Dischg_Rate
Title: Integer Storage Disharge Rate
Units: boolean
Description: A constraint to ensure that the battery discharge rate does not exceed the battery's rated maximum. This includes the binary decision (Allow_Charging) so that discharging is forced to zero whenever discharging is not allowed.
Definition: Total_Discharge_Los2 <= Storage_Max_Power[System_Types=Opt_System2, PV_Sectors=Opt_Sector2] * (1 - App_Allow_Charging)
NodeLocation: 768,184,1
NodeSize: 64,40
WindState: 2,11,113,813,350
ValueState: 2,175,222,773,619,,MIDM

Text Te1582133391
Description: Integer Constraints
NodeLocation: 772,184,-1
NodeSize: 84,168
NodeInfo: 1,0,0,1,1,1,0,,0,,0,,,
NodeColor: 65535,65535,65535

Text Te1582136546
Description: Only works when integer variables are active.
NodeLocation: 772,440,-1
NodeSize: 84,80
NodeInfo: 1,0,0,1,1,1,0,,0,,0,,,
NodeColor: 65535,65535,65535

Variable Check_Hrly_Charging
Title: Check Hourly Charging
Description: Sanity check to ensure that charging and discharging are not simultaneously greater than zero.
Definition: (Round(Total_Charge2, 6) > 0) AND (Round(Applied_Tot_Dischrg, 6)> 0)
IndexVals: ['item 1']
NodeLocation: 944,280,1
NodeSize: 64,40
ValueState: 2,864,8,973,473,1,MIDM
ReformVal: [Opt_Hours,Null]
Att_ResultSliceState: [PV_Climate_Zone,3,Opt_Sectors,2,Opt_Storage_Systems,1,Seq_Opt_Number,1,Rate_Vintage,2,Month,12,Opt_Hours,1]
Att_ColorRole: Null

Variable Check_HrlyBESSExport
Title: Check Hourly BESS Export
Description: Sanity check to ensure that discharged exports and electricity purchased to meet load are not simultaneously greater than zero.
Definition: (Round(App_Grid_MeetLoad2, 6) > 0) AND (Round(Dischg_Export_Loss2,6) > 0)
NodeLocation: 944,184,1
NodeSize: 64,40
WindState: 2,629,262,964,565
ValueState: 2,193,169,668,627,0,MIDM
Att_ResultSliceState: [Opt_Sectors,2,PV_Climate_Zone,1,Opt_Storage_Systems,2,Seq_Opt_Number,1,Month,1,Rate_Vintage,1]

Constraint Pos_GridElecMeetLoad
Title: Pos Grid Elect to Meet Load
Units: boolean
Description: This ensures that the grid electricity purchased to meet load is positive.
Definition: App_Grid_MeetLoad2 >= 0
NodeLocation: 432,376,1
NodeSize: 64,40

Constraint PV_LoadRed_LTE_Solar
Title: PV Load Reduct LTE Solar
Units: boolean
Description: This ensures that the PV used to reduce load is less than or equal to the total solar output.
Definition: Applied_PV_RedLoad2 <= Opt_Solar_Output
NodeLocation: 592,184,1
NodeSize: 64,40
ValueState: 2,84,90,1073,749,,MIDM

Constraint PV_LoadRed_LTE_Load
Title: PV Load Reduct LTE Load
Units: boolean
Description: This ensures that the PV used to reduce load is less than or equal to the customer load less storage discharge used to reduce load.
Definition: Applied_PV_RedLoad2 <= Opt_Customer_Load - Dischg_RedLoad_Loss1
NodeLocation: 592,280,1
NodeSize: 64,40
ValueState: 2,100,106,1078,680,,MIDM
Att_ResultSliceState: [Opt_Sectors,2,Rate_Vintage,2,PV_Climate_Zone,3,Opt_Storage_Systems,1,Seq_Opt_Number,1,Month,1,Opt_Hours,1]

Constraint Pos_Exported_PV
Title: Pos Exported PV
Units: boolean
Description: This ensures that the solar PV exported to the grid is positive.
Definition: Applied_PV_Exported2 >= 0
NodeLocation: 592,472,1
NodeSize: 64,40
WindState: 2,74,31,720,350
ValueState: 2,280,59,1158,760,0,MIDM
Att_ResultSliceState: [Rate_Vintage,1,PV_Climate_Zone,1,Opt_Storage_Systems,1,Seq_Opt_Number,1,Month,10,Area_Type,1,Opt_Sectors,2,Opt_Hours,1]

Variable Check_Valid_Exports
Title: Check Valid Exports
Description: Sanity check to ensure that exports and unmet load are not simultaneously greater than zero.
Definition: IF Sum(Check_Hourly_Export[Opt_Hours=Opt_Hr_for_Valid_Hr], Valid_Opt_Hours)~
THEN 'Error'~
ELSE 'No Error'
NodeLocation: 1096,88,1
NodeSize: 64,40
WindState: 2,629,262,964,565
ValueState: 2,1224,108,668,627,0,MIDM
Att_ResultSliceState: [Opt_Sectors,2,PV_Climate_Zone,3,Opt_Storage_Systems,2,Seq_Opt_Number,1,Month,1,Rate_Vintage,1]

Variable Check_Hourly_Export
Title: Check Hourly Export
Description: Sanity check to ensure that exports and unmet load are not simultaneously greater than zero.
Definition: (Round(Total_Exported_Elec2, 6) > 0) AND (Round(Opt_Customer_Load - Applied_PV_RedLoad2 - Dischg_RedLoad_Loss1 ,6) > 0)
NodeLocation: 944,88,1
NodeSize: 64,40
WindState: 2,629,262,964,565
ValueState: 2,74,26,1221,769,1,MIDM
ReformVal: [Opt_Hours,Null]
Att_ResultSliceState: [Opt_Sectors,1,PV_Climate_Zone,1,Opt_Storage_Systems,1,Seq_Opt_Number,1,Rate_Vintage,1,Month,1,Opt_Hours,1]
Att_ColorRole: Null

Close Storage_Optimizatio9

Module Storage_Optimizati10
Title: Storage Optimization Objective
Author: JamesMilford
Date: Mon, Dec 31, 2018 11:53 AM
NodeLocation: 264,64,1
NodeSize: 64,40
NodeInfo: 1,0,0,1,1,1,0,,0,,0,,,
DiagState: 2,111,74,1661,665,17,10
NodeColor: 65535,65535,65535

Variable Lev_NCDmdPrice_Opt
Title: Lev NC Dmd Price for Opt
Units: $/kW
Description: The non-coincident demand prices levelized over the system lifetime.
Definition: VAR price:=IF Use_Levelized_Inputs~
   THEN Lev_Non_Coinc_Dmd_Pr~
   ELSE Sum(Wtd_NC_Dmd_Price_Prd[@PV_Operating_Year=1], Periods);   {This is only valid if only one period is applicable in a every month}~
price[PV_Sectors=Opt_Sector2, PV_Climate_Zone=Opt_Climate_Zone2, Rate_Vintage=Opt_Rate_Vintage2, Month=Opt_Month2, Opt_Storage_Systems=Opt_System2]
NodeLocation: 760,656,1
NodeSize: 64,40
WindState: 2,35,171,1742,653
ValueState: 2,316,210,1156,687,,MIDM
Att_ResultSliceState: [PV_Climate_Zone,3,Opt_Sectors,2,Opt_Storage_Systems,1,Month,1,Rate_Vintage,5]

Variable OnPkDmdPrice_OptHr
Title: On-Peak Dmd Price for Opt
Units: $/kW
Description: The on-peak demand prices by Opt Hour.
Definition: VAR price:=IF Use_Levelized_Inputs~
   THEN Lev_On_Peak_Dmd_Pric~
   ELSE Sum(Wtd_OnPkDmdPrice_Prd[@PV_Operating_Year=1], Periods);   {This is only valid if only one period is applicable in a every month}~
price[PV_Sectors=Opt_Sector2, PV_Climate_Zone=Opt_Climate_Zone2, Rate_Vintage=Opt_Rate_Vintage2, Month=Opt_Month2, Opt_Storage_Systems=Opt_System2]~

NodeLocation: 760,256,1
NodeSize: 64,40
WindState: 2,102,82,1541,789
ValueState: 2,152,154,1058,630,0,MIDM
Att_ResultSliceState: [Rate_Vintage,1,PV_Climate_Zone,1,Opt_Storage_Systems,2,Area_Type,1,Opt_Sectors,1,Month,1]

Variable EnergyPrice_by_OptHr
Title: Energy Price by OptHr
Units: $/kWh
Description: The energy prices by Opt Hour.
Definition: Applied_Energy_Price[Periods=Periods_for_Prof_Opt[Data_Types=Energy_Rate_Label], PV_Sectors=Opt_Sector2, PV_Climate_Zone=Opt_Climate_Zone2, Rate_Vintage=Opt_Rate_Vintage2, Month=Opt_Month2, Opt_Storage_Systems=Opt_System2, Seq_Opt_Number=Opt_Seq_Number]
NodeLocation: 760,160,1
NodeSize: 64,40
WindState: 2,102,82,1602,709
ValueState: 2,197,9,1383,843,1,MIDM
ReformVal: [Opt_Hours,Null]
Att_ResultSliceState: [Area_Type,1,Buy_or_Sell_,1,Opt_Hours,1]
Att_ColorRole: Null

Variable StorageSyst_Net_Loa2
Title: Storage System Net Load
Units: kW-hr/customer
Description: The net customer load seen by the utility after considering storage and solar. This is shown for the nine-day optimization horizon.
Definition: Opt_Customer_Load + Applied_Stored_Grid1 - Dischg_RedLoad_Loss1 - Total_Exported_Elec2 - Applied_PV_RedLoad2
NodeLocation: 912,456,1
NodeSize: 64,40
WindState: 2,26,147,1468,538
ValueState: 2,239,37,1276,758,0,MIDM
Att_ResultSliceState: [PV_Climate_Zone,1,Opt_Storage_Systems,2,Seq_Opt_Number,1,Opt_Sectors,2,Area_Type,1,Month,1,Opt_Hours,1]

Variable Opt_Customer_Load
Title: Opt Customer Load
Units: kW-hr/customer
Description: The gross customer load considered in the optimization window.
Definition: Pre_System_Load[Profile_Hours=Opt_Hours_for_SeqOpt[Seq_Opt_Number=Opt_Seq_Number, Month=Opt_Month2], System_Types=Opt_System2, PV_Sectors=Opt_Sector2, PV_Climate_Zone=Opt_Climate_Zone2, Month=Opt_Month2, @PV_Operating_Year=1]
NodeLocation: 600,408,1
NodeSize: 64,40
WindState: 2,118,42,1329,630
ValueState: 2,99,26,1540,722,1,MIDM
ReformVal: [Opt_Hours,Null]
Att_ResultSliceState: [Seq_Opt_Number,20,Opt_Hours,1]
Att_ColorRole: Null

Variable Opt_Solar_Output
Title: Opt Solar Output
Units: kW-hr/customer
Description: The solar output levelized over the system lifetime for each optimization window.
Definition: VAR solar:=IF Use_Levelized_Inputs~
   THEN Average_Solar_Profil~
   ELSE Average_Applied_Sola[@PV_Operating_Year=1];~
solar[PV_Sectors=Opt_Sector2, PV_Climate_Zone=Opt_Climate_Zone2, Month=Opt_Month2, Profile_Hours=Opt_Hours_for_SeqOpt[Seq_Opt_Number=Opt_Seq_Number, Month=Opt_Month2]] * System_with_PV[System_Types=Opt_System2]
NodeLocation: 600,504,1
NodeSize: 64,40
WindState: 2,40,319,1540,500
ValueState: 2,414,109,1103,690,1,MIDM
ReformVal: [Opt_Hours,Null]
Att_ResultSliceState: [PV_Sectors,1,PV_Climate_Zone,1,Storage_Systems,1,Month,1,Seq_Opt_Number,1,Opt_Hours,1]
Att_ColorRole: Null

Variable Cost_of_Purch_Elect2
Title: Cost of Purchased Electricity
Units: $/month
Description: The optimized total cost of purchased energy (excluding demand charges).~
~
This is scaled to be $/month for consistency with demand charges, eg, [$/window] * [windows/month] = [$/month].
Definition: Sum(Purchased_Electric2 * EnergyPrice_by_OptHr[Buy_or_Sell_=Buy_Price_Label], Opt_Hours) * Mthly_Scaling_SeqOpt[Month=Opt_Month2, Seq_Opt_Number=Opt_Seq_Number]
NodeLocation: 912,160,1
NodeSize: 64,40
WindState: 2,218,222,1194,695
ValueState: 2,182,239,1294,290,0,MIDM
Att__TotalsIndex: [Month]
Att_ResultSliceState: [PV_Climate_Zone,1,Rate_Vintage,1,Seq_Opt_Number,1,Opt_Storage_Systems,2,Area_Type,1,Opt_Sectors,1,Month,1]

Variable Value_of_Export_Ele2
Title: Value of Exported Electricity
Units: $/month
Description: The optimized total value of exporting energy to the grid. ~
~
This is scaled to be $/month for consistency with demand charges, eg, [$/window] * [windows/month] = [$/month].
Definition: Sum(Total_Exported_Elec2 * EnergyPrice_by_OptHr[Buy_or_Sell_=Sell_Price_Label], Opt_Hours) * Mthly_Scaling_SeqOpt[Month=Opt_Month2, Seq_Opt_Number=Opt_Seq_Number]
NodeLocation: 912,64,1
NodeSize: 64,40
WindState: 2,3,37,1138,560
ValueState: 2,414,8,864,864,0,MIDM
Att__TotalsIndex: [Month]
Att_ResultSliceState: [Rate_Vintage,1,PV_Climate_Zone,2,Seq_Opt_Number,1,Opt_Storage_Systems,1,Area_Type,1,Month,1,Opt_Sectors,1]

Objective Total_Optimized_Cos2
Title: Total Optimized Cost
Units: $/month
Description: The expected cost of electricity and demand charges less any export credits. This is levelized on a per-period basis (eg, annually) over the system lifetime.~
~
The objective for each atomic optimization has been scaled to $/month, so you cannot sum across sequential optimization numbers.
Definition: Cost_of_Purch_Elect2 - Value_of_Export_Ele2 + Cost_of_On_Peak_Dmd2 + Cost_of_NonCoinc_Dm2 + Incurred_Variabilit1 + Incurr_SimultPenalty + Incur_Export_Penalty
NodeLocation: 1152,200,1
NodeSize: 64,40
WindState: 2,604,166,1169,658
ValueState: 2,515,244,1105,418,0,MIDM
ReformVal: [PV_Climate_Zone,Opt_Sectors]
Att__TotalsIndex: []
Att_ResultSliceState: [Rate_Vintage,1,Seq_Opt_Number,1,Opt_Storage_Systems,2,Area_Type,1,Month,8,Opt_Sectors,1,PV_Climate_Zone,2]

Variable Opt_Net_Load
Title: Opt Net Load
Units: kW-hr/customer
Description: The customer load net of the levelized PV output for the optimization window.
Definition: IF Opt_Storage_Systems = Storage_Added_Label~
THEN Opt_Customer_Load~
ELSE Opt_Customer_Load - Opt_Solar_Output
NodeLocation: 760,504,1
NodeSize: 64,40
ValueState: 2,158,20,1338,684,,MIDM
ReformVal: [Opt_Hours,Opt_Storage_Systems]

Variable Non_Coincident_Load2
Title: Non-Coincident Load
Units: kW-hr/customer
Description: The net customer load during hours when non-coincident demand charges are applicable.
Definition: StorageSyst_Net_Loa2 * Non_Coinc_Dmd_Perio2
NodeLocation: 912,560,1
NodeSize: 64,40
ValueState: 2,624,1,1140,777,1,MIDM
ReformVal: [Opt_Hours,Seq_Opt_Number]
Att_ResultSliceState: [PV_Sectors,2,Rate_Vintage,4,PV_Climate_Zone,1,Storage_Systems,1,Seq_Opt_Number,1,Month,1,Opt_Hours,1]

Variable On_Peak_Load2
Title: On-Peak Load
Units: kW-hr/customer
Description: The net customer load during hours when on-peak demand charges are applicable.
Definition: StorageSyst_Net_Loa2 * On_Peak_Dmd_Periods2
NodeLocation: 912,352,1
NodeSize: 64,40
ValueState: 2,34,63,1048,776,,MIDM
ReformVal: [Opt_Hours,Seq_Opt_Number]
Att_ResultSliceState: [PV_Sectors,2,Rate_Vintage,4,PV_Climate_Zone,1,Storage_Systems,1,Seq_Opt_Number,1,Month,1,Opt_Hours,1]

Variable Cost_of_On_Peak_Dmd2
Title: Cost of On-Peak Dmd
Units: $/month
Description: The optimized total cost of on-peak demand charges.
Definition: OnPkDmdPrice_OptHr * Applied_OnPeak_Dmd2
NodeLocation: 912,256,1
NodeSize: 64,40
ValueState: 2,311,31,939,752,0,MIDM
ReformVal: [PV_Climate_Zone,Opt_Sectors]
Att_ResultSliceState: [Rate_Vintage,1,Month,8,Opt_Storage_Systems,2,Area_Type,1,Opt_Sectors,1,PV_Climate_Zone,1]

Variable Cost_of_NonCoinc_Dm2
Title: Cost of Non-Coinc Dmd
Units: $/month
Description: The optimized total cost of non-coincident demand charges.
Definition: Lev_NCDmdPrice_Opt * Applied_NonCoinc_Dm2
NodeLocation: 912,656,1
NodeSize: 64,40
WindState: 2,102,82,1029,474
ValueState: 2,152,154,1139,717,0,MIDM
ReformVal: [Month,Seq_Opt_Number]
Att_ResultSliceState: [PV_Sectors,2,Rate_Vintage,4,PV_Climate_Zone,1,Storage_Systems,1,Month,1,Seq_Opt_Number,1]

Text Te1552348254
Description: For weighted prices, need to map storage systems to net load from relevant non-system types. Eg, solar + storage would map to a load profile net of PV, while a storage-only systems would map to a load profile without PV.
NodeLocation: 1420,608,-1
NodeSize: 188,56
NodeInfo: 1,0,0,1,1,1,0,,0,,0,,,
NodeColor: 65535,65535,65535

Variable Non_Coinc_Dmd_Perio2
Title: Non-Coinc Dmd Periods
Units: boolean
Description: The hours in which the maximum non-coincident demand is determined.
Definition: VAR periodFlags:=((Periods = Periods_for_Prof_Opt[Data_Types=Flat_Demand_Label]) * (Wtd_NC_Dmd_Price_Prd[@PV_Operating_Year=1] > 0))[PV_Sectors=Opt_Sector2, Rate_Vintage=Opt_Rate_Vintage2, PV_Climate_Zone=Opt_Climate_Zone2, Month=Opt_Month2, Opt_Storage_Systems=Opt_System2];~
~
Sum(periodFlags, Periods) ;  {This is only valid if only one period is applicable in every month}
NodeLocation: 296,560,1
NodeSize: 64,40
WindState: 2,1,6,1540,795
ValueState: 2,247,81,1059,831,1,MIDM
ReformVal: [Ext_Day_and_Hour,Periods]

Variable On_Peak_Dmd_Periods2
Title: On-Peak Dmd Periods
Units: boolean
Description: The hours in which the maximum on-peak period demand is determined.
Definition: VAR periodFlags:=((Periods = Periods_for_Prof_Opt[Data_Types=Demand_Rate_Label]) * (Wtd_OnPkDmdPrice_Prd[@PV_Operating_Year=1] > 0))[PV_Sectors=Opt_Sector2, Rate_Vintage=Opt_Rate_Vintage2, PV_Climate_Zone=Opt_Climate_Zone2, Month=Opt_Month2, Opt_Storage_Systems=Opt_System2];~
~
Sum(periodFlags, Periods) ;  {This is only valid if only one period is applicable in every month}~

NodeLocation: 240,352,1
NodeSize: 64,40
WindState: 2,0,144,1874,795
ValueState: 2,19,64,1687,616,1,MIDM
ReformVal: [Opt_Hours,Periods]
Att_ResultSliceState: [Rate_Vintage,1,PV_Climate_Zone,1,Seq_Opt_Number,1,Opt_Sectors,2,Opt_Storage_Systems,2,Area_Type,1,Month,6,Opt_Hours,1]

Text Te1552348255
Description: If PV output is levelized, there will be some inconsistency between the load offset by PV in the storage and non-storage systems, with the non-storage system showing more PV. This might lead to misleading first-year bill savings estimates by making the storage system (using levelized PV production) look only slightly better than the PV only system.
NodeLocation: 1028,816,-1
NodeSize: 172,88
NodeInfo: 1,0,0,1,1,1,0,,0,,0,,,
NodeColor: 65535,65535,65535

Text Te1552348256
Description: Warning: The code for demand prices and load for  max demand is only valid if there's only one demand TOU period for each month. For SDGE rates, only one demand period is applicable to each month, but this may not be true for other jurisdictions. The logic currently assumes that demand charges only have one TOU period per month. If rates have more than one period per month, then this logic will require revision and the decision variables for demand will need to be dimensioned by TOU period.
NodeLocation: 1420,148,-1
NodeSize: 188,124
NodeInfo: 1,0,0,1,1,1,0,,0,,0,,,
NodeColor: 65535,65535,65535

Text Te1552348257
Description: For tractability and linearity, non-coincident demand charges are calculated for each month and no comparison is made against 50% of the annual maximum non-coincident demand as is prescribed in the rate tariffs.
NodeLocation: 1420,740,-1
NodeSize: 188,60
NodeInfo: 1,0,0,1,1,1,0,,0,,0,,,
NodeColor: 65535,65535,65535

Decision Map_Tier_Wts_to_Str2
Title: Map Tier Weights to Storage Syst
Description: Maps storage systems to a similar non-storage system in order to estimate the weights by tier that determine average retail energy/demand rates. 
Definition: Table(All_Storage_Systems)(Choice(All_System_Types,1,0),Choice(All_System_Types,1,0),Choice(All_System_Types,1,0),Choice(All_System_Types,6,0),Choice(All_System_Types,7,0))
NodeLocation: 104,416,1
NodeSize: 64,40
WindState: 2,419,215,720,680
DefnState: 2,1259,409,565,248,0,DFNM
Aliases: FormNode Fo1552348254
NodeColor: 65535,65531,1
ReformDef: [0,Opt_Storage_Systems]
TableCellDefault: Choice(All_System_Types,1,0)

Decision Map_Tier_WeightsLoad
Title: Map Tier Weights to Pre/Post for Load
Description: Maps storage systems to a the appropriate pre or post condition for a similar non-storage system in order to estimate the weights by tier that determine average retail energy/demand rates.
Definition: Table(All_Storage_Systems)(Choice(Pre_and_Post_System,2,0),Choice(Pre_and_Post_System,2,0),Choice(Pre_and_Post_System,2,0),Choice(Pre_and_Post_System,1,0),Choice(Pre_and_Post_System,1,0))
NodeLocation: 104,504,1
NodeSize: 104,40
WindState: 2,326,439,720,499
DefnState: 2,1026,300,472,249,0,DFNM
Aliases: FormNode Fo1552348255
NodeColor: 65535,65531,1
ReformDef: [0,Opt_Storage_Systems]
TableCellDefault: Choice(Pre_and_Post_System, 1, 0)

FormNode Fo1552348254
Title: Map Tier Weights to Storage Syst
Definition: 0
NodeLocation: 112,364,1
NodeSize: 56,12
NodeInfo: 1,0,0,0,0,0,0,,0,,0,,,
Original: Map_Tier_Wts_to_Str2

FormNode Fo1552348255
Title: Map Tier Weights to Pre/Post
Definition: 0
NodeLocation: 112,556,1
NodeSize: 56,12
NodeInfo: 1,0,0,0,0,0,0,,0,,0,,,
Original: Map_Tier_WeightsLoad

Text Te1552348258
Description: When calculating levelized rates, the rates are escalated at the inflation rate, not the rate escalation scenario that is selected. This may not have a material impact on the optimized dispatch, since all rate components (eg, energy and demand) will be escalating similarly. However, higher escalation rates would lead to larger absolute deltas between rates (eg, deltas between different time of use periods and deltas between energy and demand rates) and could change the optimal dispatch strategy.
NodeLocation: 1420,412,-1
NodeSize: 188,124
NodeInfo: 1,0,0,1,1,1,0,,0,,0,,,
NodeColor: 65535,65535,65535

Variable Lev_Utility_Bill
Title: Levelized Utility Bill
Units: $
Description: The expected cost of electricity and demand charges less any export credits. This is levelized  on a per-period basis (eg, annually) over the system lifetime.
Definition: VAR monthsPerWindow:=Divide(1, MthlyScale_ValidOpt, True);   {Need to be able to convert $/month back to $/window, so we can sum energy charges/credits across sequential optimization numbers}~
VAR purchElect:=Sum((Purchased_Electric2 * EnergyPrice_by_OptHr[Buy_or_Sell_=Buy_Price_Label])[Opt_Hours=Valid_Opt_Hours] * MthlyScale_ValidOpt, Valid_Opt_Hours, Seq_Opt_Number);~
VAR exportElect:=Sum((Total_Exported_Elec2 * EnergyPrice_by_OptHr[Buy_or_Sell_=Sell_Price_Label])[Opt_Hours=Valid_Opt_Hours] * MthlyScale_ValidOpt, Valid_Opt_Hours, Seq_Opt_Number);~
purchElect - ExportElect + Max(Cost_of_On_Peak_Dmd2, Seq_Opt_Number) + Max(Cost_of_NonCoinc_Dm2, Seq_Opt_Number);
NodeLocation: 1152,360,1
NodeSize: 64,40
ValueState: 2,382,233,1266,481,0,MIDM
Aliases: FormNode Fo1558047121, FormNode Fo1571775093
Att__TotalsIndex: [Month,Seq_Opt_Number]
Att_ResultSliceState: [PV_Climate_Zone,1,Opt_Storage_Systems,1,Month,1,Rate_Vintage,1]

Alias Al1571847186
Title: Pre System Load
Definition: 1
NodeLocation: 440,336,1
NodeSize: 64,40
Original: Pre_System_Load

Alias Al1571852559
Title: Levelized Solar Profile
Definition: 1
NodeLocation: 448,504,1
NodeSize: 64,40
Original: Average_Solar_Profil

Variable Wtd_Energy_Buy_Price
Title: Wtd Energy Buy Price by Period
Units: $/kWh
Description: The weighted energy price by period. This is weighted by the amount of energy falling in each tier for the system prior to adding storage. Implicitly, this assumes that storage will not shift the monthly energy consumption enough to change the percentage of monthly consumption falling in each tier.
Definition: Sum(Pct_Consump_by_Tier[System_Types=Map_Tier_Wts_to_Str2[All_Storage_Systems=Opt_Storage_Systems], Pre_and_Post_System=Map_Tier_WeightsLoad[All_Storage_Systems=Opt_Storage_Systems]] * {OLD: Energy_Price}~
Energy_Price_Buy_Se1[Pre_and_Post_System=Map_Tier_WeightsPric[All_Storage_Systems=Opt_Storage_Systems],System_Types=Opt_Storage_Systems], Tiers)
NodeLocation: 96,144,1
NodeSize: 64,40
WindState: 2,7,14,1502,537
ValueState: 2,2951,370,799,450,0,MIDM
NodeColor: 65535,39321,39321
ReformVal: [Periods,Month]
NumberFormat: 2,F,2,3,0,0,2,0,$,0,"ABBREV",0,,,0,0,15,
NodeFontColor: 0,0,0
Att_ResultSliceState: [PV_Climate_Zone,1,Rate_Vintage,1,Opt_Storage_Systems,1,Area_Type,1,Buy_or_Sell_,2,PV_Sectors,2,Month,5,Periods,2]

Variable Lev_Energy_Price_Prd
Title: Lev Energy Price by Period
Units: lev $/kWh
Description: The energy prices by period levelized over the system lifetime.
Definition: PMT(Nominal_Equity_Rate, Economic_Lifetime, -NPV(Nominal_Equity_Rate, Wtd_Energy_Buy_Price, PV_Operating_Year))
NodeLocation: 384,208,1
NodeSize: 64,40
WindState: 2,102,82,1169,464
ValueState: 2,64,51,1721,843,0,MIDM
ReformVal: [Month,PV_Sectors]
Att_ResultSliceState: [PV_Climate_Zone,1,Rate_Vintage,1,Opt_Storage_Systems,2,Periods,1,Area_Type,1,Buy_or_Sell_,1,PV_Sectors,1,Month,6]

Variable Periods_for_Prof_Opt
Title: Periods for Profile Opt
Description: The Profile Hours mapped to the corresponding rate period. This should only be used for the storage optimization since the system types and pre/post systems are specific to storage systems.
Definition: Periods_by_ProfileHr[System_Types=Map_Tier_Wts_to_Str2[All_Storage_Systems=Opt_Storage_Systems], Pre_and_Post_System=Map_Tier_WeightsPric[All_Storage_Systems=Opt_Storage_Systems], Profile_Hours=Opt_Hours_for_SeqOpt[Seq_Opt_Number=Opt_Seq_Number]]
NodeLocation: 312,456,1
NodeSize: 64,40
WindState: 2,55,333,1601,649
ValueState: 2,25,28,1173,755,1,MIDM
NodeColor: 65535,52427,52427
ReformVal: [Opt_Hours,Null]
Att_ResultSliceState: [PV_Sectors,1,PV_Climate_Zone,1,Data_Types,3,Rate_Vintage,5,Opt_Storage_Systems,1,Month,4,Seq_Opt_Number,1,Opt_Hours,1]
Att_ColorRole: Null

Variable Wtd_NC_Dmd_Price_Prd
Title: Wtd Non-Coinc Dmd Price by Period
Units: $/kW
Description: The non-coincident demand prices by TOU period weighted across tiers based on the amount of load falling in each tier. The load should be net of solar if the storage system is combined with solar.
Definition: Sum(Pct_Demand_by_Tier[Demand_Data_Types=Flat_Demand_Label, System_Types=Map_Tier_Wts_to_Str2[All_Storage_Systems=Opt_Storage_Systems], Pre_and_Post_System=Map_Tier_WeightsLoad[All_Storage_Systems=Opt_Storage_Systems]] * Non_Coinc_Dmd_Price[Pre_and_Post_System=Map_Tier_WeightsPric[All_Storage_Systems=Opt_Storage_Systems], System_Types=Opt_Storage_Systems], Tiers);
NodeLocation: 104,656,1
NodeSize: 64,40
WindState: 2,405,367,1498,833
ValueState: 2,33,250,857,640,0,MIDM
ReformVal: [Periods,Month]
Att_ResultSliceState: [PV_Sectors,2,Rate_Vintage,4,PV_Climate_Zone,1,PV_Operating_Year,1,All_Storage_Systems,1,Month,1,Periods,1]

Variable Lev_Non_Coinc_Dmd_Pr
Title: Lev Non-Coinc Dmd Price
Units: $/kW
Description: The non-coincident demand prices by TOU period levelized over the system lifetime.
Definition: VAR priceOverPeriods:=Sum(Wtd_NC_Dmd_Price_Prd, Periods);   {This is only valid if only one period is applicable in a every month}~
~
PMT(Nominal_Equity_Rate, Economic_Lifetime, -NPV(Nominal_Equity_Rate, priceOverPeriods, PV_Operating_Year))*test_include_demand
NodeLocation: 600,656,1
NodeSize: 64,40
WindState: 2,102,82,1714,653
ValueState: 2,88,90,1156,783,,MIDM
ReformVal: [Month,Periods]
Att_ResultSliceState: [PV_Sectors,2,PV_Climate_Zone,1,All_Storage_Systems,1,Rate_Vintage,4,Periods,1,Month,1]

Variable Wtd_OnPkDmdPrice_Prd
Title: Wtd On-Peak Dmd Price by Period
Units: $/kW
Description: The on-peak demand prices by period weighted across tiers based on the amount of load falling in each tier. The load should be net of solar if the storage system is combined with solar.
Definition: Sum(Pct_Demand_by_Tier[Demand_Data_Types=Demand_Rate_Label, System_Types=Map_Tier_Wts_to_Str2[All_Storage_Systems=Opt_Storage_Systems], Pre_and_Post_System=Map_Tier_WeightsLoad[All_Storage_Systems=Opt_Storage_Systems]] * On_Peak_Demand_Price[Pre_and_Post_System=Map_Tier_WeightsPric[All_Storage_Systems=Opt_Storage_Systems], System_Types=Opt_Storage_Systems], Tiers) *test_include_demand;
NodeLocation: 216,248,1
NodeSize: 64,40
WindState: 2,91,217,1710,418
ValueState: 2,28,11,896,749,0,MIDM
NodeColor: 65535,1,1
ReformVal: [Periods,Month]
Att_ResultSliceState: [PV_Sectors,2,Rate_Vintage,4,PV_Climate_Zone,1,PV_Operating_Year,1,All_Storage_Systems,1,Month,1,Periods,1]

Variable Lev_On_Peak_Dmd_Pric
Title: Lev On-Peak Dmd Price
Units: $/kW
Description: The on-peak demand prices levelized over the system lifetime.
Definition: VAR priceOverPeriods:=Sum(Wtd_OnPkDmdPrice_Prd, Periods);   {This is only valid if only one period is applicable in a every month}~
~
PMT(Nominal_Equity_Rate, Economic_Lifetime, -NPV(Nominal_Equity_Rate, priceOverPeriods, PV_Operating_Year))*test_include_demand~

NodeLocation: 592,288,1
NodeSize: 64,40
WindState: 2,102,82,1541,789
ValueState: 2,844,31,759,700,0,MIDM
Att_ResultSliceState: [PV_Climate_Zone,1,Rate_Vintage,1,Opt_Storage_Systems,2,Area_Type,1,PV_Sectors,2,Month,1]

Module Objective_Diagnostic
Title: Objective Diagnostics
Author: JamesMilford
Date: Wed, Oct 30, 2019 8:57 PM
NodeLocation: 1136,656,1
NodeSize: 64,40
NodeInfo: 1,0,0,1,1,1,0,,0,,0,,,
DiagState: 2,230,59,1460,702,17,10

Index Compare_Elements
Title: Compare Elements
Definition: ['Monthly Energy','']
NodeLocation: 112,384,1
NodeSize: 64,40
WindState: 2,752,32,720,350

Variable Opt_Monthly_Energy
Title: Opt Monthly Energy
Definition: Sum((Purchased_Electric2-Total_Exported_Elec2)[Opt_Hours=Opt_Hr_for_Valid_Hr], Seq_Opt_Number, Valid_Opt_Hours)
NodeLocation: 112,120,1
NodeSize: 64,40
ValueState: 2,882,104,996,521,0,MIDM
Att__TotalsIndex: [Rate_Vintage]
Att_ResultSliceState: [PV_Sectors,2,Rate_Vintage,4,PV_Climate_Zone,1,Storage_Systems,1,Month,1,Valid_Opt_Hours,1]

Variable Bill_Monthly_Energy
Title: Bill Monthly Energy
Definition: Monthly_Consump[Pre_and_Post_System=Post_System_Label, System_Types=Storage_Systems, @PV_Operating_Year=1]
NodeLocation: 256,120,1
NodeSize: 64,40
ValueState: 2,14,85,901,703,,MIDM
ReformVal: [Month,PV_Operating_Year]
Att_ResultSliceState: [PV_Sectors,2,Rate_Vintage,4,PV_Climate_Zone,1,Storage_Systems,1,Month,1,PV_Operating_Year,1]

Variable Compare1
Definition: [Opt_Monthly_Energy,Bill_Monthly_Energy]
NodeLocation: 400,120,1
NodeSize: 64,40
NodeInfo: 1,1,1,1,1,1,0,0,0,0,,0,1,0
ValueState: 2,228,234,844,575,,MIDM
GraphSetup: Att_CatLineStyle Graph_Primary_Valdim:5
ReformVal: [Month,Self]
Att_ResultSliceState: [PV_Sectors,2,PV_Climate_Zone,1,Storage_Systems,1,Rate_Vintage,4,Self,2,Month,1]

Variable Opt_Peak_Dmd
Title: Opt Peak Dmd
Definition: Max(Applied_OnPeak_Dmd2, Seq_Opt_Number)
NodeLocation: 112,208,1
NodeSize: 64,40

Variable Bill_Peak_Dmd
Title: Bill Peak Dmd
Definition: Sum(On_Peak_Demand[@PV_Operating_Year=1, Pre_and_Post_System=Post_System_Label, System_Types=Storage_Systems] * (Periods<>'period0'), Tiers, Periods)
NodeLocation: 256,208,1
NodeSize: 64,40
ValueState: 2,324,330,637,513,,MIDM
ReformVal: [Month,Null]
Att_ColorRole: Null

Variable Compare12
Definition: [Opt_Peak_Dmd,Bill_Peak_Dmd]
NodeLocation: 400,208,1
NodeSize: 64,40
NodeInfo: 1,1,1,1,1,1,0,0,0,0,,0,1,0
ValueState: 2,583,11,947,646,,MIDM
ReformVal: [Month,Self]
Att_ResultSliceState: [PV_Sectors,2,Rate_Vintage,4,PV_Climate_Zone,1,System_Types,1,Storage_Systems,1,Self,1,Month,1]

Variable Opt_NC_Dmd
Title: Opt NC Dmd
Definition: Max(Applied_NonCoinc_Dm2, Seq_Opt_Number)
NodeLocation: 112,296,1
NodeSize: 64,40
ReformVal: [Month,Rate_Vintage]
Att_ResultSliceState: [PV_Sectors,2,PV_Climate_Zone,1,Storage_Systems,1,Month,1,Rate_Vintage,1]

Variable Bill_NC_Dmd
Title: Bill NC Dmd
Definition: Sum(Non_Coincident_Dema1[@PV_Operating_Year=1, Pre_and_Post_System=Post_System_Label, System_Types=Storage_Systems], Tiers, Periods)
NodeLocation: 256,296,1
NodeSize: 64,40
ValueState: 2,324,330,637,513,,MIDM
ReformVal: [Month,Null]
Att_ResultSliceState: [PV_Sectors,2,Rate_Vintage,4,PV_Climate_Zone,1,Storage_Systems,1,Month,1]
Att_ColorRole: Null

Variable Compare3
Definition: [Opt_NC_Dmd,Bill_NC_Dmd]
NodeLocation: 400,296,1
NodeSize: 64,40
NodeInfo: 1,1,1,1,1,1,0,0,0,0,,0,1,0
ValueState: 2,411,46,912,717,,MIDM
GraphSetup: Att_CatLineStyle Graph_Primary_Valdim:5
ReformVal: [Month,Self]
Att_ResultSliceState: [PV_Sectors,2,Rate_Vintage,4,PV_Climate_Zone,1,Storage_Systems,1,Self,1,Month,1]

Variable Bill_Energy_Rate
Title: Bill Energy Rate
Definition: Sum(Pct_Consump_by_Tier[Pre_and_Post_System=Map_Tier_WeightsLoad[All_Storage_Systems=Opt_Storage_Systems], System_Types=Map_Tier_Wts_to_Str2] * Energy_Price[Pre_and_Post_System=Map_Tier_WeightsLoad[All_Storage_Systems=Opt_Storage_Systems]], Tiers)[@PV_Operating_Year=1]
NodeLocation: 256,384,1
NodeSize: 64,40
WindState: 2,98,82,1267,583
ValueState: 2,742,12,801,651,,MIDM
ReformVal: [Month,Periods]
Att_ResultSliceState: [PV_Sectors,2,Rate_Vintage,4,PV_Climate_Zone,1,PV_Operating_Year,1,All_Storage_Systems,1,Periods,1,Month,1]

Variable Compare4
Definition: [Lev_Energy_Price_Prd,Bill_Energy_Rate]
NodeLocation: 400,384,1
NodeSize: 64,40
NodeInfo: 1,1,1,1,1,1,0,0,0,0,,0,1,0
ValueState: 2,308,80,1003,769,,MIDM
GraphSetup: Graph_SymbolKey:1~
Att_CatLineStyle Graph_Primary_Valdim:5
ReformVal: [Month,Self]
Att_ResultSliceState: [PV_Sectors,2,Rate_Vintage,4,PV_Climate_Zone,1,All_Storage_Systems,1,Self,1,Month,1]
Att_ColorRole: Compare4
Att_SymbolRole: Periods

Variable Bill_Peak_Rate
Title: Bill Peak Rate
Definition: Sum(Pct_Demand_by_Tier[Demand_Data_Types=Demand_Rate_Label, Pre_and_Post_System=Map_Tier_WeightsLoad[All_Storage_Systems=Opt_Storage_Systems], System_Types=Map_Tier_Wts_to_Str2[All_Storage_Systems=Opt_Storage_Systems]] * On_Peak_Demand_Price[Pre_and_Post_System=Map_Tier_WeightsLoad[All_Storage_Systems=Opt_Storage_Systems]], Tiers, Periods)[@PV_Operating_Year=1]
NodeLocation: 256,472,1
NodeSize: 64,40
WindState: 2,98,82,1267,583
ValueState: 2,742,12,801,651,,MIDM
ReformVal: [Month,Periods]
Att_ResultSliceState: [PV_Sectors,2,Rate_Vintage,4,PV_Climate_Zone,1,PV_Operating_Year,1,All_Storage_Systems,1,Periods,1,Month,1]

Variable Compare5
Definition: [Lev_On_Peak_Dmd_Pric,Bill_Peak_Rate]
NodeLocation: 400,472,1
NodeSize: 64,40
NodeInfo: 1,1,1,1,1,1,0,0,0,0,,0,1,0
ValueState: 2,174,32,1107,729,,MIDM
GraphSetup: Graph_SymbolKey:1~
Att_CatLineStyle Graph_Primary_Valdim:1
ReformVal: [Month,Rate_Vintage]
Att_ResultSliceState: [PV_Sectors,2,Rate_Vintage,4,PV_Climate_Zone,1,All_Storage_Systems,1,Rate_Vintage,4,Month,1]
Att_ColorRole: Compare5
Att_SymbolRole: Periods

Variable Bill_NC_Rate
Title: Bill NC Rate
Definition: Sum(Pct_Demand_by_Tier[Demand_Data_Types=Flat_Demand_Label, Pre_and_Post_System=Map_Tier_WeightsLoad[All_Storage_Systems=Opt_Storage_Systems], System_Types=Map_Tier_Wts_to_Str2[All_Storage_Systems=Opt_Storage_Systems]] * Non_Coinc_Dmd_Price[Pre_and_Post_System=Map_Tier_WeightsLoad[All_Storage_Systems=Opt_Storage_Systems]], Tiers, Periods)[@PV_Operating_Year=1]
NodeLocation: 256,560,1
NodeSize: 64,40
WindState: 2,98,82,1267,583
ValueState: 2,742,12,801,651,,MIDM
ReformVal: [Month,Periods]
Att_ResultSliceState: [PV_Sectors,2,Rate_Vintage,4,PV_Climate_Zone,1,PV_Operating_Year,1,All_Storage_Systems,1,Periods,1,Month,1]

Variable Compare6
Definition: [Lev_Non_Coinc_Dmd_Pr,Bill_NC_Rate]
NodeLocation: 400,560,1
NodeSize: 64,40
NodeInfo: 1,1,1,1,1,1,0,0,0,0,,0,1,0
ValueState: 2,380,10,705,695,,MIDM
ReformVal: [Month,Self]
Att_ResultSliceState: [PV_Sectors,2,Rate_Vintage,4,PV_Climate_Zone,1,All_Storage_Systems,1,Self,1,Month,1]

Variable Opt_Energy_by_Period
Title: Opt Energy by Period
Definition: VAR map:=Periods = Periods_for_Prof_Opt[Data_Types=Energy_Rate_Label];~
Sum(((Purchased_Electric2-Total_Exported_Elec2) * map)[Opt_Hours=Opt_Hr_for_Valid_Hr] * MthlyScale_ValidOpt, Seq_Opt_Number, Valid_Opt_Hours)
NodeLocation: 120,648,1
NodeSize: 64,40
WindState: 2,98,82,1311,391
ValueState: 2,18,4,749,542,0,MIDM
ReformVal: [Periods,Month]
Att__TotalsIndex: [Periods,Month]
Att_ResultSliceState: [PV_Sectors,2,Rate_Vintage,4,PV_Climate_Zone,1,All_Storage_Systems,1,Seq_Opt_Number,1,Month,1,Periods,1,Opt_Hours,1]

Variable Bill_Energy_by_Perio
Title: Bill Energy by Period
Definition: Consum_by_TOU_Prd[Pre_and_Post_System=Post_System_Label, System_Types=Storage_Systems, @PV_Operating_Year=1]
NodeLocation: 264,648,1
NodeSize: 64,40
ValueState: 2,356,252,859,636,0,MIDM
ReformVal: [Periods,Month]
Att__TotalsIndex: [Month,Periods]
Att_ResultSliceState: [PV_Sectors,2,Rate_Vintage,4,PV_Climate_Zone,1,Storage_Systems,1,Month,1,Periods,1]

Variable Compare7
Definition: [Opt_Energy_by_Period,Bill_Energy_by_Perio]
NodeLocation: 400,648,1
NodeSize: 64,40
NodeInfo: 1,1,1,1,1,1,0,0,0,0,,0,1,0
ValueState: 2,366,11,1048,785,,MIDM
GraphSetup: Graph_SymbolKey:1~
Att_CatLineStyle Graph_Primary_Valdim:5
ReformVal: [Month,Periods]
Att_ResultSliceState: [PV_Sectors,2,PV_Climate_Zone,1,Storage_Systems,1,Self,1,Rate_Vintage,4,Periods,1,Month,1]
Att_ColorRole: Periods
Att_SymbolRole: Compare7

Variable Energy_Cost
Title: Energy Cost
Definition: VAR rates:=Compare4[@Compare4=@Opt_or_Bill];~
VAR energy:=Compare7[@Compare7=@Opt_or_Bill];~
Sum(rates * energy, Periods)
NodeLocation: 552,560,1
NodeSize: 64,40
ValueState: 2,807,122,845,650,0,MIDM
ReformVal: [Opt_or_Bill,Month]
Att__TotalsIndex: [Month]
Att_ResultSliceState: [PV_Sectors,2,PV_Climate_Zone,1,Storage_Systems,1,Rate_Vintage,4,Opt_or_Bill,1,Month,1]

Index Opt_or_Bill
Title: Opt or Bill
Definition: ['Opt','Bill']
NodeLocation: 560,64,1
NodeSize: 64,40

Variable Bill_Energy_Cost
Title: Bill Energy Cost
Definition: Monthly_Energy_Cost[Pre_and_Post_System=Post_System_Label, System_Types=Storage_Systems, @PV_Operating_Year=1]
NodeLocation: 696,560,1
NodeSize: 64,40
ValueState: 2,529,122,950,640,0,MIDM
ReformVal: [Null,Month]
Att__TotalsIndex: [Month]
Att_ResultSliceState: [PV_Sectors,2,Rate_Vintage,4,PV_Climate_Zone,1,Storage_Systems,1,Month,1]
Att_ColorRole: Null

Variable Obj_Energy_Cost
Title: Obj Energy Cost
Definition: Average(Cost_of_Purch_Elect2 - Value_of_Export_Ele2, Seq_Opt_Number)
NodeLocation: 840,560,1
NodeSize: 64,40
ValueState: 2,22,125,789,601,0,MIDM
ReformVal: [Null,Month]
Att__TotalsIndex: [Month]
Att_ResultSliceState: [PV_Sectors,2,PV_Climate_Zone,1,Storage_Systems,1,Rate_Vintage,4,Month,1,Seq_Opt_Number,1]

Variable On_Peak_Cost
Title: On Peak Cost
Definition: VAR rates:=Compare5[@Compare5=@Opt_or_Bill];~
VAR demand:=Compare12[@Compare12=@Opt_or_Bill];~
rates * demand
NodeLocation: 552,208,1
NodeSize: 64,40
ValueState: 2,510,198,1171,653,0,MIDM
ReformVal: [Opt_or_Bill,Month]
Att_ResultSliceState: [PV_Sectors,2,Rate_Vintage,4,PV_Climate_Zone,1,Storage_Systems,1,Opt_or_Bill,1,Month,1]

Variable Bill_On_Peak_Cost
Title: Bill On Peak Cost
Definition: On_Peak_Demand_Cost[Pre_and_Post_System=Post_System_Label, System_Types=Storage_Systems, @PV_Operating_Year=1]
NodeLocation: 696,208,1
NodeSize: 64,40
ValueState: 2,211,49,548,533,0,MIDM
ReformVal: [Null,Month]
Att_ResultSliceState: [PV_Sectors,2,PV_Climate_Zone,1,Storage_Systems,1,Rate_Vintage,4,Month,1]

Variable NC_Cost
Title: NC Cost
Definition: VAR rates:=Compare6[@Compare6=@Opt_or_Bill];~
VAR demand:=Compare3[@Compare3=@Opt_or_Bill];~
rates * demand
NodeLocation: 552,296,1
NodeSize: 64,40
ValueState: 2,742,5,667,672,0,MIDM
ReformVal: [Opt_or_Bill,Month]
Att__TotalsIndex: [Month]
Att_ResultSliceState: [PV_Sectors,2,Rate_Vintage,4,PV_Climate_Zone,1,Storage_Systems,1,Month,1,Opt_or_Bill,1]

Variable Bill_NC_Cost
Title: Bill NC Cost
Definition: Non_Coinc_Dmd_Cost[Pre_and_Post_System=Post_System_Label, System_Types=Storage_Systems, @PV_Operating_Year=1]
NodeLocation: 696,296,1
NodeSize: 64,40
ValueState: 2,178,3,548,533,0,MIDM
ReformVal: [Null,Month]
Att_ResultSliceState: [PV_Sectors,2,PV_Climate_Zone,1,Storage_Systems,1,Rate_Vintage,4,Month,1]

Variable Total_Cost
Title: Total Cost
Definition: Energy_Cost + On_Peak_Cost + NC_Cost
NodeLocation: 552,424,1
NodeSize: 64,40
ValueState: 2,16,227,667,668,0,MIDM
ReformVal: [Opt_or_Bill,Month]
Att__TotalsIndex: [Month]
Att_ResultSliceState: [PV_Sectors,2,Rate_Vintage,4,PV_Climate_Zone,1,Storage_Systems,1,Opt_or_Bill,1,Month,1]

Variable Bill_Total_Cost
Title: Bill Total Cost
Definition: Bill_Energy_Cost + Bill_On_Peak_Cost + Bill_NC_Cost
NodeLocation: 696,424,1
NodeSize: 64,40
ValueState: 2,253,155,548,533,0,MIDM
ReformVal: [Null,Month]
Att__TotalsIndex: [Month]
Att_ResultSliceState: [PV_Sectors,2,PV_Climate_Zone,1,Storage_Systems,1,Rate_Vintage,4,Month,1]

Close Objective_Diagnostic

Decision Use_Levelized_Inputs
Title: Use Levelized Inputs
Units: boolean
Description: Check this to use levelized rates and solar output. Uncheck it to use first-year rates and solar output. 
Definition: Checkbox(0)
NodeLocation: 760,408,1
NodeSize: 64,40
Aliases: FormNode Fo1574790843, Alias Al1584728798, FormNode Fo1584728798

FormNode Fo1574790843
Title: Use Levelized Inputs
Definition: 0
NodeLocation: 812,436,1
NodeSize: 28,12
NodeInfo: 1,0,0,0,0,0,0,,0,,0,,,
Original: Use_Levelized_Inputs

Variable Arbitrage_Opportun
Title: Arbitrage Opportunity
Units: $/kWh
Description: The value of the arbitrage opportunity between different time-of-use periods applicable to a given month and rate. This is the value (before roundtrip efficiency losses) of charging during "Periods Copy" and discharging during "Periods". Positive values indicate a benefit, while negative values indicate a cost.~
~
I don't think this is quite right now that buy/sell prices have been disaggregated. But it may not have an impact since this is only used to assess penalties to avoid simultaneous charge/discharge.
Definition: VAR valid_period_copy:=Valid_Periods[Periods=Periods_Copy];~
VAR energy_price:=Applied_Energy_Price[PV_Sectors=Opt_Sector2, PV_Climate_Zone=Opt_Climate_Zone2, Rate_Vintage=Opt_Rate_Vintage2, Month=Opt_Month2, Opt_Storage_Systems=Opt_System2];~
~
IF (Periods_Copy = Periods) OR (Valid_Periods = Null)~
THEN Null~
ELSE energy_price[Buy_or_Sell_=Sell_Price_Label] - energy_price[Periods=valid_period_copy,Buy_or_Sell_=Buy_price_label]
NodeLocation: 448,64,1
NodeSize: 64,40
WindState: 2,9,37,720,350
ValueState: 2,600,329,1073,430,0,MIDM
NodeColor: 65535,1,1
ReformVal: [Periods,Periods_Copy]
Att_ResultSliceState: [Area_Type,1,Opt_Sectors,2,Rate_Vintage,1,PV_Climate_Zone,1,Opt_Storage_Systems,2,Month,8,Seq_Opt_Number,1,Periods_Copy,2,Periods,1]

Variable Valid_Periods
Title: Valid Periods
Description: Periods that are applicable to each rate and month. Null indicates not applicable.
Definition: VAR periodByHour:=Periods_for_Prof_Opt[Data_Types=Energy_Rate_Label, PV_Sectors=Opt_Sector2, PV_Climate_Zone=Opt_Climate_Zone2, Rate_Vintage=Opt_Rate_Vintage2, Month=Opt_Month2, Opt_Storage_Systems=Opt_System2, Seq_Opt_Number=Opt_Seq_Number];~
~
IF PositionInIndex(periodByHour, Periods, Opt_Hours)~
THEN Periods~
ELSE Null
NodeLocation: 296,64,1
NodeSize: 64,40
ValueState: 2,500,202,1066,461,0,MIDM
ReformVal: [Periods,Month]
Att_ResultSliceState: [Opt_Sectors,2,Rate_Vintage,1,PV_Climate_Zone,1,Opt_Storage_Systems,2,Seq_Opt_Number,1,Month,1,Periods,1]

Variable ArbitrageForPenalty
Title: Arbitrage Value for Penalties
Units: $/kWh
Description: The minimum non-zero arbitrage opportunity of charging during one period and discharging during another after accounting for storage roundtrip efficiency losses. We don't want any optimization penalties to be larger than this value or else the optimal dispatch might be distorted.
Definition: IF Min_Arbitrage_Oppor1 > 0~
THEN Min_Arbitrage_Oppor1~
ELSE MIN(Applied_Energy_Price[Buy_or_Sell_=Sell_Price_Label, Periods=Periods_for_Prof_Opt[Data_Types=Energy_Rate_Label], PV_Sectors=Opt_Sector2, PV_Climate_Zone=Opt_Climate_Zone2, Rate_Vintage=Opt_Rate_Vintage2, Month=Opt_Month2, Opt_Storage_Systems=Opt_System2], Opt_Hours)
NodeLocation: 760,64,1
NodeSize: 64,40
WindState: 2,12,34,1196,450
ValueState: 2,281,276,1132,338,0,MIDM
NodeColor: 65535,1,1
NumberFormat: 2,F,2,3,0,0,2,0,$,0,"ABBREV",0,,,0,0,15
Att_ResultSliceState: [PV_Climate_Zone,1,Opt_Storage_Systems,2,Seq_Opt_Number,1,Rate_Vintage,1,Area_Type,1,Opt_Sectors,1,Month,1]

Variable Min_Arbitrage_Oppor1
Title: Minimum Arbitrage Opportunity
Units: $/kWh
Description: The minimum non-zero arbitrage opportunity of charging during one period and discharging during another after accounting for storage roundtrip efficiency losses. We don't want any optimization penalties to be larger than this value or else the optimal dispatch might be distorted.
Definition: VAR minArbitrage:=Replace_X_with_Y(MIN(ABS(Arbitrage_Opportun), Periods_Copy, Periods), Null, 0);~
~
minArbitrage * Charge_disch_eff[PV_Sectors=Opt_Sector2]
NodeLocation: 600,64,1
NodeSize: 64,40
WindState: 2,12,34,1196,450
ValueState: 2,334,354,1087,364,0,MIDM
NumberFormat: 2,F,2,3,0,0,2,0,$,0,"ABBREV",0,,,0,0,15
Att_ResultSliceState: [PV_Climate_Zone,1,Opt_Storage_Systems,2,Seq_Opt_Number,1,Rate_Vintage,1,Area_Type,1,Opt_Sectors,2,Month,1]

Variable Applied_Energy_Price
Title: Applied Energy Price
Units: $/kWh
Description: The energy price applied to the optimization, which is either levelized or non-levelized.
Definition: IF Use_Levelized_Inputs~
THEN Lev_Energy_Price_Prd~
ELSE Wtd_Energy_Buy_Price[@PV_Operating_Year=1]
NodeLocation: 568,160,1
NodeSize: 64,40
WindState: 2,21,199,720,350
ValueState: 2,2210,485,1394,364,0,MIDM
ReformVal: [Month,Periods]
Att_ResultSliceState: [Rate_Vintage,1,PV_Climate_Zone,1,Opt_Storage_Systems,2,Buy_or_Sell_,1,Area_Type,1,PV_Sectors,2,Periods,1,Month,3]

Decision Map_Tier_WeightsPric
Title: Map Tier Weights to Pre/Post for Prices
Description: Maps storage systems to a the appropriate pre or post condition for a similar non-storage system in order to estimate the weights by tier that determine average retail energy/demand rates.
Definition: Table(All_Storage_Systems)(Choice(Pre_and_Post_System,2,0),Choice(Pre_and_Post_System,2,0),Choice(Pre_and_Post_System,2,0),Choice(Pre_and_Post_System,2,0),Choice(Pre_and_Post_System,1,0))
NodeLocation: 1112,512,1
NodeSize: 96,48
WindState: 2,326,439,720,499
DefnState: 2,1168,342,472,249,0,DFNM
Aliases: FormNode Fo649935635
NodeColor: 65535,65531,1
ReformDef: [0,Opt_Storage_Systems]
TableCellDefault: Choice(Pre_and_Post_System, 1, 0)

FormNode Fo649935635
Title: Map Tier Weights to Pre/Post for Prices
Definition: 0
NodeLocation: 1108,568,1
NodeSize: 60,16
NodeInfo: 1,,,0
NodeColor: 65535,65531,1
Original: Map_Tier_WeightsPric

FormNode Fo620575507
Title: Pre/Post Load by OpYr
Definition: 1
NodeLocation: 320,728,1
NodeSize: 200,16
NodeColor: 19661,48336,65535
Original: Pre_Post_Load
NodeFontColor: 0,0,0

Constant test_include_demand
Title: test include demand
Definition: Checkbox(1)
NodeLocation: 1152,64,1
NodeSize: 64,40
Aliases: FormNode Fo973290259
NodeFontColor: 65535,1,1

FormNode Fo973290259
Title: test include demand
Definition: 0
NodeLocation: 1104,432,1
NodeSize: 96,16
Original: test_include_demand
NodeFontColor: 65535,1,1

Close Storage_Optimizati10

Module Storage_Optimizati11
Title: Storage Optimization Definition
Author: JamesMilford
Date: Mon, Dec 31, 2018 11:53 AM
NodeLocation: 112,64,1
NodeSize: 64,40
NodeInfo: 1,0,0,1,1,1,0,,0,,0,,,
DiagState: 2,16,18,1769,728,17,10
NodeColor: 65535,65535,65535

Decision Opt_Seq_Number
Title: Opt Sequential Number
Description: The sequential optimization number currently being optimized.  This will be automatically changed by the optimization scripts as it loops through each of the storage optimization scenarios. When running an optimization, only a single element should be selected.
Definition: Choice(Seq_Opt_Number,0,1)
NodeLocation: 768,640,1
NodeSize: 64,40
WindState: 2,59,318,720,350
Aliases: FormNode Fo1552491016, FormNode Fo1571352059
DisplayOutputs: Object Object, Object Variable, Variable Num_Full_Discharges1

FormNode Fo1552491016
Title: Active Opt Number
Definition: 0
NodeLocation: 776,692,1
NodeSize: 56,12
NodeInfo: 1,0,0,0,0,0,0,,0,,0,,,
Original: Opt_Seq_Number

Decision Battery_Export_Allo2
Title: Battery Export Allowed
Description: Check this setting if the battery system is allowed to export to the grid. If unchecked, the battery system will only be able to reduce load.
Definition: Checkbox(1)
NodeLocation: 256,392,1
NodeSize: 64,40
WindState: 2,403,-10,720,350
Aliases: FormNode Fo1552348253, Alias Al1552348254, FormNode Fo1552348275

Decision Opt_Sector2
Title: Opt Sector
Description: The sector for the current storage optimization. This will be automatically changed by the optimization scripts as it loops through each of the storage optimization scenarios. When running an optimization, only a single element should be selected.~
~
Choice(Opt_Sectors,1,0)
Definition: Choice(Opt_Sectors,0,1)
NodeLocation: 464,640,1
NodeSize: 64,40
WindState: 2,149,1,720,350
Aliases: FormNode Fo1206201853, FormNode Fo1552348256, FormNode Fo895004157
DisplayOutputs: Object Object, Object Variable, Variable Num_Full_Discharges1

Decision Opt_Climate_Zone2
Title: Opt Climate Zone
Description: The climate zone for the current storage optimization. This will be automatically changed by the optimization scripts as it loops through each of the storage optimization scenarios. When running an optimization, only a single element should be selected.
Definition: Choice(PV_Climate_Zone,0,1)
NodeLocation: 464,752,1
NodeSize: 64,40
Aliases: FormNode Fo1552348257

FormNode Fo1552348256
Title: Opt Sector
Definition: 0
NodeLocation: 472,688,1
NodeSize: 72,16
NodeInfo: 1,0,0,0,0,0,0,102,0,,0,,,0
Original: Opt_Sector2

FormNode Fo1552348257
Title: Opt Climate Zone
Definition: 0
NodeLocation: 472,800,1
NodeSize: 72,16
NodeInfo: 1,0,0,0,0,0,0,102,0,,0,,,
Original: Opt_Climate_Zone2

Decision Opt_Rate_Vintage2
Title: Opt Rate Vintage
Description: The rate vintage for the current storage optimization. This will be automatically changed by the optimization scripts as it loops through each of the storage optimization scenarios. When running an optimization, only a single element should be selected.
Definition: Choice(Rate_Vintage,0,1)
NodeLocation: 616,752,1
NodeSize: 64,40
Aliases: FormNode Fo1552348258

FormNode Fo1552348258
Title: Opt Climate Zone
Definition: 0
NodeLocation: 624,800,1
NodeSize: 72,16
NodeInfo: 1,0,0,0,0,0,0,102,0,,0,,,
Original: Opt_Rate_Vintage2

Variable Storage_Opt_Def2
Title: Storage Opt Definition
Description: This is the linear program definition for the battery storage optimization. It seeks to minimize the customer energy bill by optimally dispatching the battery system.
Definition: IF Total_Optimized_Cos2 = Null~
THEN Null~
ELSE DefineOptimization(~
   Decisions: ...Storage_Decisions2,~
   Minimize: Total_Optimized_Cos2,~
   Constraints: ...Storage_Constraints2,~
   SettingName: Storage_Setting_Nam2, ~
   SettingValue: Strg_Engine_Setting2~
)
NodeLocation: 968,216,1
NodeSize: 64,40
WindState: 2,-33,94,1540,840
ValueState: 2,694,390,474,229,0,MIDM
ReformVal: [Month,Opt_Sectors]
{!40300|Att_DerefReformVal: [Undefined,Sys_LocalIndex('Item')]}
Att_ResultSliceState: [PV_Climate_Zone,1,Rate_Vintage,1,Opt_Storage_Systems,2,Area_Type,1,Seq_Opt_Number,1,Opt_Sectors,1,Month,1]

Button Save_Storage_Decis2
Title: Save Storage Decisions
Description: This button will save the optimal solutions from the storage optimization to the decision variables (not to be confused with the saved solution variables). This is largely redundant because the optimal solutions will also be saved in non-decision variables, but saving solutions to the decision variables might facilitate viewing optimization structures.
NodeLocation: 1880,192,1
NodeSize: 64,40
WindState: 2,17,52,720,350
OnClick: Set_Decisions_To_Opt(Storage_Opt_Def2)

Decision Opt_Month2
Title: Opt Month
Description: The month for the current storage optimization. This will be automatically changed by the optimization scripts as it loops through each of the storage optimization scenarios. When running an optimization, only a single element should be selected.
Definition: Choice(Month,0,1)
NodeLocation: 616,640,1
NodeSize: 64,40
Aliases: FormNode Fo1552348259

FormNode Fo1552348259
Title: Opt Climate Zone
Definition: 0
NodeLocation: 624,688,1
NodeSize: 72,16
NodeInfo: 1,0,0,0,0,0,0,102,0,,0,,,
Original: Opt_Month2

Variable Storage_Opt_Status2
Title: Storage Opt Status
Description: The status of the storage optimization.
Definition: IF Total_Optimized_Cos2 = Null~
THEN Null~
ELSE OptStatusText(Storage_Opt_Def2)
NodeLocation: 1128,104,1
NodeSize: 64,40
ValueState: 2,-1,206,1086,303,0,MIDM

Variable Infeasible_Constrai2
Title: Infeasible Constraints
Description: Infeasible constraints of the storage optimization.
Definition: OptFindIIS(Storage_Opt_Def2)
NodeLocation: 1128,192,1
NodeSize: 64,40
ValueState: 2,353,99,1246,597,0,MIDM
ReformVal: [Self,Sys_LocalIndex('ConstraintVector')]
Att_ResultSliceState: [PV_Climate_Zone,2,Area_Type,1,Sys_LocalIndex('ConstraintVector'),1,Self,1]

Button Clear_Storage_Decis2
Title: Clear Storage Decisions
Description: This buttons clears out all of the decision variables from the storage optimization.
NodeLocation: 1472,192,1
NodeSize: 64,40
WindState: 2,507,467,720,445
Aliases: Alias New1552348265
OnClick: FOR J:=@All_Strg_Decisions2 DO (~
   LocalAlias vars:=Slice(All_Strg_Decisions2, J);~
   (vars:=0)~
);

Index All_Strg_Decisions2
Att_PrevIndexValue: [Stored_Grid_Elect1,Discharge_ReduceLoa1,Total_Discharge4,PV_to_Reduce_Load2,Stored_PV_Elect1,On_Peak_Dmd2,Non_Coinc_Demand2,Pos_Charge_Delta1,Neg_Charge_Delta1,Ending_Charge_Level,Charging_Start1,Initial_Charge_Leve2,Allow_Charging2]
Title: All Storage Decisions
Definition: [Stored_Grid_Elect1,Discharge_ReduceLoa1,Total_Discharge4,PV_to_Reduce_Load2,Stored_PV_Elect1,On_Peak_Dmd2,Non_Coinc_Demand2,Pos_Charge_Delta1,Neg_Charge_Delta1,Ending_Charge_Level,Charging_Start1,Initial_Charge_Leve2,Allow_Charging2]
NodeLocation: 256,656,1
NodeSize: 64,40
WindState: 2,15,344,1214,522
Aliases: Alias New1552348283
MetaOnly: 1

Index All_Strg_Constraint2
Att_PrevIndexValue: [Storage_Charge_Rate1,Storage_DishargeRat1,Storage_Energy_Cap2,SOC_Limit_on_Dischr1,Constr_BatteryExpor2,DischLoadRed_LTE_Tot,DischLoadRed_LTELoad,Pos_GridElecMeetLoad,PV_LoadRed_LTE_Solar,PV_LoadRed_LTE_Load,Min_Stored_PV2,Pos_Exported_PV,Load_Balance2,PV_Balance2,Max_Non_Coinc_Deman2,Max_On_Peak_Demand2,Force_Positive_Delt1,Force_Negative_Delt1,Value_of_End_Charge,Find_Charge_Start1,Same_Starting_Charg1,Int_Strg_Charge_Rate,Int_Strg_Dischg_Rate,Continuous_Charge1]
Title: All Storage Constraints
Definition: [Storage_Charge_Rate1,Storage_DishargeRat1,Storage_Energy_Cap2,SOC_Limit_on_Dischr1,Constr_BatteryExpor2,DischLoadRed_LTE_Tot,DischLoadRed_LTELoad,Pos_GridElecMeetLoad,PV_LoadRed_LTE_Solar,PV_LoadRed_LTE_Load,Min_Stored_PV2,Pos_Exported_PV,Load_Balance2,PV_Balance2,Max_Non_Coinc_Deman2,Max_On_Peak_Demand2,Force_Positive_Delt1,Force_Negative_Delt1,Value_of_End_Charge,Find_Charge_Start1,Same_Starting_Charg1,Int_Strg_Charge_Rate,Int_Strg_Dischg_Rate,Continuous_Charge1]
NodeLocation: 256,744,1
NodeSize: 64,40
WindState: 2,17,11,1087,805
Aliases: Alias Al1552348253
MetaOnly: 1

Index Storage_Decisions2
Title: Storage Decisions
Description: The decision variables included in the storage optimization.
Definition: MultiChoice(All_Strg_Decisions2,1,2,3,4,5,6,7,8,9,allowNone:0,returnList:1)
NodeLocation: 256,96,1
NodeSize: 64,40
WindState: 2,102,82,1161,814
ValueState: 2,8,234,416,394,0,MIDM
Aliases: FormNode Fo1552348260
NodeColor: 65535,65531,1
MetaOnly: 1
{!40300|Att_SlicerPopupSize: 295,322}

FormNode Fo1552348260
Title: Storage Decisions
Definition: 0
NodeLocation: 264,136,1
NodeSize: 72,16
NodeInfo: 1,0,0,0,0,0,0,110,0,,0,,,0
Original: Storage_Decisions2

Index Storage_Constraints2
Title: Storage Constraints
Description: The constraints included in the storage optimization.
Definition: MultiChoice(All_Strg_Constraint2,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,21,allowNone:0,returnList:1)
NodeLocation: 256,200,1
NodeSize: 64,40
WindState: 2,102,82,1029,742
ValueState: 2,2908,239,384,493,0,MIDM
Aliases: FormNode Fo1552348261
MetaOnly: 1

FormNode Fo1552348261
Title: Storage Decisions
Definition: 0
NodeLocation: 264,240,1
NodeSize: 72,16
NodeInfo: 1,0,0,0,0,0,0,110,0,,0,,,0
Original: Storage_Constraints2

Variable Storage_Solutions2
Title: Storage Solutions
Description: The optimal solution to the storage optimization.
Definition: VAR optDef:=IF Total_Optimized_Cos2 = Null~
   THEN Null~
   ELSE Storage_Opt_Def2;~
~
OptSolution(optDef)
NodeLocation: 1128,288,1
NodeSize: 64,40
ValueState: 2,102,60,1788,691,1,MIDM
GraphSetup: Att_GraphIndexRange .DecisionVector:1,,1~
Att_GraphValueRange Storage_Solutions2:1,,1,,,,,8.148003280162811,8.79953008890152,0
ReformVal: [Sys_LocalIndex('DecisionVector'),Area_Type]
Att_ResultSliceState: [Area_Type,1,PV_Climate_Zone,1,Opt_Sectors,2,Rate_Vintage,1,Opt_Storage_Systems,2,Month,1,Seq_Opt_Number,1]

Decision Strg_Engine_Setting2
Title: Storage Engine Settings
Description: The storage optimization engine settings.
Definition: Table(Storage_Setting_Nam2)(0.005,120)
NodeLocation: 968,312,1
NodeSize: 64,40
DefnState: 2,398,31,416,303,0,DFNM
Aliases: FormNode Fo1552348262
NumberFormat: 2,F,2,3,0,0,2,0,$,0,"ABBREV",0,,,0,0,15

Index Storage_Setting_Nam2
Att_PrevIndexValue: ['IntTolerance','MaxTime']
Title: Storage Setting Name
Definition: ['IntTolerance','MaxTime']
IndexVals: ['item 1']
NodeLocation: 968,424,1
NodeSize: 64,40

FormNode Fo1552348262
Title: Storage Engine Settings
Definition: 0
NodeLocation: 976,364,1
NodeSize: 56,12
NodeInfo: 1,0,0,0,0,0,0,,0,,0,,,
Original: Strg_Engine_Setting2

Variable Storage_Objective2
Title: Storage Objective
Units: $
Description: The optimal objective function to the storage optimization.
Definition: IF Total_Optimized_Cos2 = Null~
THEN Null~
ELSE OptObjective(Storage_Opt_Def2)
NodeLocation: 1128,384,1
NodeSize: 64,40
ValueState: 2,646,279,975,466,0,MIDM
Att_ResultSliceState: [Rate_Vintage,1,PV_Climate_Zone,1,Opt_Storage_Systems,2,Area_Type,1,Seq_Opt_Number,1,Opt_Sectors,1,Month,1]

Decision Opt_System2
Title: Opt System
Description: The storage system for the current storage optimization. This will be automatically changed by the optimization scripts as it loops through each of the storage optimization scenarios. When running an optimization, only a single element should be selected.
Definition: Choice(Opt_Storage_Systems,0,1)
NodeLocation: 464,864,1
NodeSize: 64,40
WindState: 2,137,369,720,350
Aliases: FormNode Fo1552348263
DisplayOutputs: Object Object, Object Variable, Variable Num_Full_Discharges1

FormNode Fo1552348263
Title: Opt Climate Zone
Definition: 0
NodeLocation: 472,912,1
NodeSize: 72,16
NodeInfo: 1,0,0,0,0,0,0,102,0,,0,,,
Original: Opt_System2

Button Clear_SavedStrgDeci2
Title: Clear Saved Storage Decisions
Description: Clears out all of the saved solutions for the decision variables.
NodeLocation: 1472,96,1
NodeSize: 64,40
WindState: 2,473,12,720,350
Aliases: Alias New1552348277
OnClick: FOR J:=@All_Strg_Decisions2 DO (~
   MetaVar varHandle:=Slice(All_Strg_Decisions2, J);~
   LocalAlias saveVar:=Saved_Vars_for_Strg2[All_Strg_Decisions2=varHandle];~
   saveVar:=Null;~
);

Decision Select_Strg_CZ2
Title: Selected Storage Climate Zones
Description: Select the climate zones that will be evaluated in the storage optimization routines.
Definition: MultiChoice(PV_Climate_Zone,allowNone:0,returnList:1)
NodeLocation: 768,168,1
NodeSize: 64,40
Aliases: FormNode Fo1552348265

FormNode Fo1552348265
Title: Opt Climate Zone
Definition: 0
NodeLocation: 776,216,1
NodeSize: 72,16
NodeInfo: 1,0,0,0,0,0,0,102,0,,0,,,
Original: Select_Strg_CZ2

Decision Select_Strg_Rate2
Title: Selected Storage Rate Vintages
Description: Select the rate vintages that will be evaluated in the storage optimization routines.
Definition: Table(Opt_Sectors,Rate_Vintage)(~
Checkbox(1),Checkbox(1),~
Checkbox(1),Checkbox(1),~
Checkbox(1),Checkbox(1))
NodeLocation: 616,280,1
NodeSize: 64,40
DefnState: 2,915,261,440,249,0,DFNM
Aliases: FormNode Fo1552348266
ReformDef: [Rate_Vintage,Opt_Sectors]
TableCellDefault: Checkbox(1)

FormNode Fo1552348266
Title: Opt Climate Zone
Definition: 0
NodeLocation: 624,328,1
NodeSize: 72,16
NodeInfo: 1,0,0,0,0,0,0,102,0,,0,,,
Original: Select_Strg_Rate2

Decision Select_Strg_Month2
Title: Selected Storage Months
Description: Select the months that will be evaluated in the storage optimization routines.
Definition: MultiChoice(Month,allowNone:0,returnList:1)
NodeLocation: 616,168,1
NodeSize: 64,40
Aliases: FormNode Fo1552348267

FormNode Fo1552348267
Title: Opt Climate Zone
Definition: 0
NodeLocation: 624,216,1
NodeSize: 72,16
NodeInfo: 1,0,0,0,0,0,0,102,0,,0,,,
Original: Select_Strg_Month2

Decision Select_Strg_System2
Title: Selected Storage Systems
Description: Select the storage systems that will be evaluated in the storage optimization routines. Note that only the storage system subset selected in Select_System_Types will actually be evaluated.
Definition: Table(Opt_Storage_Systems,Opt_Sectors)(~
Checkbox(1),Checkbox(1),Checkbox(1),~
Checkbox(1),Checkbox(1),Checkbox(1))
NodeLocation: 464,280,1
NodeSize: 64,40
WindState: 2,30,73,720,350
DefnState: 2,875,308,677,219,0,DFNM
ValueState: 2,612,618,416,303,0,MIDM
Aliases: FormNode Fo1552348268
ReformDef: [Opt_Storage_Systems,Opt_Sectors]
TableCellDefault: Checkbox(0)

FormNode Fo1552348268
Title: Opt Climate Zone
Definition: 0
NodeLocation: 472,328,1
NodeSize: 72,16
NodeInfo: 1,0,0,0,0,0,0,102,0,,0,,,
Original: Select_Strg_System2

Decision Decouple_Rates2
Title: Decouple Rates from Storage Opt
Units: boolean
Description: When checked, this will decouple rates from the net load found from the storage optimization. This ensures that rates aren't invalidated whenever a new storage optimization solution is saved, which allows the storage optimization to run faster.
Definition: Checkbox(0)
NodeLocation: 1128,480,1
NodeSize: 64,40
WindState: 2,128,555,720,350
Aliases: FormNode Fo1558068715
OnChange: Decouple_Rates3

Index Storage_Opt_Filters2
Att_PrevIndexValue: [Opt_Seq_Number,Opt_Sector2,Opt_System2,Opt_Climate_Zone2,Opt_Rate_Vintage2,Opt_Month2]
Title: Storage Opt Filters
Definition: [Opt_Seq_Number,Opt_Sector2,Opt_System2,Opt_Climate_Zone2,Opt_Rate_Vintage2,Opt_Month2]
NodeLocation: 768,752,1
NodeSize: 64,40
ValueState: 2,1450,87,416,303,0,MIDM
MetaOnly: 1

Decision Filter_Separator2
Title: Filter Separator
Description: A text separator used to join the filter slices of the optimization scenarios.
Definition: '--'
NodeLocation: 616,864,1
NodeSize: 64,40
Aliases: FormNode Fo1552348270

Index Storage_Opt_Scenari2
Title: Storage Opt Scenarios
Definition: INDEX all_scen:=[];~
FOR J:=Select_Strg_Sector2 DO (~
   INDEX rates:=Subset(Select_Strg_Rate2[Opt_Sectors=J]);   {Find the rate vintages associated with the sector}~
   INDEX syst:=Subset(Select_Strg_System2[Opt_Sectors=J]);   {Find the systems associated with the sector}~
   VAR scenTable:=Array(Storage_Opt_Filters2, [Selected_Seq_Opt, J, syst, Select_Strg_CZ2, rates, Select_Strg_Month2]);~
   VAR scen:=JoinText(scenTable, Storage_Opt_Filters2, Filter_Separator2);~
   INDEX columns:=ListOfHandles(Selected_Seq_Opt, syst, Select_Strg_CZ2, rates, Select_Strg_Month2);   {The ordering of this index aligns with Strorage_Opt_Filters and ensures that sequential optimizations then months change the most frequently}~
   columns:=Concat(columns, 'Value');   {Concats 'value' onto the fact columns to facilitate the MDArrayToTable conversion}~
   VAR flatScen:=MdArrayToTable(scen, Col: columns, omitNull: True);~
   INDEX sectScen:=CopyIndex(flatScen[columns='Value']);~
   all_scen:=Concat(all_scen, sectScen)~
);~
CopyIndex(all_scen)~
~

NodeLocation: 464,496,1
NodeSize: 64,40
WindState: 2,433,367,1073,509
ValueState: 2,215,38,940,764,0,MIDM
NumberFormat: 2,F,2,4,0,0,2,0,$,0,"ABBREV",0,,,0,0,15
{!40300|Att_SlicerPopupSize: 653,517}

Function Set_Storage_Filters2(scenText; filterHandles: Index)
Title: Set Storage Filters
Description: Sets the storage filters associated with the current storage optimization being performed.~
~
[scenText]: an atomic text string describing the scenario~
[filterHandles]: an list of handles to each of the optimization filters
Definition: VAR filterVals:=SplitText(scenText, Filter_Separator2, resultIndex: filterHandles);~
~
FOR J:=@filterHandles DO (~
   LocalAlias filterVar:=Slice(filterHandles, J);~
   VAR vals:=filterVals[@filterHandles=J];~
   VAR parseVal:=ParseNumber(vals);~
   VAR finalVal:=IF IsNumber(parseVal)~
      THEN parseVal~
      ELSE vals;~
~
   filterVar:=finalVal~
);
NodeLocation: 1728,480,1
NodeSize: 64,40
WindState: 2,29,143,720,503

FormNode Fo1552348270
Title: Filter Separator
Definition: 0
NodeLocation: 624,916,1
NodeSize: 56,12
NodeInfo: 1,0,0,0,0,0,0,78,0,,0,,,0
Original: Filter_Separator2

Function Run_Storage_Dispatc2()
Title: Run Storage Dispatch Opt
Description: NOTE: Change set filters to all back~
~
This loops through the selected storage scenarios, performs storage dispatch optimization, and stores the optimized solutions in the decision variables or saved variables.
Definition: Strg_Opt_Start_Time2:=Today(withTime: True);   {Set the start time of the entire loop of optimizations}~
Decouple_Rates2:= 1;   {Decouple the saved storage decisions from the rates module to prevent non-linearity. Only the rates relevant to non-storage systems are required}~
Use_Storage_Decisio2:= 1;   {Connect logic to decision variables rather than stored decisions}~
~
VAR cnt:=0;   {Initialize the scenario counter}~
VAR numScen:=Size(Storage_Opt_Scenari2);~
VAR maxCnt:=numScen*Number_of_bess_opt_s;   {Find total number of scenarios}~
~
FOR J:=Storage_Opt_Scenari2 DO (   {For each storage optimization scenario representing a single atomic LP}~
   cnt:=cnt+1;~
   VAR currentOptNum:=Seq_Opt_Num_by_Scen[Storage_Opt_Scenari2=J];   {Update the current sequential opt number}~
   VAR nextOptNum:=Next_Seq_Opt_Number[Storage_Opt_Scenari2=J];   {Update the next sequential opt number}~
   ShowProgressBar("Storage Dispatch Optimization Progress", "Optimizing storage dispatch for scenario: '" & J & ". Scenario " & (cnt + (Current_BESS_Sector-1) * numScen) & " of " & maxCnt & "." & " Sector " & Current_BESS_Sector & " of " & Number_of_bess_opt_s, ((Current_BESS_Sector-1) * numScen + (cnt - 0.1))/maxCnt);~
   Set_Storage_Filters2(J, Storage_Opt_Filters2);   {Set the optimization filters to the current scenario}~
   Save_Opt_Timestamp1(1);   {Set the start time of the current optimization}~
   Save_Status_and_Obj2();   {Saves the status and objective of the current optimization scenario}~
   Save_Opt_Timestamp1(2);   {Set the end time of the current optimization}~
   IF Store_Soln_in_Decis2 THEN Save_Storage_Decis2 ELSE Null;   {Save the solutions in the decision variables, if desired}~
   Push_to_Linked_List();   {Push the solutions to each of decision variables to the linked list}~
   {Save_Storage_Solns2();}   {Save each of the optimization solutions to the saved variables}~
   IF nextOptNum <> currentOptNum THEN Save_Linked_Solns(currentOptNum) ELSE Null;   {If the last scenario for a given sequential opt number, then save the solutions in the linked list to the saved decisions}~
   Save_Opt_Timestamp1(3);   {Set the end time of the current save operation}~
);~
~
Decouple_Rates2:=0;   {Re-link the saved storage decisions to the rates module}~
Use_Storage_Decisio2:=0;   {Connect logic to stored decisions}~
Set_Filters_to_All2;  {Set the optimization filters to "All"}~
Storage_Opt_End_Tim2:= Today(withTime: True);   {Set the end time of the entire loop of optimizations}~
~
/*MsgBox("Storage dispatch optimization complete.", 0, "Storage Dispatch Optimization");~
   ~
~

NodeLocation: 1472,384,1
NodeSize: 64,40
WindState: 2,137,121,1589,724

Function Save_Storage_Solns2()
Title: Save Storage Solutions (old)
Description: This saves the solutions to the current storage optimization in the saved variables (not to be confused with the decision variables, to which this function does not save the solutions). This flattens the solutions before saving them in hopes of miniziming sparseness and the resulting file size. 
Definition: FOR J:=@Storage_Decisions2 DO (~
   MetaVar varHandle:=Slice(Storage_Decisions2, J);   {The handle to the current decision variable being saved}~
   LocalAlias decisVar:=varHandle;   {A local alias to the decision variable being saved}~
   LocalAlias saveVar:=Saved_Vars_for_Strg2[All_Strg_Decisions2=varHandle];   {A local alias to the variable where the decision results will be saved}~
   VAR savedVarCopy:=saveVar;   {A copy of the values of the variable where the decisions will be saved}~
   IF varHandle = Null   {If the storage variable is not specified}~
   THEN Null   {Then do nothing}~
   ELSE (~
      VAR solution:=IF Total_Optimized_Cos2 = Null   {If the objective is null because a specific sequential optimization is not applicable}~
         THEN Null   {Then return null}~
         ELSE OptSolution(Storage_Opt_Def2, decisVar);   {Else find the solution to the optimization}~
      savedVarCopy[Opt_Sectors=Opt_Sector2, Opt_Storage_Systems=Opt_System2, PV_Climate_Zone=Opt_Climate_Zone2, Rate_Vintage=Opt_Rate_Vintage2, Month=Opt_Month2, Seq_Opt_Number=Opt_Seq_Number] := solution;  {For elements of the indices of the saved variable that match the subscripts of the current atomic optimization}~
      saveVar:= savedVarCopy;   {Save the new results to the saved variable. Had to wrap this in IgnoreWarnings because it was giving a weird warning about differences in dimensionality between saveVar and reindex}     ~
      Null;   {Return a null to prevent excessive indexing}~
   )~
)~

NodeLocation: 1728,664,1
NodeSize: 64,40
WindState: 2,258,140,1567,879

Function Conditional_Reindex2(var; origInd, newInd: Index)
Title: Conditional Reindex
Description: Conditionally reindexes [var] from the [origInd] to the [newInd] as long as [var] is in fact indexed by [origInd].~
~
[var] data presumably indexed by origInd, which we wish to reindex to newInd~
[origInd] an index that might be used in var, but not might not~
[newInd] the index by which var will be reindexed if it was originally indexed by origInd
Definition: INDEX all_indices:=IndexesOf(var);~
~
IF PositionInIndex(all_indices, Handle(origInd), all_indices)~
THEN var[origInd=newInd]~
ELSE var~

NodeLocation: 1472,480,1
NodeSize: 64,40
WindState: 2,54,25,720,350

Alias Al1552348255
Title: Use Storage Decision Var
Definition: 1
NodeLocation: 1128,568,1
NodeSize: 64,40
Original: Use_Storage_Decisio2

FormNode Fo1552348271
Title: Use Storage Decision Var
Definition: 0
NodeLocation: 1188,596,1
NodeSize: 28,12
NodeInfo: 1,0,0,0,0,0,0,,0,,0,,,
Original: Use_Storage_Decisio2

Decision Store_Soln_in_Decis2
Title: Store Solution in Decision Vars
Units: boolean
Description: When checked, this will store the optimal solution in the decision variables. This is largely redundant because the optimal solutions will also be saved in non-decision variables, but saving solutions to the decision variables might facilitate viewing optimization structures.
Definition: Checkbox(0)
NodeLocation: 256,304,1
NodeSize: 64,40
Aliases: FormNode Fo1552348272

FormNode Fo1552348272
Title: Use Storage Decision Var
Definition: 0
NodeLocation: 308,332,1
NodeSize: 28,12
NodeInfo: 1,0,0,0,0,0,0,,0,,0,,,
Original: Store_Soln_in_Decis2

Function Save_Status_and_Obj2()
Title: Save Status and Objective
Description: This saves the status and objective of the current storage optimization.
Definition: VAR savedStatusCopy:=Saved_Strg_OptStatu2;   {Make a copy of the values of the saved status}~
VAR savedObjCopy:=Saved_Strg_Objectiv2;   {Make a copy of the values of the saved status}~
savedStatusCopy[Opt_Sectors=Opt_Sector2, Opt_Storage_Systems=Opt_System2, PV_Climate_Zone=Opt_Climate_Zone2, Rate_Vintage=Opt_Rate_Vintage2, Month=Opt_Month2, Seq_Opt_Number=Opt_Seq_Number, All_Utilities=Selected_Utility] := Storage_Opt_Status2;   {Update the new status}   ~
savedObjCopy[Opt_Sectors=Opt_Sector2, Opt_Storage_Systems=Opt_System2, PV_Climate_Zone=Opt_Climate_Zone2, Rate_Vintage=Opt_Rate_Vintage2, Month=Opt_Month2, Seq_Opt_Number=Opt_Seq_Number, All_Utilities=Selected_Utility] := Storage_Objective2;   {Update the new status}   ~
~
Saved_Strg_OptStatu2:= savedStatusCopy;   {Store the status results}~
Saved_Strg_Objectiv2:= savedObjCopy;   {Store the objective results}
NodeLocation: 1856,384,1
NodeSize: 64,40
WindState: 2,19,199,1311,548
NodeColor: 65535,52427,52427

Button Clear_Strg_StatusOb2
Title: Clear Storage Status and Objective
Description: Clears out the saved storage optimization status, objectives, and start/end times.
NodeLocation: 1608,96,1
NodeSize: 64,40
OnClick: (Saved_Strg_OptStatu2:='Not yet optimized');~
(Saved_Strg_Objectiv2:='Not yet optimized');~
(Saved_Opt_Date1:='Not yet optimized');

Function Set_Filters_All_Opt2()
Title: Set Filters to All Option
Description: This sets the storage optimization filters to "All", so that full dimensionality can be viewed.
Definition: FOR J:=@Storage_Opt_Filters2 DO (~
   LocalAlias filter:=Slice(Storage_Opt_Filters2, J);   {Create a local alias to the Jth filter}~
   VAR ident:=Identifier of Indices_for_Filters2[@Storage_Opt_Filters2=J];   {Find the identifier of the index corresponding to the Jth filter}~
   VAR expr:="Choice(" & ident & ",0,1)";   {Create the text expression to use as the filter's definition}~
~
   IF Set_Filters_to_All3[@Storage_Opt_Filters2=J]   {If the user chose to set the filter to "All"}~
   THEN Definition of filter:= expr   {Then set the definition of the Jth filter to an expression that selects all elements}~
   ELSE Null   {Else don't change the filter}~
)
NodeLocation: 1600,480,1
NodeSize: 64,40
WindState: 2,351,492,1056,429

Button Set_Filters_to_All2
Title: Set Filters to All
Description: This sets the storage optimization filters to "All", so that full dimensionality can be viewed. When running an optimization, the filters should be set to a single selection, rather than "All".
NodeLocation: 1744,96,1
NodeSize: 64,40
OnClick: Set_Filters_All_Opt2()

Decision Indices_for_Filters2
Title: Indices for Filters
Definition: Table(Storage_Opt_Filters2)(Handle(Seq_Opt_Number),Handle(Opt_Sectors),Handle(Opt_Storage_Systems),Handle(PV_Climate_Zone),Handle(Rate_Vintage),Handle(Month))
NodeLocation: 768,864,1
NodeSize: 64,40
DefnState: 2,8,166,484,336,,DFNM

Text Te1552348259
Title: Optimization Filters - Automatically changed w/Scripts
NodeLocation: 616,752,-1
NodeSize: 240,192
NodeInfo: 1,0,0,1,1,1,0,,0,,0,,,
NodeColor: 65535,65535,65535

Text Te1552348260
Title: Optimization Scenarios - Manually Change if Desired
NodeLocation: 624,284,-1
NodeSize: 248,268
NodeInfo: 1,0,0,1,1,1,0,,0,,0,,,
NodeColor: 65535,65535,65535

FormNode Fo1552348273
Title: Saved Storage Opt Status
Definition: 0
NodeLocation: 1288,140,2
NodeSize: 56,12
NodeInfo: 1,0,0,0,0,0,0,,0,,0,,,
Original: Saved_Strg_OptStatu2

FormNode Fo1552348274
Title: Saved Storage Opt Objective
Definition: 0
NodeLocation: 1288,548,3
NodeSize: 56,12
NodeInfo: 1,0,0,0,0,0,0,,0,,0,,,
Original: Saved_Strg_Objectiv2

Text Te1552348261
Title: Optimization Structure
NodeLocation: 180,408,-1
NodeSize: 172,392
NodeInfo: 1,0,0,1,1,1,0,,0,,0,,,
NodeColor: 65535,65535,65535

Text Te1552348262
Title: Optimization Definition. ALL PV_SECTORS NEED TO BE SELECTED (AUTOMATE THIS EVENTUALLY)
NodeLocation: 1120,480,-1
NodeSize: 240,464
NodeInfo: 1,0,0,1,1,1,0,,0,,0,,,
NodeColor: 65535,65535,65535

Text Te1552348263
Title: Auxiliary Logic
NodeLocation: 1672,420,-1
NodeSize: 288,404
NodeInfo: 1,0,0,1,1,1,0,,0,,0,,,
NodeColor: 65535,65535,65535

Variable Strg_Opt_Start_Time2
Title: Storage Opt Start Time
Description: The timestamp for when the storage optimization began.
Definition: 18-Aug-2023 11:35:01.106000
NodeLocation: 1464,760,1
NodeSize: 64,40
NumberFormat: 3,F,4,2,0,0,4,0,$,0,"d-MMM-yyyy h:mm:ss tt",0,"DATETIME",,0,0,15

Variable Storage_Opt_End_Tim2
Title: Storage Opt End Time
Description: The timestamp for when the storage optimization ended.
Definition: 18-Aug-2023 11:38:50.511000
NodeLocation: 1608,760,1
NodeSize: 64,40
WindState: 2,362,172,796,472
NumberFormat: 3,F,2,2,0,0,2,0,$,0,"d-MMM-yyyy h:mm:ss tt",0,"DATETIME",,0,0,15

Variable Stg_Opt_Elapse_Time2
Title: Storage Opt Elapsed Time
Description: The time it took the storage optimization to run through the selected scenarios.
Definition: [Strg_Opt_Start_Time2,Storage_Opt_End_Tim2]
NodeLocation: 1752,760,1
NodeSize: 64,40
ValueState: 2,1061,369,416,303,0,MIDM
NumberFormat: 3,D,4,2,0,0,4,0,$,0,"d-MMM-yyyy h:mm:ss tt",0,"DATETIME",,0,0,15

FormNode Fo1552348275
Title: Battery Export Allowed
Definition: 0
NodeLocation: 308,420,1
NodeSize: 28,12
NodeInfo: 1,0,0,0,0,0,0,,0,,0,,,
Original: Battery_Export_Allo2

Alias Al1552348256
Title: Charge Variability Penalty
Definition: 1
NodeLocation: 968,512,1
NodeSize: 64,40
Original: ChargeVariab_Penalty

FormNode Fo1552348276
Title: Variability Penalty
Definition: 0
NodeLocation: 976,564,1
NodeSize: 56,12
NodeInfo: 1,0,0,0,0,0,0,70,0,,0,,,0
Original: ChargeVariab_Penalty

FormNode Fo1552348277
Title: Saved Storage Opt Status
Definition: 0
NodeLocation: 1288,348,4
NodeSize: 56,12
NodeInfo: 1,0,0,0,0,0,0,,0,,0,,,
Original: Saved_Opt_Date1

Function Save_Opt_Timestamp1(step)
Title: Save Opt Timestamp
Description: This saves the start or end time of the current storage optimization.~
~
[step]: indicates which timestamp will be saved (1 = opt start; 2 = opt end; 3 = save end) 
Definition: VAR stampCopy:=Saved_Opt_Date1;   {Make a copy of the values of the saved timestamps}~
stampCopy[Opt_Sectors=Opt_Sector2, Opt_Storage_Systems=Opt_System2, PV_Climate_Zone=Opt_Climate_Zone2, Rate_Vintage=Opt_Rate_Vintage2, Month=Opt_Month2, Seq_Opt_Number=Opt_Seq_Number, @Start_End_Time1=step, All_Utilities=Selected_Utility] := Today(withTime: True);   {Update the new timestamp}~
~
Saved_Opt_Date1:= stampCopy;   {Save the timestamps}
NodeLocation: 1472,576,1
NodeSize: 64,40
WindState: 2,-1,4,1794,645
NodeColor: 65535,52427,52427

Index Start_End_Time1
Title: Start & End Time
Definition: ['Start Opt','End Opt','End Save']
NodeLocation: 1888,760,1
NodeSize: 64,40

Variable Flatten_Opt_Objectiv
Title: Flatten Opt Objective
Units: $
Description: The saved objective of the storage optimization.
Definition: MdArrayToTable(Saved_Strg_Objectiv2)
NodeLocation: 1280,616,1
NodeSize: 64,40
ValueState: 2,168,58,985,591,0,MIDM

Variable Flatten_Opt_Date
Title: Flatten Opt Date
Description: The saved date when the last storage optimization was completed.
Definition: MdArrayToTable(Saved_Opt_Date1)
NodeLocation: 1280,416,1
NodeSize: 64,40
ValueState: 2,265,100,1442,765,0,MIDM
GraphSetup: Att_GraphValueRange Flatten_Opt_Date:1,,0,,,,,43165.79530282021,43165.959711742405,0
ReformVal: [Sys_LocalIndex('Col'),Sys_LocalIndex('Row')]
NumberFormat: 3,F,2,2,0,0,2,0,$,0,"d-MMM-yyyy h:mm:ss tt",0,"DATETIME",40203,0,1,15,
Att_ResultSliceState: [All_Sectors,1,Rate_Vintage,4,PV_Climate_Zone,1,All_Storage_Systems,1,Month,6,Seq_Opt_Number,1,Start_End_Time1,1]

Alias Al1552348258
Title: Exog Initial Charge Level
Definition: 1
NodeLocation: 96,728,1
NodeSize: 64,40
NodeColor: 65535,1,1
Original: Exog_Initial_Charge1

FormNode Fo1552348279
Title: Initial Charge Level
Definition: 0
NodeLocation: 96,772,1
NodeSize: 56,12
NodeInfo: 1,0,0,0,0,0,0,,0,,0,,,
Original: Exog_Initial_Charge1

Decision Selected_Seq_Opt
Title: Selected Seqential Opt
Description: Select the sequential optimizations that will be evaluated in the storage optimization routines.
Definition: MultiChoice(Seq_Opt_Number,allowNone:0,returnList:1)
NodeLocation: 768,280,1
NodeSize: 64,40
WindState: 2,59,318,720,350
Aliases: FormNode Fo1556825871

FormNode Fo1556825871
Title: Active Opt Number
Definition: 0
NodeLocation: 776,332,1
NodeSize: 72,16
NodeInfo: 1,0,0,0,0,0,0,102,0,,0,,,
Original: Selected_Seq_Opt

Decision App_SOC_Constraint
Title: Applied SOC Constraint
Description: The battery state-of-charge constraint applied in the battery dispatch optimization. This determines whether the starting and ending states of charge must be equal.~
~
==No constraint==~
Does not require the starting and ending states of charge to be identical. If the valid optimization window (eg, 24 hours) is shorter than the profile granularity (eg, weekly), then the model will still ensure that sequential optiization windows will daisy-chain into one another (eg, day2's starting SOC will equal day 1's ending SOC). This is typically used when leading or ending throwaway days are included in the optimization. ~
==Optimization window==~
Requires the starting and ending states of charge to be identical for the valid optimization window. For example, if the profile granularity is weekly and the valid optimization window length is 7 days, then the starting SOC on day 1 and the ending SOC on day 7 will be identical. However, if the optimization window length is 4 days, then the starting SOC on day 1, the ending SOC on day 4, the starting SOC on day 5, and the ending SOC on day 7 will be identical. Leading and ending throwaway days are not useful under this constraint and will be ignored. If the profile granularity is "Representative Day Type" and the optimization window length is greater than 1 day, then the optimization results will not ensure that weekdays or weekend days start and end at the same state of charge.
Definition: Choice(SOC_Constraints,1,0)
NodeLocation: 96,520,1
NodeSize: 64,40
WindState: 2,440,20,1066,483
Aliases: FormNode Fo1557342528, FormNode Fo1557428305
OnChange: Same_Chrg_Constraint

FormNode Fo1557342528
Title: Valid Opt Window Length
Definition: 0
NodeLocation: 104,564,1
NodeSize: 80,16
NodeInfo: 1,0,0,0,0,0,0,118,0,,0,,,
Original: App_SOC_Constraint

Decision App_Initial_SOC_Type
Title: Applied Initial SOC Type
Description: The type of input used to initialize the battery state of charge. Depending on the applied state of charge constraint, this setting might also impact the starting/ending states of charge on a daily basis or on an optimization window basis.~
~
==Exogenous==~
The user specifies the initial state of charge.~
==Full Charge==~
Uses the maximum charge level for the initial state of charge.~
==Optimized==~
The optimization will find the best initial state of charge level. If applied during a "No constraint" scenario, this will likely lead to full charging of the battery. If the optimization window length (eg, 1 day) is less than the profile granularity (eg, weekly), then the optimization will only optimize for the first sequential optimization (eg, day 1) and apply the same value to all subsequent sequential optimizations (eg, days 2-7). In such a circumstance, the optimized initial state of charge found in first sequential optimization may not be optimal for all subsequent sequential optimizations.
Definition: Choice(SOC_Initializ_Type,1,0)
NodeLocation: 96,624,1
NodeSize: 64,40
WindState: 2,790,14,985,504
Aliases: FormNode Fo1557342578, FormNode Fo1557428306
OnChange: Initial_SOC_Type

FormNode Fo1557342578
Title: Valid Opt Window Length
Definition: 0
NodeLocation: 104,668,1
NodeSize: 80,16
NodeInfo: 1,0,0,0,0,0,0,118,0,,0,,,
Original: App_Initial_SOC_Type

Decision Lead_ThrowAway_Days
Title: Leading Throw-Away Days
Units: days
Description: The number of days added to the beginning of the optimization window to account for start effects. If this is zero, the applied SOC constrain is "No constraint" and the applied SOC type is "Optimized", the optimization is likely to fully charge the battery on the first day in the optimization. If the applied SOC type is "Optimization window" or "Daily", then this input is irrelevant and will be ignored.
Definition: 1
NodeLocation: 96,312,1
NodeSize: 64,40
WindState: 2,319,9,720,350
Aliases: FormNode Fo1557344240, FormNode Fo1557428166

Decision End_ThrowAway_Days
Title: Ending Throw-Away Days
Units: days
Description: The number of days added to the end of the optimization window to account for end effects. If this is zero and the applied SOC type is "No constraint", the optimization is likely to fully discharge the battery on the final day in the optimization. If the applied SOC type is "Optimization window" or "Daily", then this input is irrelevant and will be ignored.
Definition: 1
NodeLocation: 96,416,1
NodeSize: 64,40
WindState: 2,244,12,720,350
Aliases: FormNode Fo1557344241, FormNode Fo1557428167

FormNode Fo1557344240
Title: Leading Throw-Away Hours
Definition: 0
NodeLocation: 96,356,1
NodeSize: 56,12
NodeInfo: 1,0,0,0,0,0,0,,0,,0,,,
Original: Lead_ThrowAway_Days

FormNode Fo1557344241
Title: Ending Throw-Away Hours
Definition: 0
NodeLocation: 96,460,1
NodeSize: 56,12
NodeInfo: 1,0,0,0,0,0,0,,0,,0,,,
Original: End_ThrowAway_Days

Decision Opt_Window_Length
Title: Opt Window Length
Units: days
Description: Specify the length of optimization window. The optimization will assume perfect foresight of loads and solar production during this window. For a "Representative Day Type" profile granularity, selecting an optimization window longer than 1 day implies that all weekdays are followed by weekend days, and all weekend days are preceded by weekdays.
Definition: 7
NodeLocation: 96,208,1
NodeSize: 64,40
WindState: 2,782,3,720,483
Aliases: FormNode Fo1557344409, FormNode Fo1557428168

FormNode Fo1557344409
Title: Valid Opt Window Length
Definition: 0
NodeLocation: 96,252,1
NodeSize: 56,12
NodeInfo: 1,0,0,0,0,0,0,,0,,0,,,
Original: Opt_Window_Length

Function Save_Ending_SOC(storeVar: Variable; data)
Title: Save Ending SOC
Description: Stores data in the storeVar.~
~
[storeVar]: the variable where data will be stored.~
[data]: the data that will be stored in 
Definition: VAR reindex:=IF (Opt_Sectors=Opt_Sector2) AND (Opt_Storage_Systems=Opt_System2) AND (PV_Climate_Zone=Opt_Climate_Zone2) AND (Rate_Vintage=Opt_Rate_Vintage2) AND (Month=Opt_Month2) AND (Seq_Opt_Number=Opt_Seq_Number)~
   THEN Battery_SOC_for_Next~
   ELSE Saved_Ending_Charge;~
~
Saved_Ending_Charge:= reindex
NodeLocation: 1600,576,1
NodeSize: 64,40
WindState: 2,150,30,1489,374

Decision Set_Filters_to_All3
Title: Set Filters to All
Units: boolean
Description: When checked, this will decouple rates from the net load found from the storage optimization. This ensures that rates aren't invalidated whenever a new storage optimization solution is saved, which allows the storage optimization to run faster.
Definition: Table(Storage_Opt_Filters2)(Checkbox(1),Checkbox(1),Checkbox(1),Checkbox(1),Checkbox(1),Checkbox(1))
NodeLocation: 1128,656,1
NodeSize: 64,40
DefnState: 2,509,487,416,303,0,DFNM
Aliases: FormNode Fo1557425751
TableCellDefault: Checkbox(0)

FormNode Fo1557425751
Title: Use Storage Decision Var
Definition: 0
NodeLocation: 1136,700,1
NodeSize: 56,12
NodeInfo: 1,0,0,0,0,0,0,70,0,,0,,,0
Original: Set_Filters_to_All3

Function Set_Same_Chrg_Constr()
Title: Set Same Charge Constraint
Description: Turns on/off the same charge constraint depending on what type of state-of-charge constraint is applied.
Definition: MetaVar constrHandle:=Handle(Same_Starting_Charg1);~
VAR origConstr:=SubIndex(Storage_Constraints2,All_Strg_Constraint2, Storage_Constraints2);~
VAR addConstr:=IF All_Strg_Constraint2 = constrHandle~
   THEN constrHandle~
   ELSE origConstr;~
INDEX selection:=IF App_SOC_Constraint = No_Constraint_Label~
   THEN Subset((origConstr <> constrHandle) AND (origConstr <> Null))~
   ELSE Subset(addConstr<>Null);~
~
Storage_Constraints2 := CopyIndex(selection);
NodeLocation: 1728,576,1
NodeSize: 64,40
WindState: 2,-12,258,720,350

Button Same_Chrg_Constraint
Title: Same Charge Constraints
Description: Turns on/off the same charge constraint depending on what type of state-of-charge constraint is applied.
NodeLocation: 1744,192,1
NodeSize: 64,40
OnClick: Set_Same_Chrg_Constr()

Function Set_Init_Charge_Type()
Title: Set Initial Charge Type
Description: Includes/excludes the initial charge decision in the optimization depending on what type of initial state of charge type is applied.
Definition: MetaVar decisHandle:=Handle(Initial_Charge_Leve2);~
VAR origDecis=SubIndex(Storage_Decisions2,All_Strg_Decisions2, Storage_Decisions2);~
VAR addDecis=IF All_Strg_Decisions2 = decisHandle~
   THEN decisHandle~
   ELSE origDecis;~
INDEX selection:=IF App_Initial_SOC_Type = Optim_Charge_Label~
   THEN Subset(addDecis <> Null)~
   ELSE Subset((origDecis <> decisHandle) AND (origDecis <> Null)); ~
~
Storage_Decisions2 := CopyIndex(selection);
NodeLocation: 1472,664,1
NodeSize: 64,40
WindState: 2,440,54,1060,586

Button Initial_SOC_Type
Title: Initial SOC Type
Description: Includes/excludes the initial charge decision in the optimization depending on what type of initial state of charge type is applied.
NodeLocation: 1880,96,1
NodeSize: 64,40
WindState: 2,13,406,720,350
OnClick: Set_Init_Charge_Type()

Function Unflatten_Decisions(flatData; rows, cols: Index)
Title: Unflatten Decisions
Description: Takes a flat (2-D) table and makes it multi-dimensional. ~
~
[flatData]: a 2-D table with fact and value columns.~
[rows]: the row index for the flat table~
[cols]: the column index for the flat table, which should include fact and value columns
Definition: IF Size(flatData) = 1~
THEN Null~
ELSE MdTable(flatData, rows, cols)
NodeLocation: 1856,480,1
NodeSize: 64,40
WindState: 2,98,82,1038,350

Function Flatten_Decisions(multiDimTable; rows, cols: Variable)
Title: Flatten Decisions
Description: Takes a multi-D variable and flattens it. The resulting row and column indices of the flat table are then assigned to the indexes [rows] and [cols]. Then the flat results are reindexed by the global [rows] and [cols] indices.~
~
[multiDimTable]: a multi-dimensional table~
[rows]: an index where the rows of the flattened table will be saved~
[cols]: an index where the columns of the flattened table will be saved
Definition: VAR flat:=MdArrayToTable(multiDimTable, omitZero: False, omitNull: True);~
rows:=CopyIndex(flat.Row);~
cols:=CopyIndex(flat.Col);~
flat[.Row=rows, .Col=cols]~
~

NodeLocation: 1856,576,1
NodeSize: 64,40

Variable Flatten_Opt_Status
Title: Flatten Opt Status
Description: The saved status of the storage optimization.
Definition: MdArrayToTable(Saved_Strg_OptStatu2)
NodeLocation: 1280,208,1
NodeSize: 64,40
ValueState: 2,100,0,1267,913,0,MIDM
ReformVal: [Month,Seq_Opt_Number]
Att_ResultSliceState: [All_Sectors,1,Rate_Vintage,4,PV_Climate_Zone,1,All_Storage_Systems,1,Month,1,Seq_Opt_Number,1]

FormNode Fo1558068715
Title: Decouple Rates from Storage Opt
Definition: 0
NodeLocation: 1188,508,1
NodeSize: 28,12
NodeInfo: 1,0,0,0,0,0,0,,0,,0,,,
Original: Decouple_Rates2

Decision Sel_Profile_Granular
Title: Selected Profile Granularity
Description: Select the granularity of the customer load and solar profiles used in the simulation.~
~
Monthly Time-Series: uses every hour in each month.~
Representative Week: uses a representative week, which is an average across all weeks in the month.~
Representative Day Type: uses a representative weekday and weekend, which are averages across all weekdays/weekends in the month.
Definition: Choice(Profile_Granularity,2,1)
NodeLocation: 96,96,1
NodeSize: 64,40
WindState: 2,98,82,1104,446
Aliases: Alias Al1571850213, FormNode Fo1571850212, Alias Al1557428073, FormNode Fo1557428073, Alias Al1571846328, FormNode Fo1571846329, FormNode Fo1552451076, FormNode Fo1552494170, Alias Al1552494170, FormNode Fo1571365626

FormNode Fo1552451076
Title: Selected Profile Granularity
Definition: 0
NodeLocation: 108,144,1
NodeSize: 76,16
NodeInfo: 1,0,0,0,0,0,0,118,0,,0,,,0
Original: Sel_Profile_Granular

Decision Include_Save_Time
Title: Include Save Time in Timestamp
Units: boolean
Description: When checked, this will include the amount of time it takes to save optimization solutions in the ending timestamp. If unchecked, it will mark the time when the optimization solution has been found, but not yet saved.
Definition: Checkbox(1)
NodeLocation: 256,480,1
NodeSize: 64,40
Aliases: FormNode Fo1571432926

FormNode Fo1571432926
Title: Use Storage Decision Var
Definition: 0
NodeLocation: 316,508,1
NodeSize: 28,12
NodeInfo: 1,0,0,0,0,0,0,,0,,0,,,
Original: Include_Save_Time

{!40404|FreePassObjectCount txrCizV0Oaf$0uqhZ6Wj44FRazdGm4HluuyxyDoWzPjm1YNL6iOaxC6IRqXNuCZj_zAdOInDi6RoPKODlJpKUutpoiXOVwUr1JM2vg4mPIVruxihwT9Pssy$uaWGu8OWvSMJB_oPz9BHB_2e6f6jUlzvwywnoJnzEWls7uc2Z5byTUS8vhS3q5JFGIKBIcz7ONZHtY7sr8apt1hWFdHwRCHVWMI$LsHLhznTEvkxGSu$0BgYInTk8LHOE4pf1HcrEzphVKoWmu5CT_pnS7W6EEJIRnbGtFbj6fZWOB$W8VosuiedmGpHg4RhrteLpFTpD2JR6SqDc0RtLoHnIqMvU3fGuWArWDweN7ugTH5xnfXQLFB8644458BFKPWemw4FRet5LctATo7TqCb$PrHlDiCjFoMxW6kM0gL1jRAvgRD0qfVMD60wrnkihhikmquz3AIRblx8Lap3KbvCXsDayLlAc3W$U$W2cAkKxYBrVBsZH0mXI5ujXOF70wqmifdddegjmrx18HQaly8Mbq5LexFawHf1RrHjAe7d8fClKvV6lO1iO4oWG0nZMA_qhYQJE841$_z_$159EJQYhr$BNao1HXp6Pk3Pn8XxMoEiBgAhDmKvU5iL_fJ_gO7tdPB_}
Library Linked_list_library
Title: Linked List Library
Description: Contains routines for manipulating a linked list.~
The simplest linked list is just NULL -- a linked list with zero elements.~
Any other linked list is a reference to a record indexed by Linked_List with each cell containing a reference, to the element, and to the remainder.~
~
Use the LL_Push to build the list.~
After a list is built, the easiest way to use and view it is to convert it back to an array using LL_to_RArray.~
~
For example, assume you have a function IsPrime(n).~
This collects all the primes between 2 and n:~
~
var LL := null;~
for i:=n..2 do begin~
  if IsPrime(i) then LL := LL_Push(LL,i)  /* Build the list */~
end;~
LL_to_Array( LL, "primes" )  /* Convert to an array for easy use */
Author: Lonnie Chrisman
Date: Mon, Aug 18, 2003 11:53 PM
NodeLocation: 1600,664,1
NodeSize: 64,40
NodeInfo: 1,1,1,1,1,1,0,0,0,0,,,,0
DiagState: 2,459,24,700,488,17
WindState: 2,102,90,669,534
FontStyle: Arial, 15
Att_PreLoadScript: {!40404|FreePassObjectCount txrCizV0Oaf$0uqhZ6Wj44FRazdGm4HluuyxyDoWzPjm1YNL6iOaxC6IRqXNuCZj_zAdOInDi6RoPKODlJpKUutpoiXOVwUr1JM2vg4mPIVruxihwT9Pssy$uaWGu8OWvSMJB_oPz9BHB_2e6f6jUlzvwywnoJnzEWls7uc2Z5byTUS8vhS3q5JFGIKBIcz7ONZHtY7sr8apt1hWFdHwRCHVWMI$LsHLhznTEvkxGSu$0BgYInTk8LHOE4pf1HcrEzphVKoWmu5CT_pnS7W6EEJIRnbGtFbj6fZWOB$W8VosuiedmGpHg4RhrteLpFTpD2JR6SqDc0RtLoHnIqMvU3fGuWArWDweN7ugTH5xnfXQLFB8644458BFKPWemw4FRet5LctATo7TqCb$PrHlDiCjFoMxW6kM0gL1jRAvgRD0qfVMD60wrnkihhikmquz3AIRblx8Lap3KbvCXsDayLlAc3W$U$W2cAkKxYBrVBsZH0mXI5ujXOF70wqmifdddegjmrx18HQaly8Mbq5LexFawHf1RrHjAe7d8fClKvV6lO1iO4oWG0nZMA_qhYQJE841$_z_$159EJQYhr$BNao1HXp6Pk3Pn8XxMoEiBgAhDmKvU5iL_fJ_gO7tdPB_}
{!40400|Att_clearTypeFonts: -1}

Index Linked_list
Title: Linked List
Description: Record definition of a linked list.  Item contains a reference to the element.  Next contains the remainder of the linked list, which is either NULL or a reference to something indexed by Linked_List.
Definition: ['Item','Next']
NodeLocation: 256,416,1
NodeSize: 64,40

Function Ll_push(LL,x)
Title: LL Push
Description: Pushes x on the front of the linked list LL and returns the new LL.
Definition: \Array(Linked_List,[\x,LL])
NodeLocation: 104,128,1
NodeSize: 64,40
WindState: 2,311,-9,767,346

Function Ll_to_array(LL,indexName:atomic)
Title: LL To Array
Description: Converts a linked list to an array.  ~
The array is indexed by a single local index having the name indicated by the second parameter.
Definition: var len := LL_Length(LL);~
if len=0 then~
  NULL~
else begin~
  index J / indexName :=1..LL_Length(LL);~
  for i:=J Do (~
    Var x:=LL_First(LL);~
    LL := LL_Remove_First(LL);~
    x~
  )~
end
NodeLocation: 248,224,1
NodeSize: 64,40
WindState: 2,426,58,593,411

Function Ll_length(LL:atomic)
Title: LL Length
Description: Returnst the # of elements in a linked list.
Definition: var len:=0;~
while (IsReference(LL)) begin~
  LL := subscript(#LL,Linked_List,"Next");~
  len := len + 1~
end;~
len
NodeLocation: 104,224,1
NodeSize: 64,40
WindState: 2,533,489,568,339

Function Ll_first(LL)
Title: LL First
Description: Returns the first element of a non-empty linked list.
Definition: #Subscript(#LL,Linked_List,"Item")
NodeLocation: 104,320,1
NodeSize: 64,40

Function Ll_remove_first(LL)
Title: LL Remove First
Description: Returns a linked list resulting from the removal of the first element of the list.
Definition: Subscript(#LL,Linked_List,"Next")
NodeLocation: 248,320,1
NodeSize: 64,40

Function Ll_to_rarray(LL,indexName:atomic)
Title: LL to RArray
Description: Converts a linked list to an array but with elements in reverse order (last in LL first in array).~
This is often useful when collecting things during an iteration, where pushing them on the front is most convenient, so that the linked list is actually in reverse order.  When done, this retrieves the collection as an Analytica array in the forward iteration order, as if each item had been appended during the iteration.
Definition: var len := LL_Length(LL);~
index J / indexName :=1..len;~
Slice( for i:=J Do (~
  Var x:=LL_First(LL);~
  LL := LL_Remove_First(LL);~
  x~
), J, len-J+1)
NodeLocation: 248,128,1
NodeSize: 64,40
WindState: 2,102,90,1083,415

Function Ll_nth(LL ; n:atomic positive)
Title: LL Nth
Description: Returns the Nth element in a linked list.  ~
Note that this operation is not efficient -- if you are going to do it many times, you may be better off converting to an array first.  Element n=1 is the first element.  If n does not correspond to an element, NULL is returned.
Definition: while Isreference(LL) and n>1 Do begin~
    n:=n-1; ~
    LL:=LL_Remove_First(LL)~
end;~
if Isreference(LL) then LL_First(LL)~
else  NULL
NodeLocation: 104,416,1
NodeSize: 64,40
WindState: 2,445,158,472,331

Module Ll_example_usage
Title: Example usage
Description: This example shows a linked list of 'fruits'.  It currently exercises all the functions of the 'linked list library'.
Author: Fred & Lonnie
Date: Mon, Feb 28, 2005 2:48 PM
NodeLocation: 448,120,1
NodeSize: 64,40
NodeInfo: 1,1,1,1,1,1,0,0,0,0
DiagState: 2,965,5,648,496,17
WindState: 2,44,283,476,224
DiagramColor: 52427,65535,62258

Variable First_tweaked_call
Title: First Tweaked
Definition: Ll_first( The_ll )
NodeLocation: 336,232,1
NodeSize: 72,16
ValueState: 2,40,50,416,303,0,MIDM

Variable Fruit_0
Title: Fruit 0
Definition: 'pineapple'
NodeLocation: 488,272,1
NodeSize: 48,24
DefnState: 2,43,180,416,303,0,MIDM
NodeColor: 65535,57341,1

Variable Fruit_1
Title: Fruit 1
Definition: 'apple'
NodeLocation: 104,240,1
NodeSize: 48,24
DefnState: 2,49,215,416,303,0,MIDM
ValueState: 2,56,66,416,303,0,MIDM
NodeColor: 65535,39321,39321

Variable Fruit_2
Title: Fruit 2
Definition: 'banana'
NodeLocation: 104,176,1
NodeSize: 48,24
DefnState: 2,368,120,416,303,0,MIDM
ValueState: 2,275,145,416,303,0,MIDM
NodeColor: 65535,65531,1

Variable Fruit_3
Title: Fruit 3
Definition: 'cranberry'
NodeLocation: 104,112,1
NodeSize: 48,24
NodeColor: 52427,1,1

Variable Fruit_4
Title: Fruit 4
Definition: 'durian'
NodeLocation: 104,48,1
NodeSize: 48,24
DefnState: 2,215,222,416,303,0,MIDM
ValueState: 2,72,82,416,303,0,MIDM
NodeColor: 32770,65535,1

Variable Length_call
Title: Length
Definition: Ll_length( The_ll )
NodeLocation: 336,152,1
NodeSize: 72,16
ValueState: 2,56,66,416,303,0,MIDM

Variable Ll_to_array1
Title: LL to Array
Definition: Ll_to_array( The_ll, "Fruits" )
NodeLocation: 336,72,1
NodeSize: 72,16
ValueState: 2,891,345,416,303,0,MIDM

Variable Ll_to_rarray_call
Title: LL to RArray
Definition: Ll_to_rarray( The_ll, "Fruits")
NodeLocation: 336,112,1
NodeSize: 72,16
ValueState: 2,314,224,416,303,0,MIDM

Variable The_ll
Title: The LL
Definition: var LL := LL_Push(null,Fruit_4);~
LL := LL_Push(LL,Fruit_3);~
LL := LL_Push(LL,Fruit_2);~
LL_Push(LL,Fruit_1)
NodeLocation: 104,304,1
NodeSize: 48,24
WindState: 2,759,341,720,350
ValueState: 2,40,50,416,303,0,MIDM

Variable Push_function_call
Title: Push function call
Definition: Ll_push( The_ll, Fruit_0 )
NodeLocation: 336,272,1
NodeSize: 72,16
ValueState: 2,213,154,416,303,0,MIDM

Variable Remove_call
Title: Remove
Definition: Ll_remove_first( The_ll )
NodeLocation: 336,312,1
NodeSize: 68,16
ValueState: 2,88,98,416,303,0,MIDM

Variable Ll_nth_call
Title: LL Nth
Definition: Ll_nth( The_ll, 3)
NodeLocation: 336,192,1
NodeSize: 68,16
ValueState: 2,40,50,416,303,0,MIDM

Function Isprime(n : atomic numeric)
Title: IsPrime
Description: Returns true if n is a prime.
Definition: if n<2 then false~
else if n=2 then true ~
else if Mod(n,2)=0 then false~
else begin~
  var k:=3;~
  var last := sqrt(n);~
  var factorFound := false;~
  while ( not factorFound and k<=last ) (~
      if Mod(n,k)=0 then factorFound:=true;~
      k := k+2;~
  );~
  not factorFound~
end
NodeLocation: 104,392,1
NodeSize: 48,24

Function First_n_primes(N : atomic positive)
Title: First N Primes(N)
Description: Returns a list of the first N primes.~
This is an example demonstrating how the linked list library might be used.
Definition: var nfound := 1;~
var LL := LL_Push(null,2);~
var i:=3;~
/* Builds a linked list of the primes found so far */~
while (nfound<n) do begin~
    if IsPrime(i) then (~
      LL := LL_Push(LL,i);~
      nfound := nfound+1~
    );~
    i := i+1~
end;~
/* Now convert the linked list to an array for easy use */~
LL_to_RArray(LL,"Number_of_prime")
NodeLocation: 208,392,1
NodeSize: 48,24
WindState: 2,102,90,476,357

Variable First_100_primes
Title: First 100 primes
Definition: First_N_Primes(100)
NodeLocation: 320,392,1
NodeSize: 48,24
ValueState: 2,173,90,456,664,0,MIDM

Close Ll_example_usage

Close Linked_list_library

Function Push_to_Linked_List()
Title: Push to Linked List
Description: This pushes the current optimization solutions to the saved linked list. It pushes an array of all decision variables, which implies that it will contain the union of all dimensionality and some dimensions may not be applicable to all decisions. Pushing to a linked list appears to be more time efficient than saving data directly to each saved decision variable.
Definition: VAR solution:=array(Storage_Decisions2, Null);   {Initialize an array indexed by all storage decision variables}~
FOR J:=@Storage_Decisions2 DO (   {For each decision variable}~
   MetaVar varHandle:=Slice(Storage_Decisions2, J);   {The handle to the current decision variable being saved}~
   LocalAlias decisVar:=varHandle;   {A local alias to the decision variable being saved}~
   solution[Storage_Decisions2=varHandle,All_Utilities=Selected_Utility{TEST CODE}]:=IF Total_Optimized_Cos2 = Null   {If the objective is null because a specific sequential optimization is not applicable}~
      THEN Null   {Then return null}~
      ELSE Round(OptSolution(Storage_Opt_Def2, decisVar),Saved_DV_Rounding_De);   {Else find the solution to the optimization for the Jth decision}~
   Null;   {Return a null to prevent excessive indexing}~
);~
Saved_Linked_List:=LL_Push(Saved_Linked_List, solution);   {Appends the current array of decision variables to the saved linked list}
NodeLocation: 1600,384,1
NodeSize: 64,40
WindState: 2,130,8,1567,879
NodeColor: 65535,52427,52427

Variable Extract_Link_Results
Title: Extract Linked Results
Description: This extracts and dereferences the saved solutions from the linked list.
Definition: {==Iteration will only include scenarios corresponding to the current sequential opt number, so it must be reindexed by a similar number of opt scenarios. Afterward it can be reindexed to the full list of opt scenarios==}~
LL_to_RArray(Saved_Linked_List, "Iteration")[@.Iteration=@OptScen_for_OptNum, OptScen_for_OptNum=Storage_Opt_Scenari2]
NodeLocation: 1280,760,1
NodeSize: 64,40
ValueState: 2,267,0,1491,894,0,MIDM
ReformVal: [Storage_Opt_Scenari2,Opt_Hours]
Att_ResultSliceState: [Storage_Decisions2,10,Opt_Hours,1,Storage_Opt_Scenari2,5]

Decision Scalar_Decisions
Title: Scalar Decisions
Units: boolean
Description: Flags decision variables that are scalar and not arrays. Most decisions are indexed by Opt Hours, but several are not, so we need to remove Opt Hours after extracting the solutions from the linked list.
Definition: Table(All_Strg_Decisions2)(Checkbox(0),Checkbox(0),Checkbox(0),Checkbox(0),Checkbox(0),Checkbox(1),Checkbox(1),Checkbox(0),Checkbox(0),Checkbox(1),Checkbox(0),Checkbox(1),Checkbox(0))
NodeLocation: 968,840,1
NodeSize: 64,40
WindState: 2,25,107,986,546
DefnState: 2,727,328,565,519,0,DFNM
ValueState: 2,229,358,578,429,0,MIDM
Aliases: FormNode Fo1571760922
ReformVal: [Self,All_Strg_Decisions2]
TableCellDefault: Checkbox(0)
Att_ResultSliceState: [Self,1,All_Strg_Decisions2,1]
MetaOnly: 0

Function Save_Linked_Solns(seqOptNum)
Title: Save Linked Solutions
Description: This takes the extracted solutions from the saved linked list and saves them in the saved decision variables. This action can be performed for more than one atomic optimization at a time, which makes it more time efficient.~
~
[seqOptNum]: the sequential opt number corresponding to the saved solutions in the linked list.
Definition: FOR J:=@Storage_Decisions2 DO (   {For each decision variable}~
   MetaVar varHandle:=Slice(Storage_Decisions2, J);   {The handle to the current decision variable being saved}~
   LocalAlias decisVar:=varHandle;   {A local alias to the decision variable being saved}~
   LocalAlias saveVar:=Saved_Vars_for_Strg2[All_Strg_Decisions2=varHandle];   {A local alias to the variable where the decision results will be saved}~
   IF varHandle = Null   {If the storage variable is not specified}~
   THEN Null   {Then do nothing}~
   ELSE (~
      VAR solution:=IF Scalar_Decisions[All_Strg_Decisions2=varHandle]   {If the decision is scalar}~
         THEN Extract_Link_Results[Storage_Decisions2=varHandle, @Opt_Hours=1]   {Then use the value in the first opt hour for the solution extracted from the linked list}~
         ELSE Extract_Link_Results[Storage_Decisions2=varHandle];   {Else use all opt hours for the solution extracted from the linked list}~
      VAR scenMap:=Binary_Scenario_Map AND (Seq_Opt_Number=seqOptNum);   {A binary map indicating which subscripts are included in the current linked list}~
      VAR rewrite:=IF Sum(scenMap, Storage_Opt_Scenari2)   {For subscripts that have been optimized already and are saved in the linked list}~
         THEN Sum(solution * scenMap, Storage_Opt_Scenari2)  {Use the optimal solutions from the linked list}~
         ELSE saveVar;  {Else use the values previously saved}~
      saveVar:= rewrite;   {Save the new results to the saved variable}  ~
      Null;   {Return a null to prevent excessive indexing}~
   )~
);~
Saved_Linked_List:=Null;  {Once the saved linked list solutions have been saved in the saved decisions, we need to clear the linked list for this next round of saved solutions}~

NodeLocation: 1728,384,1
NodeSize: 64,40
WindState: 2,134,107,1553,763

Variable Scenario_Map
Title: Scenario Map
Description: Maps the elements of the storage optimization scenarios to their corresponding indices.
Definition: VAR elements:=SplitText(Storage_Opt_Scenari2, Filter_Separator2, resultindex: Storage_Filter_Index);~
VAR numbers:=ParseNumber(elements);~
~
IF numbers = Null~
THEN elements~
ELSE numbers
NodeLocation: 464,400,1
NodeSize: 64,40
WindState: 2,214,388,720,350
ValueState: 2,277,217,1275,546,0,MIDM
ReformVal: [Self,Storage_Opt_Scenari2]

Index Storage_Filter_Index
Title: Storage Filter Indexes
Definition: ListOfHandles(Seq_Opt_Number, Opt_Sectors, Opt_Storage_Systems, PV_Climate_Zone, Rate_Vintage, Month)
NodeLocation: 616,496,1
NodeSize: 64,40
ValueState: 2,1118,282,767,390,0,MIDM

Variable Binary_Scenario_Map
Title: Binary Scenario Map
Units: boolean
Description: Flags the scenarios that are relevant to each storage optimization scenario.
Definition: VAR map:=1;~
FOR J:=@Storage_Filter_Index DO (~
   MetaVar indHandle:=Slice(Storage_Filter_Index, J);   {The handle to the current filtered index}~
   LocalAlias ind:=indHandle;   {A local alias to the current filtered index}~
   VAR filterElements:=Scenario_Map[Storage_Filter_Index=indHandle];   {The map column for the current filtered index}~
   map:= map AND (ind = filterElements);~
);~
map * (All_Utilities=Selected_Utility) {ensures we don't overwrite any decision variables saved to another utility, since this will be zero if the All_Utility element is not the currently selected utility}~

NodeLocation: 616,400,1
NodeSize: 64,40
WindState: 2,49,191,720,350
ValueState: 2,81,124,1380,645,0,MIDM
NodeColor: 65535,52427,52427
ReformVal: [Month,Storage_Opt_Scenari2]
Att_ResultSliceState: [PV_Climate_Zone,1,Seq_Opt_Number,1,Rate_Vintage,1,All_Utilities,1,Opt_Sectors,2,Opt_Storage_Systems,2,Storage_Opt_Scenari2,1,Month,1]

Button Clear_Linked_List
Title: Clear Linked List
Description: Clears any data that might be stored in the saved linked list variable.
NodeLocation: 1608,192,1
NodeSize: 64,40
OnClick: Saved_Linked_List:=Null;

Variable Seq_Opt_Num_by_Scen
Title: Seq Opt Num by Scenario
Description: The sequential optimization number associated with each scenario.
Definition: Scenario_Map[Storage_Filter_Index=Handle(Seq_Opt_Number)]
NodeLocation: 768,400,1
NodeSize: 64,40
WindState: 2,731,35,720,350
ValueState: 2,244,250,588,327,0,MIDM

FormNode Fo1571760922
Title: Scalar Decisions
Definition: 0
NodeLocation: 976,884,1
NodeSize: 56,12
NodeInfo: 1,0,0,0,0,0,0,,0,,0,,,
Original: Scalar_Decisions

Variable Next_Seq_Opt_Number
Title: Next Seq Opt Number
Description: The sequential optimization number for the subsequent optimization scenario.
Definition: VAR nextScen:=IgnoreWarnings(Slice(Storage_Opt_Scenari2, @Storage_Opt_Scenari2 + 1));~
Seq_Opt_Num_by_Scen[Storage_Opt_Scenari2=NextScen]
NodeLocation: 768,496,1
NodeSize: 64,40
WindState: 2,372,569,720,350
ValueState: 2,62,8,845,303,0,MIDM

FormNode Fo1571763505
Title: Saved Linked List
Definition: 0
NodeLocation: 1136,800,1
NodeSize: 72,16
NodeInfo: 1,0,0,0,0,0,0,102,0,,0,,,
Original: Saved_Linked_List

FormNode Fo1571775089
Title: Dispatch Flows
Definition: 1
NodeLocation: 1464,872,1
NodeSize: 208,16
NodeInfo: 1,,,,,,,72,,,,,,0
Original: Dispatch_Flows2

FormNode Fo1571775090
Title: Flows to View
Definition: 0
NodeLocation: 1464,840,1
NodeSize: 208,16
Original: Flows_to_View1

FormNode Fo1571775091
Title: Battery Charge for Dispatch
Definition: 1
NodeLocation: 1464,904,1
NodeSize: 208,16
Original: Battery_Charge_Disp2

FormNode Fo1571775092
Title: Rates for Dispatch
Definition: 1
NodeLocation: 1464,936,1
NodeSize: 208,16
Original: Rates_for_Dispatch2

FormNode Fo1571775093
Title: Monthly Levelized Cost
Definition: 1
NodeLocation: 1464,968,1
NodeSize: 208,16
Original: Lev_Utility_Bill

Index OptScen_for_OptNum
Title: Opt Scenario for Opt Number
Description: The subset of the storage optimization scenarios specific to the current filter's Opt Sequential Number. This ensures that results extracted from the linked list are properly ordered.~
~
This will break if more than 1 Opt Sequential Number is selected, but that will never occur during a looping process.
Definition: Subset(Seq_Opt_Num_by_Scen=Opt_Seq_Number)
NodeLocation: 1864,664,1
NodeSize: 64,40
WindState: 2,70,465,721,350
ValueState: 2,575,310,600,385,0,MIDM

Text Te1571783462
Description: Save_Linked_Solns might generate an error about the Opt Hours index being different between two variables. I think this error might resolve itself once the dimensionality of the saved decision variables has been created (compared with when they're still atomic after clearing them out).
NodeLocation: 1124,1044,-1
NodeSize: 236,60
NodeInfo: 1,0,0,1,1,1,0,,0,,0,,,
NodeColor: 65535,65535,65535

Button Decouple_Rates3
Title: Decouple Rates
Description: This changes the definition of Net_Load to completely sever the linkage to any results from the storage optimization routine. This ensures that rates aren't invalidated after every atomic storage optimization, and thus saves computing time. 
NodeLocation: 1472,288,1
NodeSize: 64,40
WindState: 2,48,209,1219,443
OnClick: VAR couple_expr:="IF " & (Identifier of Decouple_Rates2) & " THEN " & (Identifier of Load_Net_of_Solar) & " ELSE " & (Identifier of Load_Net_of_Storage);~
VAR decouple_expr:=Identifier of Load_Net_of_Solar;~
IF Decouple_Rates2~
THEN (Definition of Net_Load:=decouple_expr)~
ELSE (Definition of Net_Load:=couple_expr);

Button Remove_PV_Sectors
Title: Remove PV_Sectors
Description: Clears out all of the saved solutions for the decision variables.
NodeLocation: 328,976,1
NodeSize: 64,40
WindState: 2,473,12,720,350
OnClick: FOR J:=@All_Strg_Decisions2 DO (~
   MetaVar varHandle:=Slice(All_Strg_Decisions2, J);~
   LocalAlias saveVar:=Saved_Vars_for_Strg2[All_Strg_Decisions2=varHandle];~
   saveVar:=saveVar[@Periods=1];~
);~
Saved_Strg_OptStatu2:=Saved_Strg_OptStatu2[@Periods=1];~
Saved_Strg_Objectiv2:=Saved_Strg_Objectiv2[@Periods=1];

Alias Al1582132571
Title: Simultaneous Charge Penalty Fraction
Definition: 1
NodeLocation: 968,624,1
NodeSize: 64,40
NodeColor: 1,65535,32766
Original: SimultCharge_Penalty

FormNode Fo1582132571
Title: Variability Penalty
Definition: 0
NodeLocation: 976,676,1
NodeSize: 56,12
NodeInfo: 1,0,0,0,0,0,0,,0,,0,,,
Original: SimultCharge_Penalty

FormNode Fo1582234728
Title: Flows by Opt Hour
Definition: 1
NodeLocation: 1640,1048,1
NodeSize: 192,16
NodeColor: 19661,48336,65535
Original: Flows_by_Opt_Hour

Alias Al1582568623
Title: Export Penalty Fraction
Definition: 1
NodeLocation: 968,736,1
NodeSize: 64,40
Original: Export_Penalty_Fract

FormNode Fo1582568623
Title: Variability Penalty
Definition: 0
NodeLocation: 968,780,1
NodeSize: 56,12
NodeInfo: 1,0,0,0,0,0,0,,0,,0,,,
Original: Export_Penalty_Fract

Alias Al1584728798
Title: Use Levelized Inputs
Definition: 1
NodeLocation: 256,568,1
NodeSize: 64,40
Original: Use_Levelized_Inputs

FormNode Fo1584728798
Title: Use Levelized Inputs
Definition: 0
NodeLocation: 308,596,1
NodeSize: 28,12
NodeInfo: 1,0,0,0,0,0,0,,0,,0,,,
Original: Use_Levelized_Inputs

Alias Al1584728928
Title: Stored PV Pct for ITC
Definition: 1
NodeLocation: 1128,864,1
NodeSize: 64,40
Original: Stored_PV_Pct_ITC

FormNode Fo1584728929
Title: Stored PV Pct for ITC
Definition: 0
NodeLocation: 1128,916,1
NodeSize: 56,12
NodeInfo: 1,0,0,0,0,0,0,,0,,0,,,
Original: Stored_PV_Pct_ITC

Alias Al1161770019
Title: Saved Storage Opt Status
Definition: 1
NodeLocation: 1280,104,1
NodeSize: 64,40
Original: Saved_Strg_OptStatu2

Alias Al1698640931
Title: Saved Storage Opt Objective
Definition: 1
NodeLocation: 1280,504,1
NodeSize: 64,40
Original: Saved_Strg_Objectiv2

Alias Al1430205475
Title: Saved Opt Date
Definition: 1
NodeLocation: 1280,304,1
NodeSize: 64,40
Original: Saved_Opt_Date1

Alias Al1967076387
Title: Saved Linked List
Definition: 1
NodeLocation: 1128,760,1
NodeSize: 64,40
Original: Saved_Linked_List

Constant Saved_DV_Rounding_De
Title: Saved DV Rounding Decimals
Definition: 2
NodeLocation: 1608,288,1
NodeSize: 64,40

Module Misc6
Title: Misc
Author: CWelch
Date: Fri, Mar 11, 2022 9:14 AM
NodeLocation: 1752,288,1
NodeSize: 64,40
NodeInfo: 1,0
DiagState: 2,12,89,1212,512,17,10
WindState: 2,323,77,720,350

Decision Select_Strg_Sector2
Title: Selected Storage Sectors
Description: Select the sectors that will be evaluated in the storage optimization routines.
Definition: MultiChoice(Opt_Sectors,1,allowNone:0,returnList:1)
NodeLocation: 128,288,1
NodeSize: 64,40
Aliases: FormNode Fo1552348264, Alias Al513733155

FormNode Fo1552348264
Title: Opt Sector
Definition: 0
NodeLocation: 120,336,1
NodeSize: 88,16
NodeInfo: 1,,,0,,,,134,,,0,,,0
Original: Select_Strg_Sector2

Button Run_Storage_Optimiz2
Title: Run Storage Optimization
Description: Press this button to loop through the selected storage scenarios, perform storage dispatch optimization, and store the optimized solutions in the decision variables (if selected via Store_Soln_in_Decis) and saved solution variables.
NodeLocation: 124,408,1
NodeSize: 68,40
NodeInfo: 1,0,0,1,1,1,1,,1,,0,,,
NodeFont: Arial Black,16
OnClick: Run_Storage_Dispatc2()

Variable Opt_Time
Title: Opt Time
Definition: ignorewarnings(Saved_Opt_Date1[Start_End_Time1='End Opt']-Saved_Opt_Date1[Start_End_Time1= 'Start Opt'])
NodeLocation: 112,64,1
NodeSize: 64,40
ValueState: 2,229,211,1226,428,0,MIDM
ReformVal: [Month,Opt_Sectors]
NumberFormat: 2,F,4,2,0,0,4,0,$,0,"mm:sss",0,,,0,1,15,
Att__TotalsIndex: [Month,Opt_Sectors]
Att_ResultSliceState: [PV_Climate_Zone,4,Opt_Storage_Systems,1,Seq_Opt_Number,1,Rate_Vintage,1,Opt_Sectors,1,Month,0]

Variable Save_Time
Title: Save Time
Definition: ignorewarnings(Saved_Opt_Date1[Start_End_Time1= 'End Save']-Saved_Opt_Date1[Start_End_Time1='End Opt'])
NodeLocation: 112,160,1
NodeSize: 64,40
ValueState: 2,129,83,1567,608,0,MIDM
ReformVal: [Month,Opt_Sectors]
NumberFormat: 2,F,2,2,0,0,2,0,$,0,"mm:ssssss",0,,,0,1,15,
Att__TotalsIndex: [Month]
Att_ResultSliceState: [Rate_Vintage,1,PV_Climate_Zone,1,Opt_Storage_Systems,1,Seq_Opt_Number,1,Opt_Sectors,1,Month,1]

Alias Al513733155
Title: Selected Storage Sectors
Definition: 1
NodeLocation: 496,56,1
NodeSize: 64,40
Original: Select_Strg_Sector2

Index Copied_Selected_Stor
Title: Copied Selected Storage Sectors
Definition: ['LG_Unique Education','LG_Government_Office','LG_Housing']
NodeLocation: 488,264,1
NodeSize: 72,40
ValueState: 2,3147,232,416,303,0,MIDM

FormNode Fo989786659
Title: Chose Sectors to Optimize
Definition: 0
NodeLocation: 684,184,1
NodeSize: 268,16
NodeInfo: 1,,,,,,,292,,,,,,0
Original: Choose_Sectors_to_Op

Variable Number_of_bess_opt_s
Title: Number of bess opt sectors selected
Definition: size(Choose_Sectors_to_Op)
NodeLocation: 784,64,1
NodeSize: 72,40

Variable Current_BESS_Sector
Title: Current BESS Sector
Definition: 1
NodeLocation: 648,264,1
NodeSize: 64,40
Aliases: FormNode Fo631382307

FormNode Fo631382307
Title: Current BESS Sector
Definition: 1
NodeLocation: 984,256,1
NodeSize: 136,16
Original: Current_BESS_Sector

Alias Al783884579
Title: Choose Sectors to Optimize
Definition: 1
NodeLocation: 960,64,1
NodeSize: 64,40
Original: Choose_Sectors_to_Op

Variable Compare11
Definition: [Opt_Time,Save_Time]
NodeLocation: 264,64,1
NodeSize: 64,40
ValueState: 2,428,106,1036,672,0,MIDM
GraphSetup: Att_GraphIndexRange Opt_Sectors:1,,0,,,,,1,4,1~
Att_GraphValueRange Compare11:1,,1,,,,,1.3335053324699406e-05,2.450520217418671e-05,0
ReformVal: [Opt_Sectors,Self]
NumberFormat: 3,F,4,5,0,0,4,0,$,0,"d-MMM-yyyy h:mm:ss tt",0,"DATETIME",40203,0,0,15,
Att__TotalsIndex: [Month,PV_Climate_Zone,Self]
Att_ResultSliceState: [Rate_Vintage,1,Opt_Storage_Systems,1,Seq_Opt_Number,1,Self,1,Month,0,PV_Climate_Zone,0,Opt_Sectors,1]
{!40300|Att_SlicerPopupSize: 232,64}
{!40700|Att_CellFormat: CellSpan(Compare11,CellNumberFormat('Fixed Point',5,0,0,dateFormat:'mm:ss',fullPrecision:0,numbersAsDates:0,datesAsNumbers:0),3,header:0)}

Close Misc6

Button Run_Strg_Opt_Wrap
Title: Run Storage Optimization (wrapped)
Description: Runs faster using this method when running multiple sectors (due to some issue with exponentially growing save times with other script)
NodeLocation: 968,112,1
NodeSize: 64,40
OnClick: for i:=Choose_Sectors_to_Op DO~
	(Current_BESS_Sector:= PositionInIndex( Choose_Sectors_to_Op, i, Choose_Sectors_to_Op);~
	Select_Strg_Sector2:=i;~
	Run_Storage_Optimiz2;~
	);~
MsgBox("Storage dispatch optimization complete.", 0, "Storage Dispatch Optimization");

Decision Choose_Sectors_to_Op
Title: Choose Sectors to Optimize
Description: Select the sectors that will be evaluated in the storage optimization routines.
Definition: MultiChoice(Opt_Sectors,allowNone:0,returnList:1)
NodeLocation: 464,168,1
NodeSize: 64,40
Aliases: FormNode Fo989786659, Alias Al783884579, FormNode Fo431563043

FormNode Fo431563043
Title: Chose Sectors to Optimize
Definition: 0
NodeLocation: 476,216,1
NodeSize: 76,16
NodeInfo: 1,,,0,,,,118,,,,,,0
Original: Choose_Sectors_to_Op

FormNode Fo575799571
Title: Selected Utility
Definition: 0
NodeLocation: 620,72,1
NodeSize: 228,16
NodeInfo: 1,,,,,,,312,,,,,,0
Original: Selected_Utility

FormNode Fo63398035
Title: Select Rate
Definition: 0
NodeLocation: 740,112,1
NodeSize: 92,16
Original: Select_Rate

Close Storage_Optimizati11

Module Storage_Opt_Diagnos2
Title: Storage Opt Diagnostics
Author: JamesMilford
Date: Mon, Dec 31, 2018 11:53 AM
NodeLocation: 264,160,1
NodeSize: 64,40
NodeInfo: 1,0,0,1,1,1,0,,0,,0,,,
DiagState: 2,2371,70,1294,622,17,10
NodeColor: 65535,65535,65535

Variable Tot_Elect_Meet_Load2
Title: Total Electricity Meeting Load
Units: kW-hr/customer
Description: The total electricity from grid purchases, PV, and battery discharge used to meet load.
Definition: App_Grid_MeetLoad2 + Dischg_RedLoad_Loss1 + Applied_PV_RedLoad2
NodeLocation: 272,352,1
NodeSize: 64,40
ValueState: 2,328,330,774,525,,MIDM

Variable Compare_Flows_Load2
Title: Compare Flows to Load
Units: kW-hr/customer
Description: A comparison to ensure that storage optimization fully meets the customer load.
Definition: [Tot_Elect_Meet_Load2,Opt_Customer_Load]
NodeLocation: 416,352,1
NodeSize: 64,40
ValueState: 2,15,25,1215,834,1,MIDM
GraphSetup: Att_CatLineStyle Graph_Primary_Valdim:5

Objective Flows_by_Opt_Hour
Title: Flows by Opt Hour
Units: kW-hr/customer
Description: All dispatch flows by the nine-day optimization horizon.
Definition: Table(Flow_Name2)(StorageSyst_Net_Loa2,Opt_Solar_Output,Opt_Customer_Load,App_Grid_MeetLoad2,Applied_Stored_Grid1,Dischg_RedLoad_Loss1,Dischg_Export_Loss2,Applied_PV_RedLoad2,Applied_PV_Exported2,Applied_Stored_PV2,Total_Discharge_Los2,Total_Charge2,Purchased_Electric2,Total_Exported_Elec2,Total_Change_in_Loa2)
NodeLocation: 272,64,1
NodeSize: 64,40
WindState: 2,2457,255,720,350
DefnState: 2,3223,410,416,490,0,DFNM
ValueState: 2,405,70,1187,754,1,MIDM
Aliases: FormNode Fo1557443244, FormNode Fo1582234728
NodeColor: 19661,48336,65535
GraphSetup: Att_GraphValueRange Flows_by_Opt_Hour:1,,1,,,,,-843.6260223388672,2734.088897705078,0~
Att_GraphIndexRange Opt_Hours:1,,1,,,,,116.63575291633606,150.43107867240906,0
ReformVal: [Opt_Hours,Flow_Name2]
Att__TotalsIndex: [Month]
Att_ResultSliceState: [Seq_Opt_Number,1,Opt_Sectors,2,Rate_Vintage,1,PV_Climate_Zone,1,Opt_Storage_Systems,2,Month,0,Area_Type,1,Flow_Name2,13,Opt_Hours,1]

Index Flow_Name2
Att_PrevIndexValue: ['Net Load','Total Solar Output','Gross Load','Grid Electricity to Meet Load','Stored Grid Electricity','Discharge to Reduce Load','Discharge Exported to Grid','PV to Reduce Load','PV Exported to Grid','Stored PV','Total Discharge','Total Charge','Total Purchased Electricity','Total Exported Electricity','Total Change in Load']
Title: Flow Name
Definition: ['Net Load','Total Solar Output','Gross Load','Grid Electricity to Meet Load','Stored Grid Electricity','Discharge to Reduce Load','Discharge Exported to Grid','PV to Reduce Load','PV Exported to Grid','Stored PV','Total Discharge','Total Charge','Total Purchased Electricity','Total Exported Electricity','Total Change in Load']
IndexVals: ['item 1']
NodeLocation: 112,488,1
NodeSize: 64,40
WindState: 2,3,3,720,350
ValueState: 2,2585,294,343,426,0,MIDM
ReformVal: [Undefined,Self]

Variable Pct_Stored_PV_Elect2
Title: Pct of Stored Electricity from PV
Units: fraction
Description: The percentage of stored electricity that comes from PV.
Definition: VAR pct:=Divide(Sum(Applied_Stored_PV2, Opt_Hours, Seq_Opt_Number), Sum(Total_Charge2, Opt_Hours, Seq_Opt_Number), True)[Rate_Vintage=RateVint_by_RateName[System_Types=storage_systems,PV_Sectors=Opt_Sectors]];~
~
IF Estim_Storage_Add_On AND (Storage_Systems=Storage_Added_Label)~
THEN pct[Opt_Storage_Systems=PV_Strg_Retro_Label]~
ELSE pct[Opt_Storage_Systems=Storage_Systems]
NodeLocation: 416,160,1
NodeSize: 64,40
WindState: 2,13,14,1254,350
ValueState: 2,390,405,1270,291,0,MIDM
ReformVal: [Month,Storage_Systems]
NumberFormat: 2,%,2,2,0,0,2,0,$,0,"ABBREV",0,,,0,0,15
Att_ResultSliceState: [Rate_Names_and_Start,5,PV_Climate_Zone,1,Opt_Sectors,2,Area_Type,1,Storage_Systems,1,Month,1]

Variable Dispatch_Flows2
Title: Dispatch Flows
Units: kW-hr/customer
Description: All dispatch flows for the selected time window.
Definition: Reindex_to_ProfileHr(Flows_by_Opt_Hour[Flow_Name2=Flow_Types1{, Rate_Vintage=RateVint_by_RateName[PV_Sectors=Opt_Sector2, PV_Climate_Zone=Opt_Climate_Zone2,System_Types=Opt_Storage_Systems]}])[Profile_Hours=Viewed_Dispatch_Tim2]
NodeLocation: 416,64,1
NodeSize: 64,40
WindState: 2,471,217,972,489
ValueState: 2,73,9,1638,767,1,MIDM
Aliases: FormNode Fo1557458712, FormNode Fo1571775089, FormNode Fo1228179747
GraphSetup: Att_CatLineStyle Graph_Primary_Valdim:5~
Att_GraphIndexRange Viewed_Dispatch_Tim2:1,,1,,,,,79,85,1~
Att_GraphValueRange Dispatch_Flows2:1,,1,,,,,-4.216403961181641,26.341934204101563,0~
Grid:0~
Att_AreaFill Graph_Primary_Valdim:0~
Att_Stacked_Lines Graph_Primary_Valdim:0
ReformVal: [Viewed_Dispatch_Tim2,Flow_Types1]
NumberFormat: 2,F,2,4,0,0,2,0,$,0,"ABBREV",0,,,0,0,15
Att__TotalsIndex: [Viewed_Dispatch_Tim2,Rate_Names_and_Start]
Att_ResultSliceState: [Area_Type,1,PV_Climate_Zone,1,Opt_Storage_Systems,1,Month,8,Rate_Vintage,2,Flow_Types1,1,Viewed_Dispatch_Tim2,1]

Decision Dispatch_Start_Time2
Title: Start Time for Dispatch
Description: Select the starting hour of the time window used to view storage dispatch results.
Definition: Choice(Profile_Hours,1,0)
NodeLocation: 112,64,1
NodeSize: 64,40
Aliases: FormNode Fo1557458723, FormNode Fo1552348280

Decision Dispatch_End_Time2
Title: End Time for Dispatch
Description: Select the ending hour of the time window used to view storage dispatch results.
Definition: Choice(Profile_Hours,744,0)
NodeLocation: 112,192,1
NodeSize: 64,40
Aliases: FormNode Fo1557458724, FormNode Fo1552348281

FormNode Fo1552348280
Title: Start Time for Dispatch
Definition: 0
NodeLocation: 120,120,1
NodeSize: 80,16
NodeInfo: 1,0,0,0,0,0,0,126,0,,0,,,0
Original: Dispatch_Start_Time2

FormNode Fo1552348281
Title: End Time for Dispatch
Definition: 0
NodeLocation: 120,248,1
NodeSize: 80,16
NodeInfo: 1,0,0,0,0,0,0,126,0,,0,,,
Original: Dispatch_End_Time2

Index Viewed_Dispatch_Tim2
Title: Viewed Dispatch Time
Definition: VAR startPos:=PositionInIndex(Profile_Hours, Dispatch_Start_Time2, Profile_Hours);~
VAR endPos:=PositionInIndex(Profile_Hours, Dispatch_End_Time2, Profile_Hours);~
INDEX range:=startPos..endPos;~
~
CopyIndex(SubIndex(@Profile_Hours, range, Profile_Hours))
NodeLocation: 112,312,1
NodeSize: 64,40
ValueState: 2,701,12,416,667,0,MIDM
{!40300|Att_SlicerPopupSize: 227,1001}

Objective Rates_Storage_Dispa2
Title: Rates for Storage Dispatch
Description: The levelized rates used in the storage dispatch.
Definition: Table(Rate_Component2)(EnergyPrice_by_OptHr*100,On_Peak_Dmd_Periods2*OnPkDmdPrice_OptHr,Non_Coinc_Dmd_Perio2*Lev_NCDmdPrice_Opt)
NodeLocation: 272,256,1
NodeSize: 64,40
WindState: 2,49,142,720,350
DefnState: 2,1131,344,629,303,0,DFNM
ValueState: 2,514,13,1120,822,,MIDM
NodeColor: 19661,48336,65535
ReformVal: [Ext_Day_and_Hour,Rate_Vintage]

Index Rate_Component2
Att_PrevIndexValue: ['Energy (cents/kWh)','On-Peak Demand ($/kW)','Non-Coincident Demand ($/kW)']
Title: Rate Component
Definition: ['Energy (cents/kWh)','On-Peak Demand ($/kW)','Non-Coincident Demand ($/kW)']
NodeLocation: 112,400,1
NodeSize: 64,40

Variable Total_Change_in_Loa2
Title: Total Change in Load
Units: kW-hr/customer
Description: The total change in customer load after installing a storage system relative to the gross customer load (ie, prior to PV or storage).
Definition: Applied_Stored_Grid1 - Applied_PV_RedLoad2 - Dischg_RedLoad_Loss1 - Total_Exported_Elec2
NodeLocation: 272,160,1
NodeSize: 64,40
ValueState: 2,121,109,1277,728,,MIDM

Variable Rates_for_Dispatch2
Title: Rates for Dispatch
Description: The levelized rates used in the storage dispatch.
Definition: Reindex_to_ProfileHr(Rates_Storage_Dispa2)[Profile_Hours=Viewed_Dispatch_Tim2, Rate_Vintage=RateVint_by_RateName[System_Types=Opt_Storage_Systems], PV_Climate_Zone=ClimateZone_for_Rate, PV_Sectors=Sector_for_Rate_Name]
NodeLocation: 416,256,1
NodeSize: 64,40
WindState: 2,98,82,1362,538
ValueState: 2,354,133,1281,645,0,MIDM
Aliases: FormNode Fo1558046586, FormNode Fo1571775092
ReformVal: [Viewed_Dispatch_Tim2,Rate_Component2]
Att_ResultSliceState: [Rate_Names_and_Start,4,Month,2,Opt_Storage_Systems,2,Opt_Sectors,1,Buy_or_Sell_,1,System_Types,1,Area_Type,1,Rate_Component2,1,Viewed_Dispatch_Tim2,1]

Variable Battery_Charge_Disp2
Title: Battery Charge for Dispatch
Units: kWh
Description: The battery's charge level during the viewed dispatch window.
Definition: Reindex_to_ProfileHr(Battery_Charge_EOP)[Profile_Hours=Viewed_Dispatch_Tim2, Rate_Vintage=RateVint_by_RateName[PV_Sectors=Opt_Sector2, PV_Climate_Zone=Opt_Climate_Zone2,System_Types=Opt_Storage_Systems]]
NodeLocation: 416,448,1
NodeSize: 64,40
WindState: 2,0,440,1358,350
ValueState: 2,221,4,1580,855,1,MIDM
Aliases: FormNode Fo1557458967, FormNode Fo1571775091
GraphSetup: Graph_AxisLabelFont:,14,0~
Att_GraphIndexRange Viewed_Dispatch_Tim2:1,,1,,,,,1,122,1
ReformVal: [Viewed_Dispatch_Tim2,Null]
Att_ResultSliceState: [Rate_Names_and_Start,4,Area_Type,1,Viewed_Dispatch_Tim2,1]
Att_ColorRole: Null

Variable PV_Pct_of_Charge2
Title: Pct of Total Battery Charge from PV
Units: fraction
Description: The percentage of the total electricity used to charge the battery that came from PV. This is used to determine the ITC amount for the storage system installed in conjunction with a PV system.
Definition: Divide(Sum(Applied_Stored_PV2 * Monthly_Mults_SeqOpt, Opt_Hours, Seq_Opt_Number, Month), Sum(Total_Charge2  * Monthly_Mults_SeqOpt, Opt_Hours, Seq_Opt_Number, Month), True)
NodeLocation: 560,160,1
NodeSize: 64,40
ValueState: 2,205,43,1105,743,0,MIDM
NumberFormat: 2,%,2,2,0,0,2,0,$,0,"ABBREV",0,,,0,0,15
Att__TotalsIndex: [Opt_Sectors,PV_Sectors]
Att_ResultSliceState: [Opt_Storage_Systems,1,PV_Climate_Zone,1,Rate_Vintage,1,Area_Type,1,PV_Sectors,1,Opt_Sectors,2]

Decision Flows_to_View1
Title: Flows to View
Description: Select the storage dispatch energy flows you wish to view.
Definition: Table(Flow_Name2)(Checkbox(1),Checkbox(1),Checkbox(1),Checkbox(0),Checkbox(0),Checkbox(0),Checkbox(0),Checkbox(0),Checkbox(0),Checkbox(0),Checkbox(1),Checkbox(1),Checkbox(0),Checkbox(0),Checkbox(0))
NodeLocation: 112,584,1
NodeSize: 64,40
DefnState: 2,630,216,416,514,0,DFNM
ValueState: 2,738,244,427,423,0,MIDM
Aliases: FormNode Fo1557458725, FormNode Fo1571775090, FormNode Fo1552348282
TableCellDefault: Checkbox(0)

FormNode Fo1552348282
Title: Flows to View
Definition: 0
NodeLocation: 112,628,1
NodeSize: 56,12
NodeInfo: 1,0,0,0,0,0,0,,0,,0,,,
Original: Flows_to_View1

Index Flow_Types1
Title: Flow Types
Definition: Subset(Flows_to_View1)
NodeLocation: 248,488,1
NodeSize: 64,40
{!40300|Att_SlicerPopupSize: 297,140}

Variable Num_Full_Discharges1
Title: Number of Full Discharges
Units: full discharges
Description: The equivalent number of full discharges over the course of each month. A full discharge is the same amount of energy as can be stored in the battery at full capacity.
Definition: Divide(Sum(Reindex_to_ProfileHr(Applied_Tot_Dischrg * Monthly_Mults_SeqOpt[Month=Opt_Month, Seq_Opt_Number=Opt_Seq_Number]), Profile_Hours), Storage_Capacity[System_Types=Opt_System2, PV_Sectors=Opt_Sector2], True)
NodeLocation: 560,256,1
NodeSize: 64,40
WindState: 2,102,82,1188,409
ValueState: 2,424,46,1053,792,0,MIDM
ReformVal: [Month,Rate_Vintage]
DisplayInputs: Object Object, Object Function, Object Variable, Object Decision, Object Index, Function Divide, Index Profile_Hours, Variable Monthly_Mults_SeqOpt, Variable Storage_Capacity, Index PV_Sectors, Index System_Types, Index Month, Variable Applied_Tot_Dischrg, Decision Opt_Seq_Number, Decision Opt_Sector2, Decision Opt_System2, Index Seq_Opt_Number, Function Reindex_to_ProfileHr
Att__TotalsIndex: [Month]
Att_ResultSliceState: [PV_Sectors,2,PV_Climate_Zone,1,Storage_Systems,1,Rate_Vintage,1,Month,1]

Variable Daily_Charge_Levels1
Title: Daily Charge Levels
Units: kWh
Description: The battery charge levels for each day of the week.
Definition: VAR charge:=Reindex_to_ProfileHr(Battery_Charge_EOP[Rate_Vintage=RateVint_by_RateName[System_Types=Opt_Storage_Systems]]) * ConsecDays_Profile;~
VAR map:=Mod(@Profile_Hours - 1, 24) + 1;   {Maps hour of day to the profile hours}~
Aggregate(charge, TimeOfDay_ProfileHrs, Profile_Hours, Time_of_Day)
NodeLocation: 560,448,1
NodeSize: 64,40
WindState: 2,29,14,1100,666
ValueState: 2,269,35,1413,810,1,MIDM
ReformVal: [Time_of_Day,Days_in_Profile]
Att_ResultSliceState: [Rate_Names_and_Start,16,PV_Sectors,1,PV_Climate_Zone,1,Seq_Opt_Number,2,Days_in_Opt_Window,1,Hour_of_Day,1]

Variable Hourly_Charge_Level1
Title: Hourly Charge Level Pct Dev
Units: fraction
Description: The standard deviation as a percentage of the mean daily battery charge levels for each month.
Definition: VAR meanCharge:=Average(Daily_Charge_Levels1, Days_in_Profile);~
~
Divide(Hourly_Charge_Level_, meanCharge, True)
NodeLocation: 712,552,1
NodeSize: 64,40
WindState: 2,78,539,720,350
ValueState: 2,471,-3,950,682,,MIDM
ReformVal: [Time_of_Day,Month]
NumberFormat: 2,%,4,2,0,0,4,0,$,0,"ABBREV",0,,,0,0,15
Att_ResultSliceState: [Rate_Names_and_Start,18,PV_Sectors,1,PV_Climate_Zone,3,Storage_Systems,1,Month,1,Time_of_Day,1]

Variable Hourly_Charge_Level_
Title: Hourly Charge Level Std Dev
Units: kWh
Description: The standard deviation in daily battery charge levels for each month.
Definition: Sqrt(Variance(Daily_Charge_Levels1, Days_in_Profile))
NodeLocation: 712,448,1
NodeSize: 64,40
WindState: 2,78,539,720,350
ValueState: 2,471,-3,950,682,,MIDM
ReformVal: [Time_of_Day,Month]
NumberFormat: 2,F,4,2,0,0,4,0,$,0,"ABBREV",0,,,0,0,15
Att_ResultSliceState: [Rate_Names_and_Start,18,PV_Sectors,1,PV_Climate_Zone,3,Storage_Systems,1,Month,1,Time_of_Day,1]

FormNode Fo1228179747
Title: Dispatch Flows
Definition: 1
NodeLocation: 772,72,1
NodeSize: 180,16
Original: Dispatch_Flows2

Close Storage_Opt_Diagnos2

Module Profile_Granularity_
Title: Profile Granularity Mappings
Author: JamesMilford
Date: Wed, May 15, 2019 1:43 PM
NodeLocation: 416,160,1
NodeSize: 64,40
DiagState: 2,191,47,1422,703,17,10
NodeColor: 65535,65535,65535

Module Weekly_Opt_Windows
Title: Weekly Opt Window
Author: JamesMilford
Date: Wed, May 1, 2019 11:53 AM
NodeLocation: 88,296,1
NodeSize: 64,40
NodeInfo: 1,0,0,1,1,1,0,,0,,0,,,
DiagState: 2,9,16,889,553,17,10

Variable Weekly_Lookback
Title: Weekly Lookback
Description: The number of hours required to perform a lookback in the optimization window. This is specific to weekly load and solar profiles.
Definition: Throw_Away_Label & Subset(@Day_and_Hour > (Size(Day_and_Hour) - Lead_ThrowAway_Hrs))
NodeLocation: 112,64,1
NodeSize: 64,40
WindState: 2,470,290,720,350
ValueState: 2,56,58,791,601,0,MIDM

Variable Weekly_Lookforward
Title: Weekly Lookforward
Units: hours
Description: The number of hours required to perform a look forward in the optimization window. This is specific to weekly load and solar profiles.
Definition: Throw_Away_Label & Subset(@Day_and_Hour <= End_ThrowAway_Hrs)
NodeLocation: 112,168,1
NodeSize: 64,40
WindState: 2,339,488,720,350
ValueState: 2,72,74,730,536,0,MIDM

Index Possible_OptWind_Wk
Title: Possible Optimization Window
Description: All possible hours that can will be included in the weekly optimization window. Exclamation marks indicate throwaway hours.
Definition: Concat(Concat(Weekly_Lookback, Day_and_Hour), Weekly_Lookforward)
NodeLocation: 112,376,1
NodeSize: 64,40
WindState: 2,517,490,720,350
ValueState: 2,104,0,646,701,0,MIDM

Index Number_SeqOpt_Wk
Title: Number of SeqOpts Weekly
Definition: 1..Ceil(Divide(Size(Day_and_Hour), App_ValidOptWind_Wk),0)
NodeLocation: 264,376,1
NodeSize: 64,40
WindState: 2,253,139,720,350
ValueState: 2,15,119,416,303,0,MIDM

Variable Weekly_Start_Pos
Title: Weekly Start Position
Description: The position in the possible optimization window for which each sequential optimization will begin. This will include a throw-away lookback period, if applicable. This is specific to weekly load and solar profiles.
Definition: IF Number_SeqOpt_Wk = 1~
THEN 1~
ELSE App_ValidOptWind_Wk * (Number_SeqOpt_Wk - 1) + 1
NodeLocation: 432,64,1
NodeSize: 64,40
WindState: 2,288,259,720,350
ValueState: 2,102,132,547,360,0,MIDM

Variable Weekly_ValidStartPos
Title: Weekly Valid Start Position
Description: The position in the possible optimization window for which each sequential optimization's valid optimization decisions will begin. This will never include the throw-away lookback period. This is specific to weekly load and solar profiles.
Definition: IF Number_SeqOpt_Wk = 1~
THEN Lead_ThrowAway_Hrs + 1~
ELSE Weekly_Start_Pos + Lead_ThrowAway_Hrs
NodeLocation: 432,168,1
NodeSize: 64,40
ValueState: 2,9,87,416,303,0,MIDM

Variable Weekly_Valid_End_Pos
Title: Weekly Valid End Position
Description: The position in the possible optimization window for which each sequential optimization's valid optimization decisions will end. This will never include the throw-away look forward period. This is specific to weekly load and solar profiles.
Definition: MIN([Weekly_ValidStartPos + App_ValidOptWind_Wk - 1, Larg_ValidEndPos_Wk])
NodeLocation: 432,272,1
NodeSize: 64,40
ValueState: 2,646,141,416,303,0,MIDM

Variable Weekly_End_Pos
Title: Weekly End Position
Description: The position in the possible optimization window for which each sequential optimization will end. This will include a throw-away look forward period, if applicable. This is specific to weekly load and solar profiles.
Definition: Weekly_Valid_End_Pos + End_ThrowAway_Hrs
NodeLocation: 592,272,1
NodeSize: 64,40
ValueState: 2,266,317,416,303,0,MIDM

Variable Start_End_Pos_Wk
Title: Start and End Positions
Description: The start and end positions in the possible optimization window for each optimization step.
Definition: Table(Position_Type)(Weekly_Start_Pos,Weekly_ValidStartPos,Weekly_Valid_End_Pos,Weekly_End_Pos)
NodeLocation: 592,168,1
NodeSize: 64,40
NodeInfo: 1,1,1,1,1,1,0,0,0,0,,0,1,0
ValueState: 2,963,286,683,515,0,MIDM
ReformVal: [Self,Number_SeqOpt_Wk]

Variable Start_End_Labels_Wk
Title: Start and End Labels
Description: The start and end labels in the possible optimization window for each sequential optimization step.
Definition: SubIndex(@Possible_OptWind_Wk, Start_End_Pos_Wk, Possible_OptWind_Wk)
NodeLocation: 752,168,1
NodeSize: 64,40
ValueState: 2,1073,6,800,653,0,MIDM
ReformVal: [Start_End_Pos_Wk,Number_SeqOpt_Wk]

Variable Larg_ValidEndPos_Wk
Title: Largest Valid End Position
Description: If the valid optimization window length is not a pure multiple of the length of the profile window, then we need to trunctate the final sequential optimization's valid optimization window. As such, this finds the largest end position in the possible optimization window that can be considered in the valid optimization window.
Definition: Size(Day_and_Hour) + Lead_ThrowAway_Hrs
NodeLocation: 272,272,1
NodeSize: 64,40
WindState: 2,22,186,720,350
ValueState: 2,27,297,416,303,,MIDM

Variable App_ValidOptWind_Wk
Title: Applied Valid Opt Window
Units: hours
Description: The applied valid optimization length, given the profile granularity.
Definition: MIN([Size(Day_and_Hour), Valid_OptWind_Length])
NodeLocation: 272,168,1
NodeSize: 64,40
ValueState: 2,449,523,416,303,,MIDM

Variable Weekly_Opt_Window
Title: Weekly Opt Window
Description: Reindexes the possible optimization window to the hours in the monthly optimization window. This is simply to allow array abstraction downstream, and we use the hours in the monthly optimization window because it will always contain the greatest number of hours and ensure that no data is lost during reindexing.
Definition: Slice(Possible_OptWind_Wk, Opt_Window_Hour)
NodeLocation: 112,272,1
NodeSize: 64,40
WindState: 2,628,475,720,350
ValueState: 2,212,218,858,662,,MIDM

Close Weekly_Opt_Windows

Module Day_Type_Opt_Window
Title: Day Type Opt Window
Author: JamesMilford
Date: Wed, May 1, 2019 11:53 AM
NodeLocation: 88,392,1
NodeSize: 64,40
NodeInfo: 1,0,0,1,1,1,0,,0,,0,,,
DiagState: 2,395,31,1023,474,17,10

Variable Day_Type_Lookback
Title: Day Type Lookback
Description: The number of hours required to perform a lookback in the optimization window. This is specific to weekly load and solar profiles.
Definition: VAR pos:=Subset(Weekday_Positions > (Size(Weekday_Positions) - MIN([Lead_ThrowAway_Hrs, 24])));~
Throw_Away_Label & Slice(Day_Type_and_Hour, pos)
NodeLocation: 240,64,1
NodeSize: 64,40
WindState: 2,470,290,720,350
ValueState: 2,56,58,791,601,0,MIDM

Variable Day_Type_Lookforward
Title: Day Type Lookforward
Description: The number of hours required to perform a look forward in the optimization window. This is specific to weekly load and solar profiles.
Definition: VAR pos:=Subset(Weekday_Positions <= MIN([End_ThrowAway_Hrs, 24]));~
Throw_Away_Label & Slice(Day_Type_and_Hour, pos)~

NodeLocation: 240,168,1
NodeSize: 64,40
ValueState: 2,72,74,730,536,0,MIDM

Index Possible_OptWind_Day
Title: Possible Optimization Window
Description: All possible hours that can will be included in the day type optimization window. Exclamation marks indicate throwaway hours.
Definition: IF Max(Number_SeqOpt_Day) = 1~
THEN Concat(Concat(Day_Type_Lookback, Day_Type_and_Hour), Day_Type_Lookforward)~
ELSE Concat(Concat(Concat(Concat(Concat(Day_Type_Lookback, Weekday_Hours), Day_Type_Lookforward), Day_Type_Lookback), Weekend_Hours), Day_Type_Lookforward)
NodeLocation: 88,384,1
NodeSize: 64,40
ValueState: 2,40,13,646,863,0,MIDM

Index Number_SeqOpt_Day
Title: Number of SeqOpts Day
Definition: 1..Ceil(Divide(Size(Day_Type_and_Hour), App_ValidOptWind_Day),0)
NodeLocation: 240,384,1
NodeSize: 64,40
ValueState: 2,457,10,416,303,0,MIDM

Variable Day_Type_Start_Pos
Title: Day Type Start Position
Description: The position in the possible optimization window for which each sequential optimization will begin. This will include a throw-away lookback period, if applicable. This is specific to day type load and solar profiles.
Definition: IF Number_SeqOpt_Day = 1~
THEN 1~
ELSE (App_ValidOptWind_Day + Lead_ThrowAway_Hrs + End_ThrowAway_Hrs) * (Number_SeqOpt_Day - 1) + 1
NodeLocation: 416,64,1
NodeSize: 64,40
WindState: 2,358,332,720,350
ValueState: 2,1110,281,416,303,0,MIDM

Variable DayTyp_ValidStartPos
Title: Day Type Valid Start Position
Description: The position in the possible optimization window for which each sequential optimization's valid optimization decisions will begin. This will never include the leading throw-away period. This is specific to day type load and solar profiles.
Definition: IF Number_SeqOpt_Day = 1~
THEN Lead_ThrowAway_Hrs + 1~
ELSE Day_Type_Start_Pos + Lead_ThrowAway_Hrs
NodeLocation: 568,168,1
NodeSize: 64,40
WindState: 2,213,24,916,461
ValueState: 2,1142,391,416,303,0,MIDM

Variable DayTyp_ValidEndPos
Title: Day Type Valid End Position
Description: The position in the possible optimization window for which each sequential optimization's valid optimization decisions will end. This will never include the throw-away look forward period. This is specific to day type load and solar profiles.
Definition: MIN([DayTyp_ValidStartPos + App_ValidOptWind_Day - 1, Larg_ValidEndPos_Day])
NodeLocation: 568,272,1
NodeSize: 64,40
ValueState: 2,1069,-2,416,303,0,MIDM

Variable Day_Type_End_Pos
Title: Day Type End Position
Description: The position in the possible optimization window for which each sequential optimization's optimization will end. This will include a throw-away look forward period, if applicable. This is specific to weekly load and solar profiles.
Definition: DayTyp_ValidEndPos + End_ThrowAway_Hrs
NodeLocation: 720,272,1
NodeSize: 64,40
WindState: 2,378,469,720,350
ValueState: 2,1227,465,416,303,0,MIDM

Variable Weekday_Positions
Title: Weekday Positions
Description: The positions in the Day Type and Hour index that correspond to weekdays.
Definition: PositionInIndex(Day_Type_and_Hour, Subset(FindInText(Weekday_Label, Day_Type_and_Hour)), Day_Type_and_Hour)
NodeLocation: 88,64,1
NodeSize: 64,40
ValueState: 2,397,93,448,568,0,MIDM

Variable Weekend_Hours
Title: Weekend Hours
Description: The labels in the Day Type and Hour index that correspond to weekdays.
Definition: SubIndex(Day_Type_and_Hour, Subset(FindInText(Weekend_Label, Day_Type_and_Hour)), Day_Type_and_Hour)
NodeLocation: 240,272,1
NodeSize: 64,40
ValueState: 2,397,93,448,568,0,MIDM

Variable Weekday_Hours
Title: Weekday Hours
Description: Labels associated with weekday hours.
Definition: CopyIndex(Slice(Day_Type_and_Hour, Weekday_Positions))
NodeLocation: 88,168,1
NodeSize: 64,40
ValueState: 2,327,0,416,463,0,MIDM

Variable Start_End_Pos_Day
Title: Start and End Positions
Description: The start and end positions in the possible optimization window for each optimization step.
Definition: Table(Position_Type)(Day_Type_Start_Pos,DayTyp_ValidStartPos,DayTyp_ValidEndPos,Day_Type_End_Pos)
NodeLocation: 720,64,1
NodeSize: 64,40
NodeInfo: 1,1,1,1,1,1,0,0,0,0,,0,1,0
WindState: 2,508,483,720,350
ValueState: 2,771,0,745,422,0,MIDM

Variable Start_End_Label_Day
Title: Start and End Labels
Description: The start and end labels in the possible optimization window for each optimization step.
Definition: SubIndex(@Possible_OptWind_Day, Start_End_Pos_Day, Possible_OptWind_Day)
NodeLocation: 872,64,1
NodeSize: 64,40
ValueState: 2,322,8,729,340,0,MIDM
ReformVal: [Start_End_Pos_Wk,Number_SeqOpt_Wk]

Variable Larg_ValidEndPos_Day
Title: Largest Valid End Position
Description: If the valid optimization window length is not a pure multiple of the length of the profile window, then we need to trunctate the final sequential optimization's valid optimization window. As such, this finds the largest end position in the possible optimization window that can be considered in the valid optimization window.
Definition: Size(Day_and_Hour) + Lead_ThrowAway_Hrs
NodeLocation: 416,272,1
NodeSize: 64,40
WindState: 2,22,186,720,350
ValueState: 2,27,297,416,303,,MIDM

Variable App_ValidOptWind_Day
Title: Applied Valid Opt Window
Units: hours
Description: The applied valid optimization length, given the profile granularity.
Definition: MIN([Size(Day_Type_and_Hour), Valid_OptWind_Length])
NodeLocation: 416,168,1
NodeSize: 64,40
WindState: 2,221,533,720,350

Variable Day_Opt_Window
Title: Day Opt Window
Description: Reindexes the possible optimization window to the hours in the monthly optimization window. This is simply to allow array abstraction downstream, and we use the hours in the monthly optimization window because it will always contain the greatest number of hours and ensure that no data is lost during reindexing.
Definition: Slice(Possible_OptWind_Day, Opt_Window_Hour)
NodeLocation: 88,272,1
NodeSize: 64,40
ValueState: 2,795,452,416,478,0,MIDM

Close Day_Type_Opt_Window

FormNode Fo1552494170
Title: Selected Profile Granularity
Definition: 0
NodeLocation: 600,32,1
NodeSize: 256,16
NodeInfo: 1,0,0,1,0,0,0,233,0,,0,,,0
Original: Sel_Profile_Granular

Text Te1556741294
Description: If demand charges are assessed across the month, but the optimization only runs for a 24-hour period, the optimization will simply try to minimize demand in that 24 hour period.
NodeLocation: 140,648,-1
NodeSize: 116,80
NodeInfo: 1,0,0,1,1,1,0,,0,,0,,,
NodeColor: 65535,65535,65535

Module Monthly_Opt_Window
Title: Monthly Opt Window
Author: JamesMilford
Date: Wed, May 1, 2019 11:53 AM
NodeLocation: 88,200,1
NodeSize: 64,40
NodeInfo: 1,0,0,1,1,1,0,,0,,0,,,
DiagState: 2,0,5,945,615,17,10

Variable Monthly_Lookback
Title: Monthly Lookback
Description: The number of hours required to perform a lookback in the optimization window. This is specific to monthly load and solar profiles. Since different months have different number of days, this will always append days from the first week (for proximity) while ensuring consecutive weekdays (eg, mon, tues, wed, etc.).
Definition: Throw_Away_Label & Subset((@Month_Day_and_Hour > (Hours_per_Week - Lead_ThrowAway_Hrs)) AND (@Month_Day_and_Hour <= Hours_per_Week))
NodeLocation: 104,64,1
NodeSize: 64,40
WindState: 2,470,290,981,396
ValueState: 2,1049,256,791,601,0,MIDM

Variable Monthly_Lookforward
Title: Monthly Lookforward
Description: The number of hours required to perform a lookforward in the optimization window. This is specific to monthly load and solar profiles. Since different months have different number of days, this will always append days from the last week (for proximity) while ensuring consecutive weekdays (eg, mon, tues, wed, etc.).
Definition: FOR J:=Month DO (~
   INDEX hours:=Throw_Away_Label & Subset((@Month_Day_and_Hour <= (Hours_in_Month[Month=J] - Hours_per_Week + End_ThrowAway_Hrs)) AND (@Month_Day_and_Hour > (Hours_in_Month[Month=J] - Hours_per_Week)));~
   Slice(hours, @Ending_Hour_Number)~
)
NodeLocation: 104,168,1
NodeSize: 64,40
WindState: 2,98,82,1115,476
ValueState: 2,72,74,1718,536,0,MIDM

Variable Possible_OptWind_Mth
Title: Possible Optimization Window
Description: All possible hours that can will be included in the monthly optimization window. Exclamation marks indicate throwaway hours.
Definition: FOR J:=Month DO (~
   INDEX hoursInMonth:=Subset(@Month_Day_and_Hour <= Hours_in_Month[Month=J]);~
   INDEX concatHrs:=Concat(Concat(Monthly_Lookback, hoursInMonth),  Monthly_Lookforward[Month=J]);~
   Slice(concatHrs, Opt_Window_Hour)~
)
NodeLocation: 272,64,1
NodeSize: 64,40
ValueState: 2,28,112,1471,699,0,MIDM
ReformVal: [Month,Opt_Window_Hour]

Index Number_SeqOpt_Mth
Title: Number of SeqOpts Monthly
Definition: 1..Ceil(Divide(Size(Month_Day_and_Hour), Max(Appl_Valid_Opt_Wind, Month)),0)
NodeLocation: 416,488,1
NodeSize: 64,40
ValueState: 2,15,119,449,482,0,MIDM

Variable Monthly_Start_Pos
Title: Monthly Start Position
Description: The position in the possible optimization window for which the each sequential optimization will begin. This will include a throw-away lookback period, if applicable. This is specific to weekly load and solar profiles.
Definition: VAR start:=IF Number_SeqOpt_Mth = 1~
   THEN 1~
   ELSE Appl_Valid_Opt_Wind * (Number_SeqOpt_Mth - 1) + 1;~
~
IF start >= Hours_in_Month ~
THEN Null~
ELSE start
NodeLocation: 272,168,1
NodeSize: 64,40
WindState: 2,288,259,909,350
ValueState: 2,40,326,1779,439,0,MIDM

Variable Mthly_Valid_StartPos
Title: Monthly Valid Start Position
Description: The position in the possible optimization window for which the valid optimization decisions will begin for each sequential optimization. This will never include the throw-away lookback period. This is specific to weekly load and solar profiles.
Definition: IF Number_SeqOpt_Mth = 1~
THEN Lead_ThrowAway_Hrs + 1~
ELSE Monthly_Start_Pos + Lead_ThrowAway_Hrs
NodeLocation: 440,224,1
NodeSize: 64,40
ValueState: 2,125,346,1218,435,0,MIDM

Variable Mthly_Valid_End_Pos
Title: Monthly Valid End Position
Description: The position in the possible optimization window for which the valid optimization decisions for each sequential optimization will end. This will never include the throw-away look forward period. This is specific to weekly load and solar profiles.
Definition: IF Mthly_Valid_StartPos = Null~
THEN Null~
ELSE MIN([Mthly_Valid_StartPos + Appl_Valid_Opt_Wind - 1, Larg_ValidEndPos_Mth])
NodeLocation: 440,368,1
NodeSize: 64,40
ValueState: 2,357,59,1485,674,0,MIDM

Variable Monthly_End_Position
Title: Monthly End Position
Description: The position in the possible optimization window for which each sequential optimization will end. This will include a throw-away look forward period, if applicable. This is specific to weekly load and solar profiles.
Definition: Mthly_Valid_End_Pos + End_ThrowAway_Hrs
NodeLocation: 608,368,1
NodeSize: 64,40
ValueState: 2,266,317,1496,589,0,MIDM

Variable Start_End_Pos_Mth
Title: Start and End Positions
Description: The start and end positions in the possible optimization window for each optimization step.
Definition: Table(Position_Type)(Monthly_Start_Pos,Mthly_Valid_StartPos,Mthly_Valid_End_Pos,Monthly_End_Position)
NodeLocation: 608,168,1
NodeSize: 64,40
NodeInfo: 1,1,1,1,1,1,0,0,0,0,,0,1,0
WindState: 2,113,227,1138,666
ValueState: 2,422,117,1322,652,0,MIDM
ReformVal: [Position_Type,Number_SeqOpt_Mth]
Att_ResultSliceState: [Month,1,Number_SeqOpt_Mth,1,Position_Type,1]

Variable Start_End_Label_Mth
Title: Start and End Labels
Description: The start and end labels in the possible optimization window for each optimization step.
Definition: Possible_OptWind_Mth[@Opt_Window_Hour=Start_End_Pos_Mth]
NodeLocation: 744,64,1
NodeSize: 64,40
ValueState: 2,444,16,1357,771,0,MIDM
ReformVal: [Position_Type,Number_SeqOpt_Mth]
Att_ResultSliceState: [Month,2,Number_SeqOpt_Mth,1,Position_Type,1]

Variable Larg_ValidEndPos_Mth
Title: Largest Valid End Position
Description: If the valid optimization window length is not a pure multiple of the length of the profile window, then we need to trunctate the final sequential optimization's valid optimization window. As such, this finds the largest end position in the possible optimization window that can be considered in the valid optimization window.
Definition: Hours_in_Month + Lead_ThrowAway_Hrs
NodeLocation: 272,368,1
NodeSize: 64,40
WindState: 2,22,186,720,350
ValueState: 2,27,297,1025,570,0,MIDM

Variable Appl_Valid_Opt_Wind
Title: Applied Valid Opt Window
Units: hours
Description: The applied valid optimization length, given the profile granularity. This takes the minimum of the valid optimization window length or the number of hours in the month.
Definition: MIN([Hours_in_Month, Valid_OptWind_Length])
NodeLocation: 272,272,1
NodeSize: 64,40
WindState: 2,147,459,720,350
ValueState: 2,260,266,437,355,0,MIDM

Variable Hours_in_Month
Title: Hours in Month
Units: hours/month
Description: The number of hours in the month for an average year (e.g. 365.25 days/year)
Definition: Floor(Days_per_Month, 0) * Hours_per_Day 
NodeLocation: 104,272,1
NodeSize: 64,40
WindState: 2,98,82,991,405
ValueState: 2,15,552,416,322,0,MIDM

Index Ending_Hour_Number
Title: Ending Hour Number
Definition: 1..End_ThrowAway_Hrs
NodeLocation: 112,488,1
NodeSize: 64,40
ValueState: 2,218,129,416,676,0,MIDM

Index Opt_Window_Hour
Title: Opt Window Hour
Definition: VAR end:=Lead_ThrowAway_Hrs + Max(Hours_in_Month, Month)  + End_ThrowAway_Hrs;~
1..end
NodeLocation: 264,488,1
NodeSize: 64,40
ValueState: 2,218,129,416,676,0,MIDM

Close Monthly_Opt_Window

Objective Start_and_End_Pos
Title: Start and End Positions
Description: The start and end positions in the possible optimization window for each optimization step.
Definition: Table(Profile_Granularity)(Handle(Start_End_Pos_Mth),Handle(Start_End_Pos_Wk),Handle(Start_End_Pos_Day))
NodeLocation: 240,400,1
NodeSize: 64,40
WindState: 2,15,78,720,350
DefnState: 2,19,181,416,303,0,DFNM
NodeColor: 19661,48336,65535

Objective Start_and_End_Labels
Title: Start and End Labels
Description: Handles to the "Start and End Labels" variables for each profile granularity.
Definition: Table(Profile_Granularity)(Handle(Start_End_Label_Mth),Handle(Start_End_Labels_Wk),Handle(Start_End_Label_Day))
NodeLocation: 240,192,1
NodeSize: 64,40
NodeColor: 19661,48336,65535

Variable App_Start_End_Pos
Title: Applied Start and End Positions
Description: The start and end positions in the possible optimization window for each optimization step of the selected profile granularity.
Definition: VAR pos:=Start_and_End_Pos[Profile_Granularity=Sel_Profile_Granular];~
LocalAlias ind:=Number_SeqOpt_Handle[Profile_Granularity=Sel_Profile_Granular];~
pos[ind=Seq_Opt_Number]
NodeLocation: 392,400,1
NodeSize: 64,40
WindState: 2,98,82,873,350
ValueState: 2,494,9,595,618,0,MIDM
ReformVal: [Position_Type,Number_SeqOpt_Mth]
Att_ResultSliceState: [Month,2,Seq_Opt_Number,1,Position_Type,1]

Variable App_Start_End_Labels
Title: Applied Start and End Labels
Description: The start and end labels in the possible optimization window for each optimization step of the selected profile granularity.
Definition: VAR label:=Start_and_End_Labels[Profile_Granularity=Sel_Profile_Granular];~
LocalAlias ind:=Number_SeqOpt_Handle[Profile_Granularity=Sel_Profile_Granular];~
Remove_ThrowAway(label[ind=Seq_Opt_Number])
NodeLocation: 392,296,1
NodeSize: 64,40
ValueState: 2,364,189,635,703,0,MIDM
ReformVal: [Position_Type,Number_SeqOpt_Mth]

Variable Valid_Opt_Hrs_SeqOpt
Title: Valid Opt Hours for Seq Opt
Description: The labels for the valid hours in the optimization window.
Definition: Possible_Opt_Window[@Opt_Window_Hour=Valid_Pos_Seq_Opt]
NodeLocation: 872,296,1
NodeSize: 64,40
ValueState: 2,9,7,1719,410,0,MIDM
ReformVal: [Sys_LocalIndex('Hours_in_Window'),Seq_Opt_Number]
Att_ResultSliceState: [Month,5,Seq_Opt_Number,1,Valid_Opt_Hours,1]

Objective Number_SeqOpt_Handle
Title: Number Seq Opt Handles
Description: Handles to the "Number of Sequential Opt" indices for each profile granularity.
Definition: Table(Profile_Granularity)(Handle(Number_SeqOpt_Mth),Handle(Number_SeqOpt_Wk),Handle(Number_SeqOpt_Day))
NodeLocation: 240,296,1
NodeSize: 64,40
ValueState: 2,164,170,416,303,0,MIDM
NodeColor: 19661,48336,65535
MetaOnly: 0

Variable Opt_Hours_for_SeqOpt
Title: Opt Hours for Seq Opt
Description: The labels for the hours included in each sequential optimization window.
Definition: Possible_Opt_Window[@Opt_Window_Hour=Position_for_Seq_Opt];~
~

NodeLocation: 872,496,1
NodeSize: 64,40
ValueState: 2,183,16,1440,823,0,MIDM
ReformVal: [Seq_Opt_Number,Opt_Hours]
Att_ResultSliceState: [Month,6,Opt_Hours,1,Seq_Opt_Number,1]

Objective Possible_Opt_Window_
Title: Possible Opt Window Handles
Description: Handles to the possible optimization window indices for each profile granularity.
Definition: Table(Profile_Granularity)(Handle(Possible_OptWind_Mth),Handle(Weekly_Opt_Window),Handle(Day_Opt_Window))
NodeLocation: 552,400,1
NodeSize: 64,40
WindState: 2,98,82,953,497
DefnState: 2,260,266,734,303,0,DFNM
ValueState: 2,161,277,1497,726,0,MIDM
NodeColor: 19661,48336,65535
Att_ResultSliceState: [Profile_Granularity,1,Month,1,Opt_Window_Hour,1]
MetaOnly: 0

Variable Possible_Opt_Window
Title: Possible Opt Window
Description: The labels for all possible optimization hours in the current sequential optimization.
Definition: VAR window:=Possible_Opt_Window_[Profile_Granularity=Sel_Profile_Granular];~
Remove_ThrowAway(window)
NodeLocation: 712,400,1
NodeSize: 64,40
WindState: 2,98,82,868,575
ValueState: 2,495,4,939,688,0,MIDM

Text Te1556820511
Description: If optimizing one day at a time, we still need to include an ending throw away day to prevent end effects, or we need to impose an ending charge level constraint.
NodeLocation: 380,648,-1
NodeSize: 116,80
NodeInfo: 1,0,0,1,1,1,0,,0,,0,,,
NodeColor: 65535,65535,65535

Variable Opt_Hr_for_Valid_Hr
Title: Opt Hour for Valid Hour
Description: The hour in the Opt Hours index associated with the hours included in the valid sequential optimization window.
Definition: IF Valid_Pos_Seq_Opt = Null~
THEN Null~
ELSE SubIndex(Position_for_Seq_Opt, Valid_Pos_Seq_Opt, Opt_Hours)
NodeLocation: 872,400,1
NodeSize: 64,40
ValueState: 2,135,233,1647,662,0,MIDM
ReformVal: [Valid_Opt_Hours,Seq_Opt_Number]
Att_ResultSliceState: [Month,1,Seq_Opt_Number,1,Valid_Opt_Hours,1]

Variable Valid_Pos_Seq_Opt
Title: Valid Position for Seq Opt
Description: The position of valid hours in each step of the sequential optimization.
Definition: VAR start:=App_Start_End_Pos[@Position_Type=2];~
VAR end:=App_Start_End_Pos[@Position_Type=3];~
VAR pos:=start + @Valid_Opt_Hours - 1;~
~
IF pos > end~
THEN Null~
ELSE pos
NodeLocation: 552,296,1
NodeSize: 64,40
ValueState: 2,9,7,1719,641,0,MIDM
ReformVal: [Sys_LocalIndex('Hours_in_Window'),Seq_Opt_Number]
Att_ResultSliceState: [Month,2,Seq_Opt_Number,1,Valid_Opt_Hours,1]

Variable Position_for_Seq_Opt
Title: Position for Seq Opt
Description: The positions in the Opt Window Hours index associated with hours included in the sequential optimization windows.
Definition: VAR start:=IF Seq_Opt_Number=1~
   THEN App_Start_End_Pos[@Position_Type=1]~
   ELSE App_Start_End_Pos[@Position_Type=2];~
VAR end:=App_Start_End_Pos[@Position_Type=4];~
VAR pos:=start + @Opt_Hours - 1;~
~
IF pos > end~
THEN Null~
ELSE pos~

NodeLocation: 712,496,1
NodeSize: 64,40
WindState: 2,18,58,720,350
ValueState: 2,16,251,1719,637,0,MIDM
ReformVal: [Sys_LocalIndex('Hours_in_Window'),Seq_Opt_Number]
Att_ResultSliceState: [Month,7,Seq_Opt_Number,1,Opt_Hours,1]

Variable Consec_Days_SeqOpt
Title: Consecutive Days in SeqOpt
Units: boolean
Description: Maps consecutive 24-hour days included in the optimization window.
Definition: Ceil(@Opt_Hours/24) = Days_in_Opt_Window;
NodeLocation: 1032,296,1
NodeSize: 64,40
WindState: 2,98,82,903,505
ValueState: 2,453,1,1176,637,0,MIDM
ReformVal: [Days_in_Opt_Window,Opt_Hours]
Att_ResultSliceState: [Seq_Opt_Number,1,Days_in_Opt_Window,1,Opt_Hours,1]

Variable OptHr_LastValid_Hr
Title: Opt Hour of Last Valid Hour
Description: The hour corresponding to the last valid hour in the optimization window.
Definition: Opt_Hr_for_Valid_Hr[Valid_Opt_Hours=ArgMax(Valid_Pos_Seq_Opt, Valid_Opt_Hours)]
NodeLocation: 712,296,1
NodeSize: 64,40
ValueState: 2,357,3,1183,326,0,MIDM

Variable OptHr_FirstValid_Hr
Title: Opt Hour of First Valid Hour
Description: The hour in the Opt Hours index corresponding to the first valid hour of the sequential optimization window.
Definition: Opt_Hr_for_Valid_Hr[Valid_Opt_Hours=1]
NodeLocation: 1032,400,1
NodeSize: 64,40
ValueState: 2,404,410,416,303,0,MIDM

FormNode Fo1557428166
Title: Leading Throw-Away Hours
Definition: 0
NodeLocation: 600,192,1
NodeSize: 256,16
NodeInfo: 1,0,0,1,0,0,0,72,0,,0,,,
Original: Lead_ThrowAway_Days

FormNode Fo1557428167
Title: Ending Throw-Away Hours
Definition: 0
NodeLocation: 600,224,1
NodeSize: 256,16
NodeInfo: 1,0,0,1,0,0,0,72,0,,0,,,
Original: End_ThrowAway_Days

FormNode Fo1557428168
Title: Valid Opt Window Length
Definition: 0
NodeLocation: 600,160,1
NodeSize: 256,16
NodeInfo: 1,0,0,1,0,0,0,72,0,,0,,,
Original: Opt_Window_Length

FormNode Fo1557428305
Title: Valid Opt Window Length
Definition: 0
NodeLocation: 600,64,1
NodeSize: 256,16
NodeInfo: 1,0,0,1,0,0,0,233,0,,0,,,0
Original: App_SOC_Constraint

FormNode Fo1557428306
Title: Valid Opt Window Length
Definition: 0
NodeLocation: 600,96,1
NodeSize: 256,16
NodeInfo: 1,0,0,1,0,0,0,233,0,,0,,,0
Original: App_Initial_SOC_Type

Text Te1557506110
Description: In diagnostic outputs that map vintages (eg, flows, battery charge, etc), slice out the indices for the applied optimization filters
NodeLocation: 620,700,-1
NodeSize: 116,60
NodeInfo: 1,0,0,1,1,1,0,,0,,0,,,
NodeColor: 65535,65535,65535

Text Te1557506149
Description: See if Reindex to Profile Hours can be sped up.
NodeLocation: 620,600,-1
NodeSize: 116,32
NodeInfo: 1,0,0,1,1,1,0,,0,,0,,,
NodeColor: 65535,65535,65535

Module Auxiliary_Variables
Title: Auxiliary Variables
Author: JamesMilford
Date: Tue, Oct 22, 2019 3:50 PM
NodeLocation: 88,488,1
NodeSize: 64,40
NodeInfo: 1,0,0,1,1,1,0,,0,,0,,,
DiagState: 2,386,182,1094,584,17,10

Variable Valid_OptWind_Length
Title: Valid Opt Window Length
Units: hours
Description: The length of the valid optimization window in hours.
Definition: Opt_Window_Length * Hours_per_Day
NodeLocation: 896,328,1
NodeSize: 64,40
WindState: 2,8,58,989,483

Variable Lead_ThrowAway_Hrs
Title: Leading Throw-Away Hours
Units: hours
Description: The number of hours added to the front-end of the valid optimization window to avoid initialization effects. These hours are discarded in the final results.
Definition: Lead_ThrowAway_Days * Hours_per_Day * (App_SOC_Constraint = No_Constraint_Label)
NodeLocation: 896,88,1
NodeSize: 64,40

Variable End_ThrowAway_Hrs
Title: Ending Throw-Away Hours
Units: hours
Description: The number of hours added to the back-end of the valid optimization window to avoid end effects. These hours are discarded in the final results.
Definition: End_ThrowAway_Days * Hours_per_Day * (App_SOC_Constraint = No_Constraint_Label)
NodeLocation: 896,208,1
NodeSize: 64,40

Decision Throw_Away_Label
Title: Throw Away Label
Definition: "!"
NodeLocation: 568,208,1
NodeSize: 64,40
Aliases: FormNode Fo1571365625

Function Remove_ThrowAway(text)
Title: Remove Throw Away Label
Description: Removes the "Throw Away Label" from a text string.~
~
[text]: a text string
Definition: TextReplace(text, Throw_Away_Label, "")
NodeLocation: 408,280,1
NodeSize: 64,40

Alias Al1552494170
Title: Selected Profile Granularity
Definition: 1
NodeLocation: 568,328,1
NodeSize: 64,40
Original: Sel_Profile_Granular

Index Day_of_Month
Title: Day of Month
Definition: 1..31
NodeLocation: 96,472,1
NodeSize: 64,40
ValueState: 2,56,58,671,609,0,MIDM

Decision Day_Label
Title: Day Label
Definition: "Day"
NodeLocation: 568,88,1
NodeSize: 64,40
Aliases: FormNode Fo1571365627

Index Month_Day_and_Hour
Title: Month Day and Hour
Definition: VAR textVals:=Day_Label & Day_of_Month & Time_Separator & Time_of_Day;~
~
CopyIndex(ConcatRows(textVals, Day_of_Month, Time_of_Day))
NodeLocation: 96,376,1
NodeSize: 64,40
WindState: 2,21,512,720,350
ValueState: 2,23,25,1224,647,0,MIDM
{!40300|Att_SlicerPopupSize: 237,1001}

Index Profile_Granularity
Att_PrevIndexValue: ['Monthly Time Series','Representative Week','Representative Day Type']
Title: Profile Granularity
Definition: ['Monthly Time Series','Representative Week','Representative Day Type']
NodeLocation: 96,280,1
NodeSize: 64,40

Index Position_Type
Att_PrevIndexValue: ['Start Position','Valid Start Position','Valid End Position','End Position']
Title: Position Type
Definition: ['Start Position','Valid Start Position','Valid End Position','End Position']
NodeLocation: 248,280,1
NodeSize: 64,40

Index Seq_Opt_Number
Att_PrevIndexValue: [1]
Title: Sequential Opt Number
Definition: VAR ind:=Number_SeqOpt_Handle[Profile_Granularity=Sel_Profile_Granular];~
CopyIndex(ind)
NodeLocation: 248,376,1
NodeSize: 64,40
WindState: 2,58,531,1071,354
ValueState: 2,228,234,488,688,0,MIDM
DisplayOutputs: Object Object, Object Variable, Variable Num_Full_Discharges1
{!40300|Att_SlicerPopupSize: 262,64}

Index Valid_Opt_Hours
Title: Valid Opt Hours
Definition: VAR start:=Max(App_Start_End_Pos[@Position_Type=2], Month);~
VAR end:=Max(App_Start_End_Pos[@Position_Type=3], Month);~
VAR cnt:=MAX(end - start + 1, Seq_Opt_Number);~
1..cnt
NodeLocation: 96,568,1
NodeSize: 64,40
ValueState: 2,52,58,693,471,0,MIDM

Index Opt_Hours
Title: Opt Hours
Definition: VAR start:=Max(App_Start_End_Pos[@Position_Type=1], Month);~
VAR end:=Max(App_Start_End_Pos[@Position_Type=4], Month);~
VAR cnt:=MAX(end - start + 1, Seq_Opt_Number);~
1..cnt
NodeLocation: 248,472,1
NodeSize: 64,40
ValueState: 2,52,58,463,471,0,MIDM
{!40300|Att_SlicerPopupSize: 227,1001}

Function Reindex_to_ProfileHr(data)
Title: Reindex to Profile Hours
Description: Reindexes data indexed by "Number of Sequential Opts" and "Opt Hours" to "Profile Hours".~
~
[data]: data indexed by "Number of Sequential Opts" and "Opt Hours"
Definition: VAR mapped_data:=FOR J:=Seq_Opt_Number DO (~
   VAR matches:=SubIndex(Valid_Opt_Hrs_SeqOpt[Seq_Opt_Number=J, Month=Opt_Month2], Profile_Hours, Valid_Opt_Hours);~
   data[Seq_Opt_Number=J, Opt_Hours=Opt_Hr_for_Valid_Hr[Seq_Opt_Number=J, Month=Opt_Month2, Valid_Opt_Hours=matches]]~
);~
Sum(mapped_data, Seq_Opt_Number)
NodeLocation: 408,88,1
NodeSize: 64,40
WindState: 2,-21,336,1002,449
DisplayOutputs: Object Object, Object Variable, Variable Num_Full_Discharges1

Function Reindex_to_Valid_Hrs(data)
Title: Reindex to Valid Hours
Description: Reindexes data from "Opt Hours" to "Valid Opt Hours". However, if data is not indexed by "Opt Hours", then it returns the data in its original form.
Definition: INDEX all_indices:=IndexesOf(data);~
~
IF PositionInIndex(all_indices, Handle(Opt_Hours), all_indices)~
THEN data[Opt_Hours=Opt_Hr_for_Valid_Hr]~
ELSE data
NodeLocation: 408,184,1
NodeSize: 64,40
WindState: 2,9,150,720,350

Index Days_in_Opt_Window
Title: Days in Opt Window
Definition: 1..Ceil(SIze(Opt_Hours) / 24, 0)
NodeLocation: 248,184,1
NodeSize: 64,40

Index SOC_Constraints
Att_PrevIndexValue: ['No constraint','Optimization window']
Title: State of Charge Constraints
Definition: ['No constraint','Optimization window']
NodeLocation: 96,88,1
NodeSize: 64,40

Index SOC_Initializ_Type
Att_PrevIndexValue: ['Exogenous','Full Charge','Optimized']
Title: SOC Initialization Type
Definition: ['Exogenous','Full Charge','Optimized']
IndexVals: ['item 1']
NodeLocation: 96,184,1
NodeSize: 64,40

Decision No_Constraint_Label
Title: No Constraint Label
Definition: Choice(SOC_Constraints,1,0)
NodeLocation: 728,88,1
NodeSize: 64,40
WindState: 2,36,287,905,483
Aliases: FormNode Fo1557353306

FormNode Fo1557353306
Title: Valid Opt Window Length
Definition: 0
NodeLocation: 736,136,1
NodeSize: 80,16
NodeInfo: 1,0,0,0,0,0,0,118,0,,0,,,
Original: No_Constraint_Label

Variable Profile_Hr_Reindex_T
Title: Profile Hr Reindex Test
Description: Tests that a variable indexed by Opt Hours is appropriately reindexed to Profile Hours. Profile Hours does not include any of the optimization indices.
Definition: Reindex_to_ProfileHr(Opt_Customer_Load)
NodeLocation: 408,472,1
NodeSize: 64,40
WindState: 2,98,82,1076,509
ValueState: 2,197,4,1529,873,1,MIDM
Att_ResultSliceState: [PV_Sectors,1,PV_Climate_Zone,1,Storage_Systems,1,Month,2,Profile_Hours,1]

Variable Valid_Hr_Reindex_Tes
Title: Valid Hr Reindex Test
Description: Tests that a variable indexed by Opt Hours is appropriately reindexed to Valid Opt Hours. Valid Opt Hours does not include "throw away" hours.
Definition: Reindex_to_Valid_Hrs(Opt_Customer_Load)
NodeLocation: 408,376,1
NodeSize: 64,40
WindState: 2,98,82,1133,432
ValueState: 2,210,153,1291,617,,MIDM
ReformVal: [Valid_Opt_Hours,Null]
Att_ResultSliceState: [Seq_Opt_Number,3,Valid_Opt_Hours,1]
Att_ColorRole: Null

Index Index_Mapping_Handle
Title: Index Mapping Handles
Definition: [Valid_Opt_Hours,Seq_Opt_Number]
NodeLocation: 248,88,1
NodeSize: 64,40
MetaOnly: 1

Decision Exogenous_Label
Title: Exogenous Label
Definition: Choice(SOC_Initializ_Type,1,0)
NodeLocation: 728,208,1
NodeSize: 64,40
WindState: 2,790,14,985,504
Aliases: FormNode Fo1557427501

FormNode Fo1557427501
Title: Valid Opt Window Length
Definition: 0
NodeLocation: 744,256,1
NodeSize: 80,16
NodeInfo: 1,0,0,0,0,0,0,118,0,,0,,,
Original: Exogenous_Label

Decision WindConstraint_Label
Title: Window Constraint Label
Definition: Choice(SOC_Constraints,2,0)
NodeLocation: 568,440,1
NodeSize: 64,40
WindState: 2,36,287,905,483
Aliases: FormNode Fo1557952248

FormNode Fo1557952248
Title: Valid Opt Window Length
Definition: 0
NodeLocation: 576,488,1
NodeSize: 80,16
NodeInfo: 1,0,0,0,0,0,0,118,0,,0,,,
Original: WindConstraint_Label

FormNode Fo1571365625
Title: Throw Away Label
Definition: 0
NodeLocation: 576,256,1
NodeSize: 80,16
NodeInfo: 1,0,0,0,0,0,0,118,0,,0,,,
Original: Throw_Away_Label

FormNode Fo1571365626
Title: Selected Profile Granularity
Definition: 0
NodeLocation: 576,376,1
NodeSize: 80,16
NodeInfo: 1,0,0,0,0,0,0,118,0,,0,,,
Original: Sel_Profile_Granular

FormNode Fo1571365627
Title: Day Label
Definition: 0
NodeLocation: 576,136,1
NodeSize: 80,16
NodeInfo: 1,0,0,0,0,0,0,118,0,,0,,,
Original: Day_Label

Decision Full_Charge_Label
Title: Full Charge Label
Definition: Choice(SOC_Initializ_Type,2,0)
NodeLocation: 728,328,1
NodeSize: 64,40
WindState: 2,790,14,985,504
Aliases: FormNode Fo1571688844

FormNode Fo1571688844
Title: Valid Opt Window Length
Definition: 0
NodeLocation: 744,376,1
NodeSize: 80,16
NodeInfo: 1,0,0,0,0,0,0,118,0,,0,,,
Original: Full_Charge_Label

Decision Optim_Charge_Label
Title: Optimized Charge Label
Definition: Choice(SOC_Initializ_Type,3,0)
NodeLocation: 728,440,1
NodeSize: 64,40
WindState: 2,790,14,985,504
Aliases: FormNode Fo1571688858

FormNode Fo1571688858
Title: Valid Opt Window Length
Definition: 0
NodeLocation: 744,488,1
NodeSize: 80,16
NodeInfo: 1,0,0,0,0,0,0,118,0,,0,,,
Original: Optim_Charge_Label

Variable ConsecDays_Profile
Title: Consecutive Days in Profile
Units: boolean
Description: Maps consecutive 24-hour days included in the applied profile hours.
Definition: Ceil(@Profile_Hours/24) = Days_in_Profile;
NodeLocation: 408,568,1
NodeSize: 64,40
WindState: 2,98,82,903,505
ValueState: 2,453,1,1176,637,0,MIDM
ReformVal: [Days_in_Opt_Window,Opt_Hours]
Att_ResultSliceState: [Seq_Opt_Number,1,Days_in_Opt_Window,1,Opt_Hours,1]

Index Days_in_Profile
Title: Days in Profile
Definition: 1..Ceil(SIze(Profile_Hours) / 24, 0)
NodeLocation: 248,568,1
NodeSize: 64,40

Close Auxiliary_Variables

FormNode Fo1571352059
Title: Active Opt Number
Definition: 0
NodeLocation: 600,128,1
NodeSize: 256,16
NodeInfo: 1,0,0,1,0,0,0,72,0,,0,,,0
Original: Opt_Seq_Number

Variable Days_in_Seq_Opt
Title: Days in Sequential Opt
Units: days
Description: The number of days incuded in the sequential optimization window. This varies by sequential opt number when the monthly time-series granularity is selected.
Definition: Sum(Opt_Hours_for_SeqOpt <> Null, Opt_Hours) / Hours_per_Day
NodeLocation: 1032,496,1
NodeSize: 64,40
WindState: 2,98,82,849,350
ValueState: 2,396,275,982,624,0,MIDM
Att_ResultSliceState: [Seq_Opt_Number,7,Month,1,Opt_Hours,1]

Variable Mthly_Scaling_SeqOpt
Title: Monthly Scaling for Seq Opt
Units: windows/month
Description: The scaling factor to convert the number of days in each sequential optimization window into an equivalent month. This is used to estimate energy charges and credits included in the storage objective function. This ensures that energy costs/credits are represented on a monthly level to be on a same unit basis as demand charges (i.e., monthly).~
~
e.g. [days/month] / [days/window] = [windows/month]
Definition: Divide(Days_per_Month, Days_in_Seq_Opt, True)
NodeLocation: 1184,496,1
NodeSize: 64,40
WindState: 2,32,355,884,489
ValueState: 2,593,351,906,424,0,MIDM

Variable Days_in_Valid_SeqOpt
Title: Days in Valid Seq Opt
Units: days
Description: The number of days incuded in the sequential optimization window based on valid hours only (ie, not throwaway hours). This varies by sequential opt number when the monthly time-series granularity is selected.
Definition: Sum(Opt_Hr_for_Valid_Hr <> Null, Valid_Opt_Hours) / Hours_per_Day
NodeLocation: 1184,400,1
NodeSize: 64,40
WindState: 2,98,82,849,350
ValueState: 2,396,275,982,624,0,MIDM
Att_ResultSliceState: [Seq_Opt_Number,7,Month,1,Opt_Hours,1]

Variable MthlyScale_ValidOpt
Title: Monthly Scaling for Valid Seq Opt
Units: windows/month
Description: The scaling factor to convert the number of valid days in each sequential optimization window into an equivalent month. ~
~
e.g. [days/month] / [days/window] = [windows/month]
Definition: Divide(Days_per_Month, Days_in_Valid_SeqOpt, True)
NodeLocation: 1328,400,1
NodeSize: 64,40
WindState: 2,32,355,884,489
ValueState: 2,180,290,906,623,0,MIDM

Close Profile_Granularity_

Close Storage_Dispatch_Opt

